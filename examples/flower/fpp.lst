PC     Output      Line
040000             0001  ;
040000             0002  ; Title:	BBC Basic Interpreter - Z80 version
040000             0003  ;		Z80 Floating Point Package
040000             0004  ; Author:	(C) Copyright  R.T.Russell  1986
040000             0005  ; Modified By:	Dean Belfield
040000             0006  ; Created:	03/05/2022
040000             0007  ; Last Updated:	07/06/2023
040000             0008  ;
040000             0009  ; Modinfo:
040000             0010  ; 26/10/1986:	Version 0.0
040000             0011  ; 14/12/1988:	Vesion 0.1 (Bug Fix)
040000             0012  ; 12/05/2023:	Modified by Dean Belfield
040000             0013  ; 07/06/2023:	Modified to run in ADL mode
040000             0014  
040000             0015  			; .ASSUME	ADL = 1
040000             0016  
040000             0017  			; SEGMENT CODE
040000             0018  
040000             0019  			; XDEF	FPP
040000             0020  			; XDEF	DLOAD5
040000             0021  			; XDEF	DLOAD5_SPL
040000             0022  ;
040000             0023  ;BINARY FLOATING POINT REPRESENTATION:
040000             0024  ;   32 BIT SIGN-MAGNITUDE NORMALIZED MANTISSA
040000             0025  ;    8 BIT EXCESS-128 SIGNED EXPONENT
040000             0026  ;   SIGN BIT REPLACES MANTISSA MSB (IMPLIED "1")
040000             0027  ;   MANTISSA=0 & EXPONENT=0 IMPLIES VALUE IS ZERO.
040000             0028  ;
040000             0029  ;BINARY INTEGER REPRESENTATION:
040000             0030  ;   32 BIT 2'S-COMPLEMENT SIGNED INTEGER
040000             0031  ;    "EXPONENT" BYTE = 0 (WHEN PRESENT)
040000             0032  ;
040000             0033  ;NORMAL REGISTER ALLOCATION: MANTISSA - HLH'L'
040000             0034  ;                            EXPONENT - C
040000             0035  ;ALTERNATE REGISTER ALLOCATION: MANTISSA - DED'E'
040000             0036  ;                               EXPONENT - B
040000             0037  
040000             0038  ;
040000             0039  ;Error codes:
040000             0040  ;
040000             0041  
040000             0042  BADOP:			EQU     1               ;Bad operation code
040000             0043  DIVBY0:			EQU     18              ;Division by zero
040000             0044  TOOBIG:			EQU     20              ;Too big
040000             0045  NGROOT:			EQU     21              ;Negative root
040000             0046  LOGRNG:			EQU     22              ;Log range
040000             0047  ACLOST:			EQU     23              ;Accuracy lost
040000             0048  EXPRNG:			EQU     24              ;Exp range
040000             0049  ;
040000             0050  ;Call entry and despatch code:
040000             0051  ;
040000 FD E5       0052  FPP:			PUSH    IY              ;Save IY
040002 FD 21 00 00 0053          		LD      IY,0
       00          
040007 FD 39       0054          		ADD     IY,SP           ;Save SP in IY
040009 CD 19 00 04 0055          		CALL    OP              ;Perform operation
04000D BF          0056          		CP      A               ;Good return (Z, NC)
04000E FD E1       0057  EXIT_:			POP     IY              ;Restore IY
040010 C9          0058          		RET                     ;Return to caller
040011             0059  ;
040011             0060  ;Error exit:
040011             0061  ;
040011 3E 01       0062  BAD:			LD      A,BADOP         ;"Bad operation code"
040013 FD F9       0063  ERROR_:			LD      SP,IY           ;Restore SP from IY
040015 B7          0064          		OR      A               ;Set NZ
040016 37          0065          		SCF                     ;Set C
040017 18 F5       0066          		JR      EXIT_
040019             0067  ;
040019             0068  ;Perform operation or function:
040019             0069  ;
040019 FE 2A       0070  OP:			CP      RTABLE-DTABLE/3
04001B 30 F4       0071          		JR      NC,BAD
04001D FE 10       0072          		CP      FTABLE-DTABLE/3
04001F 30 08       0073          		JR      NC,DISPAT
040021 08          0074          		EX      AF,AF'
040022 78          0075          		LD      A,B
040023 B1          0076          		OR      C               ;Both integer?
040024 C4 2C 0B 04 0077          		CALL    NZ,FLOATA       ;No, so float both
040028 08          0078          		EX      AF,AF'
040029 E5          0079  DISPAT:			PUSH    HL
04002A 21 3C 00 04 0080          		LD      HL,DTABLE
04002E C5          0081          		PUSH    BC
04002F 01 03 00 00 0082  			LD	BC, 3		; C = 3
040033 47          0083  			LD	B, A 		; B = op-code
040034 ED 4C       0084  			MLT 	BC 		;BC = op-code * 3
040036 09          0085  			ADD	HL, BC 		;Add to table base
040037 ED 27       0086  			LD	HL, (HL)	;Get the routine address (24-bit)
040039             0087  
040039             0088  ;        		ADD     A, A            ;A = op-code * 2
040039             0089  ;        		LD      C,A
040039             0090  ;        		LD      B,0             ;BC = op-code * 2
040039             0091  ;        		ADD     HL,BC
040039             0092  ;        		LD      A,(HL)          ;Get low byte
040039             0093  ;        		INC     HL
040039             0094  ;        		LD      H,(HL)          ;Get high byte
040039             0095  ;        		LD      L,A
040039             0096  
040039 C1          0097          		POP     BC
04003A E3          0098          		EX      (SP),HL
04003B C9          0099          		RET                     ;Off to routine
04003C             0100  ;
04003C             0101  ;Despatch table:
04003C             0102  ;
04003C EE 00 04    0103  DTABLE:			DW24  IAND            ;AND (INTEGER)
04003F 5C 01 04    0104          		DW24  IBDIV           ;DIV
040042 01 01 04    0105          		DW24  IEOR            ;EOR
040045 27 01 04    0106          		DW24  IMOD            ;MOD
040048 14 01 04    0107          		DW24  IOR             ;OR
04004B E2 03 04    0108          		DW24  ILE             ;<=
04004E F1 03 04    0109          		DW24  INE             ;<>
040051 D5 03 04    0110          		DW24  IGE             ;>=
040054 BA 03 04    0111          		DW24  ILT             ;<
040057 FE 03 04    0112          		DW24  IEQ             ;=
04005A 4A 02 04    0113          		DW24  IMUL            ;*
04005D 85 01 04    0114          		DW24  IADD            ;+
040060 C7 03 04    0115          		DW24  IGT             ;>
040063 6C 01 04    0116          		DW24  ISUB            ;-
040066 01 03 04    0117          		DW24  IPOW            ;^
040069 F7 01 04    0118          		DW24  IDIV            ;/
04006C             0119  ;
04006C 10 04 04    0120  FTABLE:			DW24  ABSV            ;ABS
04006F F6 07 04    0121          		DW24  ACS             ;ACS
040072 34 07 04    0122          		DW24  ASN             ;ASN
040075 64 07 04    0123          		DW24  ATN             ;ATN
040078 2F 05 04    0124          		DW24  COS             ;COS
04007B 3E 04 04    0125          		DW24  DEG             ;DEG
04007E EB 05 04    0126          		DW24  EXP             ;EXP
040081 92 04 04    0127          		DW24  INT_            ;INT
040084 89 06 04    0128          		DW24  LN              ;LN
040087 1E 07 04    0129          		DW24  LOG             ;LOG
04008A 1C 04 04    0130          		DW24  NOTK            ;NOT
04008D 48 04 04    0131          		DW24  RAD             ;RAD
040090 63 04 04    0132          		DW24  SGN             ;SGN
040093 3C 05 04    0133          		DW24  SIN             ;SIN
040096 AB 04 04    0134          		DW24  SQR             ;SQR
040099 09 05 04    0135          		DW24  TAN             ;TAN
04009C             0136  ;
04009C B9 0B 04    0137  		        DW24  ZERO            ;ZERO
04009F C4 05 04    0138          		DW24  FONE            ;FONE
0400A2 03 04 04    0139          		DW24  TRUE            ;TRUE
0400A5 30 04 04    0140          		DW24  PI              ;PI
0400A8             0141  ;
0400A8 77 04 04    0142  		        DW24  VAL             ;VAL
0400AB FF 07 04    0143          		DW24  STR             ;STR$
0400AE             0144  ;
0400AE 60 0A 04    0145          		DW24  SFIX            ;FIX
0400B1 3C 0B 04    0146          		DW24  SFLOAT          ;FLOAT
0400B4             0147  ;
0400B4 8A 0B 04    0148  		        DW24  FTEST           ;TEST
0400B7 9C 0B 04    0149          		DW24  FCOMP           ;COMPARE
0400BA             0150  ;
0400BA EA 00 04    0151  RTABLE:			DW24  FAND            ;AND (FLOATING-POINT)
0400BD 58 01 04    0152          		DW24  FBDIV           ;DIV
0400C0 FD 00 04    0153          		DW24  FEOR            ;EOR
0400C3 23 01 04    0154          		DW24  FMOD            ;MOD
0400C6 10 01 04    0155          		DW24  FOR             ;OR
0400C9 DC 03 04    0156          		DW24  FLE             ;<=
0400CC EB 03 04    0157          		DW24  FNE             ;<>
0400CF CF 03 04    0158          		DW24  FGE             ;>=
0400D2 B4 03 04    0159          		DW24  FLT             ;<
0400D5 F8 03 04    0160          		DW24  FEQ             ;=
0400D8 A4 02 04    0161          		DW24  FMUL            ;*
0400DB 92 01 04    0162          		DW24  FADD            ;+
0400DE C1 03 04    0163          		DW24  FGT             ;>
0400E1 79 01 04    0164          		DW24  FSUB            ;-
0400E4 81 03 04    0165          		DW24  FPOW            ;^
0400E7 FB 01 04    0166          		DW24  FDIV            ;/
0400EA             0167  ;
0400EA             0168  ;       PAGE
0400EA             0169  ;
0400EA             0170  ;ARITHMETIC AND LOGICAL OPERATORS:
0400EA             0171  ;All take two arguments, in HLH'L'C & DED'E'B.
0400EA             0172  ;Output in HLH'L'C
0400EA             0173  ;All registers except IX, IY destroyed.
0400EA             0174  ; (N.B. FPOW destroys IX).
0400EA             0175  ;
0400EA             0176  ;FAND - Floating-point AND.
0400EA             0177  ;IAND - Integer AND.
0400EA             0178  ;
0400EA CD 54 0A 04 0179  FAND:			CALL    FIX2
0400EE 7C          0180  IAND:			LD      A,H
0400EF A2          0181          		AND     D
0400F0 67          0182          		LD      H,A
0400F1 7D          0183          		LD      A,L
0400F2 A3          0184          		AND     E
0400F3 6F          0185          		LD      L,A
0400F4 D9          0186          		EXX
0400F5 7C          0187          		LD      A,H
0400F6 A2          0188          		AND     D
0400F7 67          0189          		LD      H,A
0400F8 7D          0190          		LD      A,L
0400F9 A3          0191          		AND     E
0400FA 6F          0192          		LD      L,A
0400FB D9          0193          		EXX
0400FC C9          0194          		RET
0400FD             0195  ;
0400FD             0196  ;FEOR - Floating-point exclusive-OR.
0400FD             0197  ;IEOR - Integer exclusive-OR.
0400FD             0198  ;
0400FD CD 54 0A 04 0199  FEOR:			CALL    FIX2
040101 7C          0200  IEOR:			LD      A,H
040102 AA          0201          		XOR     D
040103 67          0202          		LD      H,A
040104 7D          0203          		LD      A,L
040105 AB          0204          		XOR     E
040106 6F          0205          		LD      L,A
040107 D9          0206          		EXX
040108 7C          0207          		LD      A,H
040109 AA          0208          		XOR     D
04010A 67          0209          		LD      H,A
04010B 7D          0210          		LD      A,L
04010C AB          0211          		XOR     E
04010D 6F          0212          		LD      L,A
04010E D9          0213          		EXX
04010F C9          0214          		RET
040110             0215  ;
040110             0216  ;FOR - Floating-point OR.
040110             0217  ;IOR - Integer OR.
040110             0218  ;
040110 CD 54 0A 04 0219  FOR:			CALL    FIX2
040114 7C          0220  IOR:			LD      A,H
040115 B2          0221          		OR      D
040116 67          0222          		LD      H,A
040117 7D          0223          		LD      A,L
040118 B3          0224          		OR      E
040119 6F          0225          		LD      L,A
04011A D9          0226          		EXX
04011B 7C          0227          		LD      A,H
04011C B2          0228          		OR      D
04011D 67          0229          		LD      H,A
04011E 7D          0230          		LD      A,L
04011F B3          0231          		OR      E
040120 6F          0232          		LD      L,A
040121 D9          0233          		EXX
040122 C9          0234          		RET
040123             0235  ;
040123             0236  ;FMOD - Floating-point remainder.
040123             0237  ;IMOD - Integer remainder.
040123             0238  ;
040123 CD 54 0A 04 0239  FMOD:			CALL    FIX2
040127 7C          0240  IMOD:			LD      A,H
040128 AA          0241          		XOR     D               ;DIV RESULT SIGN
040129 CB 7C       0242          		BIT     7,H
04012B 08          0243          		EX      AF,AF'
04012C CB 7C       0244          		BIT     7,H
04012E C4 70 0A 04 0245          		CALL    NZ,NEGATE       ;MAKE ARGUMENTS +VE
040132 CD 6D 0B 04 0246          		CALL    SWAP
040136 CB 7C       0247          		BIT     7,H
040138 C4 70 0A 04 0248          		CALL    NZ,NEGATE
04013C 44          0249          		LD      B,H
04013D 4D          0250          		LD      C,L
04013E 21 00 00 00 0251          		LD      HL,0
040142 D9          0252          		EXX
040143 44          0253          		LD      B,H
040144 4D          0254          		LD      C,L
040145 21 00 00 00 0255          		LD      HL,0
040149 3E DF       0256          		LD      A,-33
04014B CD FA 0C 04 0257          		CALL    DIVA            ;DIVIDE
04014F D9          0258          		EXX
040150 0E 00       0259          		LD      C,0             ;INTEGER MARKER
040152 08          0260          		EX      AF,AF'
040153 C8          0261          		RET     Z
040154 C3 70 0A 04 0262          		JP      NEGATE
040158             0263  ;
040158             0264  ;BDIV - Integer division.
040158             0265  ;
040158 CD 54 0A 04 0266  FBDIV:			CALL    FIX2
04015C CD 27 01 04 0267  IBDIV:			CALL    IMOD
040160 B7          0268          		OR      A
040161 CD 6D 0B 04 0269          		CALL    SWAP
040165 0E 00       0270          		LD      C,0
040167 F0          0271          		RET     P
040168 C3 70 0A 04 0272          		JP      NEGATE
04016C             0273  ;
04016C             0274  ;ISUB - Integer subtraction.
04016C             0275  ;FSUB - Floating point subtraction with rounding.
04016C             0276  ;
04016C CD 08 0C 04 0277  ISUB:			CALL    SUB_
040170 E0          0278          		RET     PO
040171 CD 00 0C 04 0279          		CALL    ADD_
040175 CD 30 0B 04 0280          		CALL    FLOAT2
040179 7A          0281  FSUB:			LD      A,D
04017A EE 80       0282          		XOR     80H             ;CHANGE SIGN THEN ADD
04017C 57          0283          		LD      D,A
04017D 18 13       0284          		JR      FADD
04017F             0285  ;
04017F             0286  ;Reverse subtract.
04017F             0287  ;
04017F 7C          0288  RSUB:			LD      A,H
040180 EE 80       0289          		XOR     80H
040182 67          0290          		LD      H,A
040183 18 0D       0291          		JR      FADD
040185             0292  ;
040185             0293  ;IADD - Integer addition.
040185             0294  ;FADD - Floating point addition with rounding.
040185             0295  ;
040185 CD 00 0C 04 0296  IADD:			CALL    ADD_
040189 E0          0297          		RET     PO
04018A CD 08 0C 04 0298          		CALL    SUB_
04018E CD 30 0B 04 0299          		CALL    FLOAT2
040192 05          0300  FADD:			DEC     B
040193 04          0301          		INC     B
040194 C8          0302          		RET     Z               ;ARG 2 ZERO
040195 0D          0303          		DEC     C
040196 0C          0304          		INC     C
040197 CA 6D 0B 04 0305          		JP      Z,SWAP          ;ARG 1 ZERO
04019B D9          0306          		EXX
04019C 01 00 00 00 0307          		LD      BC,0            ;INITIALISE
0401A0 D9          0308          		EXX
0401A1 7C          0309          		LD      A,H
0401A2 AA          0310          		XOR     D               ;XOR SIGNS
0401A3 F5          0311          		PUSH    AF
0401A4 78          0312          		LD      A,B
0401A5 B9          0313          		CP      C               ;COMPARE EXPONENTS
0401A6 DC 6D 0B 04 0314          		CALL    C,SWAP          ;MAKE DED'E'B LARGEST
0401AA 78          0315          		LD      A,B
0401AB CB FC       0316          		SET     7,H             ;IMPLIED 1
0401AD C4 41 0A 04 0317          		CALL    NZ,FIX          ;ALIGN
0401B1 F1          0318          		POP     AF
0401B2 7A          0319          		LD      A,D             ;SIGN OF LARGER
0401B3 CB FA       0320          		SET     7,D             ;IMPLIED 1
0401B5 FA C5 01 04 0321          		JP      M,FADD3         ;SIGNS DIFFERENT
0401B9 CD 00 0C 04 0322          		CALL    ADD_             ;HLH'L'=HLH'L'+DED'E'
0401BD DC 75 0B 04 0323          		CALL    C,DIV2          ;NORMALISE
0401C1 CB FC       0324          		SET     7,H
0401C3 18 0D       0325          		JR      FADD4
0401C5             0326  ;
0401C5 CD 08 0C 04 0327  FADD3:			CALL    SUB_             ;HLH'L'=HLH'L'-DED'E'
0401C9 DC 88 0A 04 0328          		CALL    C,NEG_           ;NEGATE HLH'L'B'C'
0401CD CD 07 0B 04 0329          		CALL    FLO48
0401D1 2F          0330          		CPL                     ;CHANGE RESULT SIGN
0401D2 D9          0331  FADD4:			EXX
0401D3 EB          0332          		EX      DE,HL
0401D4 21 00 80 00 0333          		LD      HL,8000H
0401D8 B7          0334          		OR      A               ;CLEAR CARRY
0401D9 52 ED 42    0335          		SBC.S   HL,BC
0401DC EB          0336          		EX      DE,HL
0401DD D9          0337          		EXX
0401DE CC 67 0B 04 0338          		CALL    Z,ODD           ;ROUND UNBIASSED
0401E2 DC 55 0B 04 0339          		CALL    C,ADD1          ;ROUND UP
0401E6 DC 82 0B 04 0340          		CALL    C,INCC
0401EA CB BC       0341          		RES     7,H
0401EC 0D          0342          		DEC     C
0401ED 0C          0343          		INC     C
0401EE CA B9 0B 04 0344          		JP      Z,ZERO
0401F2 B7          0345          		OR      A               ;RESULT SIGNQ
0401F3 F0          0346          		RET     P               ;POSITIVE
0401F4 CB FC       0347          		SET     7,H             ;NEGATIVE
0401F6 C9          0348          		RET
0401F7             0349  ;
0401F7             0350  ;IDIV - Integer division.
0401F7             0351  ;FDIV - Floating point division with rounding.
0401F7             0352  ;
0401F7 CD 30 0B 04 0353  IDIV:			CALL    FLOAT2
0401FB 05          0354  FDIV:			DEC     B               ;TEST FOR ZERO
0401FC 04          0355          		INC     B
0401FD 3E 12       0356          		LD      A,DIVBY0
0401FF CA 13 00 04 0357          		JP      Z,ERROR_         ;"Division by zero"
040203 0D          0358          		DEC     C               ;TEST FOR ZERO
040204 0C          0359          		INC     C
040205 C8          0360          		RET     Z
040206 7C          0361          		LD      A,H
040207 AA          0362          		XOR     D               ;CALC. RESULT SIGN
040208 08          0363          		EX      AF,AF'          ;SAVE SIGN
040209 CB FA       0364          		SET     7,D             ;REPLACE IMPLIED 1's
04020B CB FC       0365          		SET     7,H
04020D C5          0366          		PUSH    BC              ;SAVE EXPONENTS
04020E 42          0367          		LD      B,D             ;LOAD REGISTERS
04020F 4B          0368          		LD      C,E
040210 11 00 00 00 0369          		LD      DE,0
040214 D9          0370          		EXX
040215 42          0371          		LD      B,D
040216 4B          0372          		LD      C,E
040217 11 00 00 00 0373          		LD      DE,0
04021B 3E E0       0374          		LD      A,-32           ;LOOP COUNTER
04021D CD FA 0C 04 0375          		CALL    DIVA            ;DIVIDE
040221 D9          0376          		EXX
040222 CB 7A       0377          		BIT     7,D
040224 D9          0378          		EXX
040225 CC 19 0D 04 0379          		CALL    Z,DIVB          ;NORMALISE & INC A
040229 EB          0380          		EX      DE,HL
04022A D9          0381          		EXX
04022B CB 38       0382          		SRL     B               ;DIVISOR/2
04022D CB 19       0383          		RR      C
04022F B7          0384          		OR      A               ;CLEAR CARRY
040230 52 ED 42    0385          		SBC.S   HL,BC           ;REMAINDER-DIVISOR/2
040233 3F          0386          		CCF
040234 EB          0387          		EX      DE,HL           ;RESULT IN HLH'L'
040235 CC 67 0B 04 0388          		CALL    Z,ODD           ;ROUND UNBIASSED
040239 DC 55 0B 04 0389          		CALL    C,ADD1          ;ROUND UP
04023D C1          0390          		POP     BC              ;RESTORE EXPONENTS
04023E DC 82 0B 04 0391          		CALL    C,INCC
040242 1F          0392          		RRA                     ;LSB OF A TO CARRY
040243 79          0393          		LD      A,C             ;COMPUTE NEW EXPONENT
040244 98          0394          		SBC     A,B
040245 3F          0395          		CCF
040246 C3 E7 02 04 0396          		JP      CHKOVF
04024A             0397  ;
04024A             0398  ;IMUL - Integer multiplication.
04024A             0399  ;
04024A 7C          0400  IMUL:			LD      A,H
04024B AA          0401          		XOR     D
04024C 08          0402          		EX      AF,AF'          ;SAVE RESULT SIGN
04024D CB 7C       0403          		BIT     7,H
04024F C4 70 0A 04 0404          		CALL    NZ,NEGATE
040253 CD 6D 0B 04 0405          		CALL    SWAP
040257 CB 7C       0406          		BIT     7,H
040259 C4 70 0A 04 0407          		CALL    NZ,NEGATE
04025D 44          0408          		LD      B,H
04025E 4D          0409          		LD      C,L
04025F 21 00 00 00 0410          		LD      HL,0
040263 D9          0411          		EXX
040264 44          0412          		LD      B,H
040265 4D          0413          		LD      C,L
040266 21 00 00 00 0414          		LD      HL,0
04026A 3E DF       0415          		LD      A,-33
04026C CD 31 0D 04 0416          		CALL    MULA            ;MULTIPLY
040270 D9          0417          		EXX
040271 0E BF       0418          		LD      C,191           ;PRESET EXPONENT
040273 CD 95 0B 04 0419          		CALL    TEST            ;TEST RANGE
040277 20 0F       0420          		JR      NZ,IMUL1        ;TOO BIG
040279 CB 7A       0421          		BIT     7,D
04027B 20 0B       0422          		JR      NZ,IMUL1
04027D CD 6D 0B 04 0423          		CALL    SWAP
040281 4A          0424          		LD      C,D             ;INTEGER MARKER
040282 08          0425          		EX      AF,AF'
040283 F0          0426          		RET     P
040284 C3 70 0A 04 0427          		JP      NEGATE
040288             0428  ;
040288 0D          0429  IMUL1:			DEC     C
040289 D9          0430          		EXX
04028A CB 23       0431          		SLA     E
04028C CB 12       0432          		RL      D
04028E D9          0433          		EXX
04028F CB 13       0434          		RL      E
040291 CB 12       0435          		RL      D
040293 D9          0436          		EXX
040294 52 ED 6A    0437          		ADC.S   HL,HL
040297 D9          0438          		EXX
040298 52 ED 6A    0439          		ADC.S   HL,HL
04029B F2 88 02 04 0440          		JP      P,IMUL1         ;NORMALISE
04029F 08          0441          		EX      AF,AF'
0402A0 F8          0442          		RET     M
0402A1 CB BC       0443          		RES     7,H             ;POSITIVE
0402A3 C9          0444          		RET
0402A4             0445  ;
0402A4             0446  ;FMUL - Floating point multiplication with rounding.
0402A4             0447  ;
0402A4 05          0448  FMUL:			DEC     B               ;TEST FOR ZERO
0402A5 04          0449          		INC     B
0402A6 CA B9 0B 04 0450          		JP      Z,ZERO
0402AA 0D          0451          		DEC     C               ;TEST FOR ZERO
0402AB 0C          0452          		INC     C
0402AC C8          0453          		RET     Z
0402AD 7C          0454          		LD      A,H
0402AE AA          0455          		XOR     D               ;CALC. RESULT SIGN
0402AF 08          0456          		EX      AF,AF'
0402B0 CB FA       0457          		SET     7,D             ;REPLACE IMPLIED 1's
0402B2 CB FC       0458          		SET     7,H
0402B4 C5          0459          		PUSH    BC              ;SAVE EXPONENTS
0402B5 44          0460          		LD      B,H             ;LOAD REGISTERS
0402B6 4D          0461          		LD      C,L
0402B7 21 00 00 00 0462          		LD      HL,0
0402BB D9          0463          		EXX
0402BC 44          0464          		LD      B,H
0402BD 4D          0465          		LD      C,L
0402BE 21 00 00 00 0466          		LD      HL,0
0402C2 3E E0       0467          		LD      A,-32           ;LOOP COUNTER
0402C4 CD 31 0D 04 0468          		CALL    MULA            ;MULTIPLY
0402C8 DC 47 0D 04 0469          		CALL    C,MULB          ;NORMALISE & INC A
0402CC D9          0470          		EXX
0402CD E5          0471          		PUSH    HL
0402CE 21 00 80 00 0472          		LD      HL,8000H
0402D2 B7          0473          		OR      A               ;CLEAR CARRY
0402D3 52 ED 52    0474          		SBC.S   HL,DE
0402D6 E1          0475          		POP     HL
0402D7 CC 67 0B 04 0476          		CALL    Z,ODD           ;ROUND UNBIASSED
0402DB DC 55 0B 04 0477          		CALL    C,ADD1          ;ROUND UP
0402DF C1          0478          		POP     BC              ;RESTORE EXPONENTS
0402E0 DC 82 0B 04 0479          		CALL    C,INCC
0402E4 1F          0480          		RRA                     ;LSB OF A TO CARRY
0402E5 79          0481          		LD      A,C             ;COMPUTE NEW EXPONENT
0402E6 88          0482          		ADC     A,B
0402E7 38 06       0483  CHKOVF:			JR      C,CHKO1
0402E9 F2 B9 0B 04 0484          		JP      P,ZERO          ;UNDERFLOW
0402ED 18 04       0485          		JR      CHKO2
0402EF FA 84 0B 04 0486  CHKO1:			JP      M,OFLOW         ;OVERFLOW
0402F3 C6 80       0487  CHKO2:			ADD     A,80H
0402F5 4F          0488          		LD      C,A
0402F6 CA B9 0B 04 0489          		JP      Z,ZERO
0402FA 08          0490          		EX      AF,AF'          ;RESTORE SIGN BIT
0402FB CB BC       0491          		RES     7,H
0402FD F0          0492          		RET     P
0402FE CB FC       0493          		SET     7,H
040300 C9          0494          		RET
040301             0495  ;
040301             0496  ;IPOW - Integer involution.
040301             0497  ;
040301 CD 6D 0B 04 0498  IPOW:			CALL    SWAP
040305 CB 7C       0499          		BIT     7,H
040307 F5          0500          		PUSH    AF              ;SAVE SIGN
040308 C4 70 0A 04 0501          		CALL    NZ,NEGATE
04030C 48          0502  IPOW0:			LD      C,B
04030D 06 20       0503          		LD      B,32            ;LOOP COUNTER
04030F CD 25 0C 04 0504  IPOW1:			CALL    X2
040313 38 08       0505          		JR      C,IPOW2
040315 10 F8       0506          		DJNZ    IPOW1
040317 F1          0507          		POP     AF
040318 D9          0508          		EXX
040319 2C          0509          		INC     L               ;RESULT=1
04031A D9          0510          		EXX
04031B 4C          0511          		LD      C,H
04031C C9          0512          		RET
04031D             0513  ;
04031D F1          0514  IPOW2:			POP     AF
04031E C5          0515          		PUSH    BC
04031F EB          0516          		EX      DE,HL
040320 E5          0517          		PUSH    HL
040321 D9          0518          		EXX
040322 EB          0519          		EX      DE,HL
040323 E5          0520          		PUSH    HL
040324 D9          0521          		EXX
040325 DD 21 00 00 0522          		LD      IX,0
       00          
04032A DD 39       0523          		ADD     IX,SP
04032C 28 48       0524          		JR      Z,IPOW4
04032E C5          0525          		PUSH    BC
04032F D9          0526          		EXX
040330 D5          0527          		PUSH    DE
040331 D9          0528          		EXX
040332 D5          0529          		PUSH    DE
040333 CD 3C 0B 04 0530          		CALL    SFLOAT
040337 CD 70 06 04 0531          		CALL    RECIP
04033B DD 71 04    0532          		LD      (IX+4),C
04033E D9          0533          		EXX
04033F DD 75 00    0534          		LD      (IX+0),L
040342 DD 74 01    0535          		LD      (IX+1),H
040345 D9          0536          		EXX
040346 DD 75 02    0537          		LD      (IX+2),L
040349 DD 74 03    0538          		LD      (IX+3),H
04034C 18 21       0539          		JR      IPOW5
04034E             0540  ;
04034E C5          0541  IPOW3:			PUSH    BC
04034F D9          0542          		EXX
040350 CB 23       0543          		SLA     E
040352 CB 12       0544          		RL      D
040354 D5          0545          		PUSH    DE
040355 D9          0546          		EXX
040356 CB 13       0547          		RL      E
040358 CB 12       0548          		RL      D
04035A D5          0549          		PUSH    DE
04035B 3E 0A       0550          		LD      A,'*' & 0FH
04035D F5          0551          		PUSH    AF
04035E CD 39 0C 04 0552          		CALL    COPY_
040362 CD 19 00 04 0553          		CALL    OP              ;SQUARE
040366 F1          0554          		POP     AF
040367 CD 65 09 04 0555          		CALL    DLOAD5
04036B DC 19 00 04 0556          		CALL    C,OP            ;MULTIPLY BY X
04036F D1          0557  IPOW5:			POP     DE
040370 D9          0558          		EXX
040371 D1          0559          		POP     DE
040372 D9          0560          		EXX
040373 79          0561          		LD      A,C
040374 C1          0562          		POP     BC
040375 4F          0563          		LD      C,A
040376 10 D6       0564  IPOW4:			DJNZ    IPOW3
040378 F1          0565          		POP     AF
040379 F1          0566          		POP     AF
04037A F1          0567          		POP     AF
04037B C9          0568          		RET
04037C             0569  ;
04037C F1          0570  FPOW0:			POP     AF
04037D F1          0571          		POP     AF
04037E F1          0572          		POP     AF
04037F 18 8B       0573          		JR      IPOW0
040381             0574  ;
040381             0575  ;FPOW - Floating-point involution.
040381             0576  ;
040381 CB 7A       0577  FPOW:			BIT     7,D
040383 F5          0578          		PUSH    AF
040384 CD 6D 0B 04 0579          		CALL    SWAP
040388 CD 49 0C 04 0580          		CALL    PUSH5
04038C 0D          0581          		DEC     C
04038D 0C          0582          		INC     C
04038E 28 EC       0583          		JR      Z,FPOW0
040390 3E 9E       0584          		LD      A,158
040392 B9          0585          		CP      C
040393 38 0A       0586          		JR      C,FPOW1
040395 3C          0587          		INC     A
040396 CD 41 0A 04 0588          		CALL    FIX
04039A 08          0589          		EX      AF,AF'
04039B F2 7C 03 04 0590          		JP      P,FPOW0
04039F CD 6D 0B 04 0591  FPOW1:			CALL    SWAP
0403A3 CD 8D 06 04 0592          		CALL    LN0
0403A7 CD 52 0C 04 0593          		CALL    POP5
0403AB F1          0594          		POP     AF
0403AC CD A4 02 04 0595          		CALL    FMUL
0403B0 C3 EF 05 04 0596          		JP      EXP0
0403B4             0597  ;
0403B4             0598  ;Integer and floating-point compare.
0403B4             0599  ;Result is TRUE (-1) or FALSE (0).
0403B4             0600  ;
0403B4 CD C3 0B 04 0601  FLT:			CALL    FCP
0403B8 18 04       0602          		JR      ILT1
0403BA CD B5 0B 04 0603  ILT:			CALL    ICP
0403BE D0          0604  ILT1:			RET     NC
0403BF 18 42       0605          		JR      TRUE
0403C1             0606  ;
0403C1 CD C3 0B 04 0607  FGT:			CALL    FCP
0403C5 18 04       0608          		JR      IGT1
0403C7 CD B5 0B 04 0609  IGT:			CALL    ICP
0403CB C8          0610  IGT1:			RET     Z
0403CC D8          0611          		RET     C
0403CD 18 34       0612          		JR      TRUE
0403CF             0613  ;
0403CF CD C3 0B 04 0614  FGE:			CALL    FCP
0403D3 18 04       0615          		JR      IGE1
0403D5 CD B5 0B 04 0616  IGE:			CALL    ICP
0403D9 D8          0617  IGE1:			RET     C
0403DA 18 27       0618          		JR      TRUE
0403DC             0619  ;
0403DC CD C3 0B 04 0620  FLE:			CALL    FCP
0403E0 18 04       0621          		JR      ILE1
0403E2 CD B5 0B 04 0622  ILE:			CALL    ICP
0403E6 28 1B       0623  ILE1:			JR      Z,TRUE
0403E8 D0          0624          		RET     NC
0403E9 18 18       0625          		JR      TRUE
0403EB             0626  ;
0403EB CD C3 0B 04 0627  FNE:			CALL    FCP
0403EF 18 04       0628          		JR      INE1
0403F1 CD B5 0B 04 0629  INE:			CALL    ICP
0403F5 C8          0630  INE1:			RET     Z
0403F6 18 0B       0631          		JR      TRUE
0403F8             0632  ;
0403F8 CD C3 0B 04 0633  FEQ:			CALL    FCP
0403FC 18 04       0634          		JR      IEQ1
0403FE CD B5 0B 04 0635  IEQ:			CALL    ICP
040402 C0          0636  IEQ1:			RET     NZ
040403 21 FF FF FF 0637  TRUE:			LD      HL,-1
040407 D9          0638          		EXX
040408 21 FF FF FF 0639          		LD      HL,-1
04040C D9          0640          		EXX
04040D AF          0641          		XOR     A
04040E 4F          0642          		LD      C,A
04040F C9          0643          		RET
040410             0644  ;
040410             0645  ;FUNCTIONS:
040410             0646  ;
040410             0647  ;Result returned in HLH'L'C (floating point)
040410             0648  ;Result returned in HLH'L' (C=0) (integer)
040410             0649  ;All registers except IY destroyed.
040410             0650  ;
040410             0651  ;ABS - Absolute value
040410             0652  ;Result is numeric, variable type.
040410             0653  ;
040410 CB 7C       0654  ABSV:			BIT     7,H
040412 C8          0655          		RET     Z               ;POSITIVE/ZERO
040413 0D          0656          		DEC     C
040414 0C          0657          		INC     C
040415 CA 70 0A 04 0658          		JP      Z,NEGATE        ;INTEGER
040419 CB BC       0659          		RES     7,H
04041B C9          0660          		RET
04041C             0661  ;
04041C             0662  ;NOT - Complement integer.
04041C             0663  ;Result is integer numeric.
04041C             0664  ;
04041C CD 60 0A 04 0665  NOTK:			CALL    SFIX
040420 7C          0666          		LD      A,H
040421 2F          0667          		CPL
040422 67          0668          		LD      H,A
040423 7D          0669          		LD      A,L
040424 2F          0670          		CPL
040425 6F          0671          		LD      L,A
040426 D9          0672          		EXX
040427 7C          0673          		LD      A,H
040428 2F          0674          		CPL
040429 67          0675          		LD      H,A
04042A 7D          0676          		LD      A,L
04042B 2F          0677          		CPL
04042C 6F          0678          		LD      L,A
04042D D9          0679          		EXX
04042E AF          0680          		XOR     A               ;NUMERIC MARKER
04042F C9          0681          		RET
040430             0682  ;
040430             0683  ;PI - Return PI (3.141592654)
040430             0684  ;Result is floating-point numeric.
040430             0685  ;
040430 21 0F 49 00 0686  PI:			LD      HL,490FH
040434 D9          0687          		EXX
040435 21 A2 DA 00 0688          		LD      HL,0DAA2H
040439 D9          0689          		EXX
04043A 0E 81       0690          		LD      C,81H
04043C AF          0691          		XOR     A               ;NUMERIC MARKER
04043D C9          0692          		RET
04043E             0693  ;
04043E             0694  ;DEG - Convert radians to degrees
04043E             0695  ;Result is floating-point numeric.
04043E             0696  ;
04043E CD 52 04 04 0697  DEG:			CALL    FPI180
040442 CD A4 02 04 0698          		CALL    FMUL
040446 AF          0699          		XOR     A
040447 C9          0700          		RET
040448             0701  ;
040448             0702  ;RAD - Convert degrees to radians
040448             0703  ;Result is floating-point numeric.
040448             0704  ;
040448 CD 52 04 04 0705  RAD:			CALL    FPI180
04044C CD FB 01 04 0706          		CALL    FDIV
040450 AF          0707          		XOR     A
040451 C9          0708          		RET
040452             0709  ;
040452             0710  ;180/PI
040452             0711  ;
040452 CD 3C 0B 04 0712  FPI180:			CALL    SFLOAT
040456 11 2E 65 00 0713          		LD      DE,652EH
04045A D9          0714          		EXX
04045B 11 D3 E0 00 0715          		LD      DE,0E0D3H
04045F D9          0716          		EXX
040460 06 85       0717          		LD      B,85H
040462 C9          0718          		RET
040463             0719  ;
040463             0720  ;SGN - Return -1, 0 or +1
040463             0721  ;Result is integer numeric.
040463             0722  ;
040463 CD 95 0B 04 0723  SGN:			CALL    TEST
040467 B1          0724          		OR      C
040468 C8          0725          		RET     Z               ;ZERO
040469 CB 7C       0726          		BIT     7,H
04046B C2 03 04 04 0727          		JP      NZ,TRUE         ;-1
04046F CD B9 0B 04 0728          		CALL    ZERO
040473 C3 55 0B 04 0729          		JP      ADD1            ;1
040477             0730  ;
040477             0731  ;VAL - Return numeric value of string.
040477             0732  ;Input: ASCII string at IX
040477             0733  ;Result is variable type numeric.
040477             0734  ;
040477 CD D3 0D 04 0735  VAL:			CALL    SIGNQ
04047B F5          0736          		PUSH    AF
04047C CD 83 09 04 0737          		CALL    CON
040480 F1          0738          		POP     AF
040481 FE 2D       0739          		CP      '-'
040483 3E 00       0740          		LD      A,0             ;NUMERIC MARKER
040485 C0          0741          		RET     NZ
040486 0D          0742          		DEC     C
040487 0C          0743          		INC     C
040488 CA 70 0A 04 0744          		JP      Z,NEGATE        ;ZERO/INTEGER
04048C 7C          0745          		LD      A,H
04048D EE 80       0746          		XOR     80H             ;CHANGE SIGN (FP)
04048F 67          0747          		LD      H,A
040490 AF          0748          		XOR     A
040491 C9          0749          		RET
040492             0750  ;
040492             0751  ;INT - Floor function
040492             0752  ;Result is integer numeric.
040492             0753  ;
040492 0D          0754  INT_:			DEC     C
040493 0C          0755          		INC     C
040494 C8          0756          		RET     Z               ;ZERO/INTEGER
040495 3E 9F       0757          		LD      A,159
040497 44          0758          		LD      B,H             ;B7=SIGN BIT
040498 CD 41 0A 04 0759          		CALL    FIX
04049C 08          0760          		EX      AF,AF'
04049D A0          0761          		AND     B
04049E FC 55 0B 04 0762          		CALL    M,ADD1          ;NEGATIVE NON-INTEGER
0404A2 78          0763          		LD      A,B
0404A3 B7          0764          		OR      A
0404A4 FC 70 0A 04 0765          		CALL    M,NEGATE
0404A8 AF          0766          		XOR     A
0404A9 4F          0767          		LD      C,A
0404AA C9          0768          		RET
0404AB             0769  ;
0404AB             0770  ;SQR - square root
0404AB             0771  ;Result is floating-point numeric.
0404AB             0772  ;
0404AB CD 3C 0B 04 0773  SQR:			CALL    SFLOAT
0404AF CB 7C       0774  SQR0:			BIT     7,H
0404B1 3E 15       0775          		LD      A,NGROOT
0404B3 C2 13 00 04 0776          		JP      NZ,ERROR_        ;"-ve root"
0404B7 0D          0777          		DEC     C
0404B8 0C          0778          		INC     C
0404B9 C8          0779          		RET     Z               ;ZERO
0404BA CB FC       0780          		SET     7,H             ;IMPLIED 1
0404BC CB 41       0781          		BIT     0,C
0404BE CC 75 0B 04 0782          		CALL    Z,DIV2          ;MAKE EXPONENT ODD
0404C2 79          0783          		LD      A,C
0404C3 D6 80       0784          		SUB     80H
0404C5 CB 2F       0785          		SRA     A               ;HALVE EXPONENT
0404C7 C6 80       0786          		ADD     A,80H
0404C9 4F          0787          		LD      C,A
0404CA C5          0788          		PUSH    BC              ;SAVE EXPONENT
0404CB EB          0789          		EX      DE,HL
0404CC 21 00 00 00 0790          		LD      HL,0
0404D0 44          0791          		LD      B,H
0404D1 4D          0792          		LD      C,L
0404D2 D9          0793          		EXX
0404D3 EB          0794          		EX      DE,HL
0404D4 21 00 00 00 0795          		LD      HL,0
0404D8 44          0796          		LD      B,H
0404D9 4D          0797          		LD      C,L
0404DA 3E E1       0798          		LD      A,-31
0404DC CD 6B 0D 04 0799          		CALL    SQRA            ;ROOT
0404E0 D9          0800          		EXX
0404E1 CB 78       0801          		BIT     7,B
0404E3 D9          0802          		EXX
0404E4 CC 6B 0D 04 0803          		CALL    Z,SQRA          ;NORMALISE & INC A
0404E8 CD AC 0D 04 0804          		CALL    SQRB
0404EC B7          0805          		OR      A               ;CLEAR CARRY
0404ED CD 19 0D 04 0806          		CALL    DIVB
0404F1 CB 1B       0807          		RR      E               ;LSB TO CARRY
0404F3 60          0808          		LD      H,B
0404F4 69          0809          		LD      L,C
0404F5 D9          0810          		EXX
0404F6 60          0811          		LD      H,B
0404F7 69          0812          		LD      L,C
0404F8 DC 55 0B 04 0813          		CALL    C,ADD1          ;ROUND UP
0404FC C1          0814          		POP     BC              ;RESTORE EXPONENT
0404FD DC 82 0B 04 0815          		CALL    C,INCC
040501 1F          0816          		RRA
040502 9F          0817          		SBC     A,A
040503 81          0818          		ADD     A,C
040504 4F          0819          		LD      C,A
040505 CB BC       0820          		RES     7,H             ;POSITIVE
040507 AF          0821          		XOR     A
040508 C9          0822          		RET
040509             0823  ;
040509             0824  ;TAN - Tangent function
040509             0825  ;Result is floating-point numeric.
040509             0826  ;
040509 CD 3C 0B 04 0827  TAN:			CALL    SFLOAT
04050D CD 49 0C 04 0828          		CALL    PUSH5
040511 CD 33 05 04 0829          		CALL    COS0
040515 CD 52 0C 04 0830          		CALL    POP5
040519 CD 49 0C 04 0831          		CALL    PUSH5
04051D CD 6D 0B 04 0832          		CALL    SWAP
040521 CD 40 05 04 0833          		CALL    SIN0
040525 CD 52 0C 04 0834          		CALL    POP5
040529 CD FB 01 04 0835          		CALL    FDIV
04052D AF          0836          		XOR     A               ;NUMERIC MARKER
04052E C9          0837          		RET
04052F             0838  ;
04052F             0839  ;COS - Cosine function
04052F             0840  ;Result is floating-point numeric.
04052F             0841  ;
04052F CD 3C 0B 04 0842  COS:			CALL    SFLOAT
040533 CD 98 0A 04 0843  COS0:			CALL    SCALE
040537 1C          0844          		INC     E
040538 1C          0845          		INC     E
040539 7B          0846          		LD      A,E
04053A 18 10       0847          		JR      SIN1
04053C             0848  ;
04053C             0849  ;SIN - Sine function
04053C             0850  ;Result is floating-point numeric.
04053C             0851  ;
04053C CD 3C 0B 04 0852  SIN:			CALL    SFLOAT
040540 E5          0853  SIN0:			PUSH    HL              ;H7=SIGN
040541 CD 98 0A 04 0854          		CALL    SCALE
040545 F1          0855          		POP     AF
040546 07          0856          		RLCA
040547 07          0857          		RLCA
040548 07          0858          		RLCA
040549 E6 04       0859          		AND     4
04054B AB          0860          		XOR     E
04054C F5          0861  SIN1:			PUSH    AF              ;OCTANT
04054D CB BC       0862          		RES     7,H
04054F 1F          0863          		RRA
040550 CD DE 05 04 0864          		CALL    PIBY4
040554 DC 7F 01 04 0865          		CALL    C,RSUB          ;X=(PI/4)-X
040558 F1          0866          		POP     AF
040559 F5          0867          		PUSH    AF
04055A E6 03       0868          		AND     3
04055C E2 95 05 04 0869          		JP      PO,SIN2         ;USE COSINE APPROX.
040560 CD 49 0C 04 0870          		CALL    PUSH5           ;SAVE X
040564 CD 41 0C 04 0871          		CALL    SQUARE          ;PUSH X*X
040568 CD 86 0C 04 0872          		CALL    POLY
04056C B7 A8       0873          		DW	0A8B7H          ;a(8)
04056E 11 36       0874          		DW	3611H
040570 6D          0875          		DB	6DH
040571 26 DE       0876          		DW	0DE26H          ;a(6)
040573 05 D0       0877          		DW	0D005H
040575 73          0878          		DB	73H
040576 C0 80       0879          		DW	80C0H           ;a(4)
040578 88 08       0880          		DW	888H
04057A 79          0881          		DB	79H
04057B 9D AA       0882          		DW	0AA9DH          ;a(2)
04057D AA AA       0883          		DW	0AAAAH
04057F 7D          0884          		DB	7DH
040580 00 00       0885          		DW	0               ;a(0)
040582 00 00       0886          		DW	0
040584 80          0887          		DB	80H
040585 CD 52 0C 04 0888          		CALL    POP5
040589 CD 52 0C 04 0889          		CALL    POP5
04058D CD A4 02 04 0890          		CALL    FMUL
040591 C3 BA 05 04 0891          		JP      SIN3
040595             0892  ;
040595 CD 41 0C 04 0893  SIN2:			CALL    SQUARE          ;PUSH X*X
040599 CD 86 0C 04 0894          		CALL    POLY
04059D 71 D5       0895          		DW	0D571H          ;b(8)
04059F 78 4C       0896          		DW	4C78H
0405A1 70          0897          		DB	70H
0405A2 AF 94       0898          		DW	94AFH           ;b(6)
0405A4 03 B6       0899          		DW	0B603H
0405A6 76          0900          		DB	76H
0405A7 C8 9C       0901          		DW	9CC8H           ;b(4)
0405A9 AA 2A       0902          		DW	2AAAH
0405AB 7B          0903          		DB	7BH
0405AC DD FF       0904          		DW	0FFDDH          ;b(2)
0405AE FF FF       0905          		DW	0FFFFH
0405B0 7E          0906          		DB	7EH
0405B1 00 00       0907          		DW	0               ;b(0)
0405B3 00 00       0908          		DW	0
0405B5 80          0909          		DB	80H
0405B6 CD 52 0C 04 0910          		CALL    POP5
0405BA F1          0911  SIN3:			POP     AF
0405BB E6 04       0912          		AND     4
0405BD C8          0913          		RET     Z
0405BE 0D          0914          		DEC     C
0405BF 0C          0915          		INC     C
0405C0 C8          0916          		RET     Z               ;ZERO
0405C1 CB FC       0917          		SET     7,H             ;MAKE NEGATIVE
0405C3 C9          0918          		RET
0405C4             0919  ;
0405C4             0920  ;Floating-point one:
0405C4             0921  ;
0405C4 21 00 00 00 0922  FONE:			LD      HL,0
0405C8 D9          0923          		EXX
0405C9 21 00 00 00 0924          		LD      HL,0
0405CD D9          0925          		EXX
0405CE 0E 80       0926          		LD      C,80H
0405D0 C9          0927          		RET
0405D1             0928  ;
0405D1 11 00 00 00 0929  DONE:			LD      DE,0
0405D5 D9          0930          		EXX
0405D6 11 00 00 00 0931          		LD      DE,0
0405DA D9          0932          		EXX
0405DB 06 80       0933          		LD      B,80H
0405DD C9          0934          		RET
0405DE             0935  ;
0405DE 11 0F 49 00 0936  PIBY4:			LD      DE,490FH
0405E2 D9          0937          		EXX
0405E3 11 A2 DA 00 0938          		LD      DE,0DAA2H
0405E7 D9          0939          		EXX
0405E8 06 7F       0940          		LD      B,7FH
0405EA C9          0941          		RET
0405EB             0942  ;
0405EB             0943  ;EXP - Exponential function
0405EB             0944  ;Result is floating-point numeric.
0405EB             0945  ;
0405EB CD 3C 0B 04 0946  EXP:			CALL    SFLOAT
0405EF CD 7C 06 04 0947  EXP0:			CALL    LN2             ;LN(2)
0405F3 D9          0948          		EXX
0405F4 1D          0949  	        	DEC     E
0405F5 01 CF D1 00 0950  		        LD      BC,0D1CFH       ;0.6931471805599453
0405F9 D9          0951          		EXX
0405FA E5          0952          		PUSH    HL              ;H7=SIGN
0405FB CD AB 0A 04 0953          		CALL    MOD48           ;"MODULUS"
0405FF F1          0954          		POP     AF
040600 CB 7B       0955          		BIT     7,E
040602 28 0B       0956          		JR      Z,EXP1
040604 17          0957          		RLA
040605 DA B9 0B 04 0958          		JP      C,ZERO
040609 3E 18       0959          		LD      A,EXPRNG
04060B C3 13 00 04 0960          		JP      ERROR_           ;"Exp range"
04060F             0961  ;
04060F E6 80       0962  EXP1:			AND     80H
040611 B3          0963          		OR      E
040612 F5          0964          		PUSH    AF              ;INTEGER PART
040613 CB BC       0965          		RES     7,H
040615 CD 49 0C 04 0966          		CALL    PUSH5           ;PUSH X*LN(2)
040619 CD 86 0C 04 0967          		CALL    POLY
04061D 72 40       0968          		DW	4072H           ;a(7)
04061F 2E 94       0969          		DW	942EH
040621 73          0970          		DB	73H
040622 65 6F       0971          		DW	6F65H           ;a(6)
040624 4F 2E       0972          		DW	2E4FH
040626 76          0973          		DB	76H
040627 37 6D       0974          		DW	6D37H           ;a(5)
040629 02 88       0975          		DW	8802H
04062B 79          0976          		DB	79H
04062C 12 E5       0977          		DW	0E512H          ;a(4)
04062E A0 2A       0978          		DW	2AA0H
040630 7B          0979          		DB	7BH
040631 14 4F       0980          		DW	4F14H           ;a(3)
040633 AA AA       0981          		DW	0AAAAH
040635 7D          0982          		DB	7DH
040636 56 FD       0983          		DW	0FD56H          ;a(2)
040638 FF 7F       0984          		DW	7FFFH
04063A 7E          0985          		DB	7EH
04063B FE FF       0986          		DW	0FFFEH          ;a(1)
04063D FF FF       0987          		DW	0FFFFH
04063F 7F          0988          		DB	7FH
040640 00 00       0989          		DW	0               ;a(0)
040642 00 00       0990          		DW	0
040644 80          0991          		DB	80H
040645 CD 52 0C 04 0992          		CALL    POP5
040649 F1          0993          		POP     AF
04064A F5          0994          		PUSH    AF
04064B F4 70 06 04 0995          		CALL    P,RECIP         ;X=1/X
04064F F1          0996          		POP     AF
040650 F2 58 06 04 0997          		JP      P,EXP4
040654 E6 7F       0998          		AND     7FH
040656 ED 44       0999          		NEG
040658 C6 80       1000  EXP4:			ADD     A,80H
04065A 81          1001          		ADD     A,C
04065B 38 06       1002          		JR      C,EXP2
04065D F2 B9 0B 04 1003          		JP      P,ZERO          ;UNDERFLOW
040661 18 04       1004          		JR      EXP3
040663 FA 84 0B 04 1005  EXP2:			JP      M,OFLOW         ;OVERFLOW
040667 C6 80       1006  EXP3:			ADD     A,80H
040669 CA B9 0B 04 1007          		JP      Z,ZERO
04066D 4F          1008          		LD      C,A
04066E AF          1009          		XOR     A               ;NUMERIC MARKER
04066F C9          1010          		RET
040670             1011  ;
040670 CD D1 05 04 1012  RECIP:			CALL    DONE
040674 CD 6D 0B 04 1013  RDIV:			CALL    SWAP
040678 C3 FB 01 04 1014          		JP      FDIV            ;RECIPROCAL
04067C             1015  ;
04067C 11 72 31 00 1016  LN2:			LD      DE,3172H        ;LN(2)
040680 D9          1017          		EXX
040681 11 F8 17 00 1018          		LD      DE,17F8H
040685 D9          1019          		EXX
040686 06 7F       1020          		LD      B,7FH
040688 C9          1021          		RET
040689             1022  ;
040689             1023  ;LN - Natural log.
040689             1024  ;Result is floating-point numeric.
040689             1025  ;
040689 CD 3C 0B 04 1026  LN:			CALL    SFLOAT
04068D 3E 16       1027  LN0:			LD      A,LOGRNG
04068F CB 7C       1028          		BIT     7,H
040691 C2 13 00 04 1029          		JP      NZ,ERROR_        ;"Log range"
040695 0C          1030          		INC     C
040696 0D          1031          		DEC     C
040697 CA 13 00 04 1032          		JP      Z,ERROR_
04069B 11 04 35 00 1033          		LD      DE,3504H        ;SQR(2)
04069F D9          1034          		EXX
0406A0 11 33 F3 00 1035          		LD      DE,0F333H       ;1.41421356237
0406A4 D9          1036          		EXX
0406A5 CD CC 0B 04 1037          		CALL    ICP0            ;MANTISSA>SQR(2)?
0406A9 79          1038          		LD      A,C             ;EXPONENT
0406AA 0E 80       1039          		LD      C,80H           ;1 <= X < 2
0406AC 38 02       1040          		JR      C,LN4
0406AE 0D          1041          		DEC     C
0406AF 3C          1042          		INC     A
0406B0 F5          1043  LN4:			PUSH    AF              ;SAVE EXPONENT
0406B1 CD 5E 0C 04 1044          		CALL    RATIO           ;X=(X-1)/(X+1)
0406B5 CD 49 0C 04 1045          		CALL    PUSH5
0406B9 CD 41 0C 04 1046  		        CALL    SQUARE          ;PUSH X*X
0406BD CD 86 0C 04 1047          		CALL    POLY
0406C1 48 CC       1048          		DW	0CC48H          ;a(9)
0406C3 FB 74       1049          		DW	74FBH
0406C5 7D          1050          		DB	7DH
0406C6 AF AE       1051          		DW	0AEAFH          ;a(7)
0406C8 FF 11       1052          		DW	11FFH
0406CA 7E          1053          		DB	7EH
0406CB 8C D9       1054          		DW	0D98CH          ;a(5)
0406CD CD 4C       1055          		DW	4CCDH
0406CF 7E          1056          		DB	7EH
0406D0 E3 A9       1057          		DW	0A9E3H          ;a(3)
0406D2 AA 2A       1058          		DW	2AAAH
0406D4 7F          1059          		DB	7FH
0406D5 00 00       1060          		DW	0               ;a(1)
0406D7 00 00       1061          		DW	0
0406D9 81          1062          		DB	81H
0406DA CD 52 0C 04 1063          		CALL    POP5
0406DE CD 52 0C 04 1064          		CALL    POP5
0406E2 CD A4 02 04 1065          		CALL    FMUL
0406E6 F1          1066          		POP     AF              ;EXPONENT
0406E7 CD 49 0C 04 1067          		CALL    PUSH5
0406EB 08          1068          		EX      AF,AF'
0406EC CD B9 0B 04 1069          		CALL    ZERO
0406F0 08          1070          		EX      AF,AF'
0406F1 D6 80       1071          		SUB     80H
0406F3 28 1F       1072          		JR      Z,LN3
0406F5 30 02       1073          		JR      NC,LN1
0406F7 2F          1074          		CPL
0406F8 3C          1075          		INC     A
0406F9 67          1076  LN1:			LD      H,A
0406FA 0E 87       1077          		LD      C,87H
0406FC F5          1078          		PUSH    AF
0406FD CD 1C 0B 04 1079          		CALL    FLOAT_
040701 CB BC       1080          		RES     7,H
040703 CD 7C 06 04 1081          		CALL    LN2
040707 CD A4 02 04 1082          		CALL    FMUL
04070B F1          1083          		POP     AF
04070C 30 06       1084          		JR      NC,LN3
04070E FA 14 07 04 1085          		JP      M,LN3
040712 CB FC       1086          		SET     7,H
040714 CD 52 0C 04 1087  LN3:			CALL    POP5
040718 CD 92 01 04 1088          		CALL    FADD
04071C AF          1089          		XOR     A
04071D C9          1090          		RET
04071E             1091  ;
04071E             1092  ;LOG - base-10 logarithm.
04071E             1093  ;Result is floating-point numeric.
04071E             1094  ;
04071E CD 89 06 04 1095  LOG:			CALL    LN
040722 11 5B 5E 00 1096          		LD      DE,5E5BH        ;LOG(e)
040726 D9          1097          		EXX
040727 11 A9 D8 00 1098          		LD      DE,0D8A9H
04072B D9          1099          		EXX
04072C 06 7E       1100          		LD      B,7EH
04072E CD A4 02 04 1101          		CALL    FMUL
040732 AF          1102          		XOR     A
040733 C9          1103          		RET
040734             1104  ;
040734             1105  ;ASN - Arc-sine
040734             1106  ;Result is floating-point numeric.
040734             1107  ;
040734 CD 3C 0B 04 1108  ASN:			CALL    SFLOAT
040738 CD 49 0C 04 1109          		CALL    PUSH5
04073C CD 39 0C 04 1110          		CALL    COPY_
040740 CD A4 02 04 1111          		CALL    FMUL
040744 CD D1 05 04 1112          		CALL    DONE
040748 CD 7F 01 04 1113          		CALL    RSUB
04074C CD AF 04 04 1114          		CALL    SQR0
040750 CD 52 0C 04 1115          		CALL    POP5
040754 0C          1116          		INC     C
040755 0D          1117          		DEC     C
040756 3E 02       1118          		LD      A,2
040758 D5          1119          		PUSH    DE
040759 CA DE 07 04 1120          		JP      Z,ACS1
04075D D1          1121          		POP     DE
04075E CD 74 06 04 1122          		CALL    RDIV
040762 18 04       1123          		JR      ATN0
040764             1124  ;
040764             1125  ;ATN - arc-tangent
040764             1126  ;Result is floating-point numeric.
040764             1127  ;
040764 CD 3C 0B 04 1128  ATN:			CALL    SFLOAT
040768 E5          1129  ATN0:			PUSH    HL              ;SAVE SIGN
040769 CB BC       1130          		RES     7,H
04076B 11 13 54 00 1131          		LD      DE,5413H        ;TAN(PI/8)=SQR(2)-1
04076F D9          1132          		EXX
040770 11 D0 CC 00 1133          		LD      DE,0CCD0H
040774 D9          1134          		EXX
040775 06 7E       1135          		LD      B,7EH
040777 CD C9 0B 04 1136          		CALL    FCP0            ;COMPARE
04077B 06 00       1137          		LD      B,0
04077D 38 22       1138          		JR      C,ATN2
04077F 11 82 1A 00 1139          		LD      DE,1A82H        ;TAN(3*PI/8)=SQR(2)+1
040783 D9          1140          		EXX
040784 11 9A 79 00 1141          		LD      DE,799AH
040788 D9          1142          		EXX
040789 06 81       1143          		LD      B,81H
04078B CD C9 0B 04 1144          		CALL    FCP0            ;COMPARE
04078F 38 0A       1145          		JR      C,ATN1
040791 CD 70 06 04 1146          		CALL    RECIP           ;X=1/X
040795 06 02       1147          		LD      B,2
040797 C3 A1 07 04 1148          		JP      ATN2
04079B CD 5E 0C 04 1149  ATN1:			CALL    RATIO           ;X=(X-1)/(X+1)
04079F 06 01       1150          		LD      B,1
0407A1 C5          1151  ATN2:			PUSH    BC              ;SAVE FLAG
0407A2 CD 49 0C 04 1152          		CALL    PUSH5
0407A6 CD 41 0C 04 1153          		CALL    SQUARE          ;PUSH X*X
0407AA CD 86 0C 04 1154          		CALL    POLY
0407AE 35 F3       1155          		DW	0F335H          ;a(13)
0407B0 D8 37       1156          		DW	37D8H
0407B2 7B          1157          		DB	7BH
0407B3 91 6B       1158          		DW	6B91H           ;a(11)
0407B5 B9 AA       1159          		DW	0AAB9H
0407B7 7C          1160          		DB	7CH
0407B8 DE 41       1161          		DW	41DEH           ;a(9)
0407BA 97 61       1162          		DW	6197H
0407BC 7C          1163          		DB	7CH
0407BD 7B 9D       1164          		DW	9D7BH           ;a(7)
0407BF 37 92       1165          		DW	9237H
0407C1 7D          1166          		DB	7DH
0407C2 5A 2A       1167          		DW	2A5AH           ;a(5)
0407C4 CC 4C       1168          		DW	4CCCH
0407C6 7D          1169          		DB	7DH
0407C7 5C A9       1170          		DW	0A95CH          ;a(3)
0407C9 AA AA       1171          		DW	0AAAAH
0407CB 7E          1172          		DB	7EH
0407CC 00 00       1173          		DW	0               ;a(1)
0407CE 00 00       1174          		DW	0
0407D0 80          1175          		DB	80H
0407D1 CD 52 0C 04 1176          		CALL    POP5
0407D5 CD 52 0C 04 1177          		CALL    POP5
0407D9 CD A4 02 04 1178          		CALL    FMUL
0407DD F1          1179          		POP     AF
0407DE CD DE 05 04 1180  ACS1:			CALL    PIBY4           ;PI/4
0407E2 1F          1181          		RRA
0407E3 F5          1182          		PUSH    AF
0407E4 DC 92 01 04 1183          		CALL    C,FADD
0407E8 F1          1184          		POP     AF
0407E9 04          1185          		INC     B
0407EA 1F          1186          		RRA
0407EB DC 7F 01 04 1187          		CALL    C,RSUB
0407EF F1          1188          		POP     AF
0407F0 B7          1189          		OR      A
0407F1 F0          1190          		RET     P
0407F2 CB FC       1191          		SET     7,H             ;MAKE NEGATIVE
0407F4 AF          1192          		XOR     A
0407F5 C9          1193          		RET
0407F6             1194  ;
0407F6             1195  ;ACS - Arc cosine=PI/2-ASN.
0407F6             1196  ;Result is floating point numeric.
0407F6             1197  ;
0407F6 CD 34 07 04 1198  ACS:			CALL    ASN
0407FA 3E 02       1199          		LD      A,2
0407FC F5          1200          		PUSH    AF
0407FD 18 DF       1201          		JR      ACS1
0407FF             1202  ;
0407FF             1203  ;Function STR - convert numeric value to ASCII string.
0407FF             1204  ;   Inputs: HLH'L'C = integer or floating-point number
0407FF             1205  ;           DE = address at which to store string
0407FF             1206  ;           IX = address of @% format control
0407FF             1207  ;  Outputs: String stored, with NUL terminator
0407FF             1208  ;
0407FF             1209  ;First normalise for decimal output:
0407FF             1210  ;
0407FF CD 3C 0B 04 1211  STR:			CALL    SFLOAT
040803 06 00       1212          		LD      B,0             ;DEFAULT PT. POSITION
040805 CB 7C       1213          		BIT     7,H             ;NEGATIVE?
040807 28 06       1214          		JR      Z,STR10
040809 CB BC       1215          		RES     7,H
04080B 3E 2D       1216          		LD      A,'-'
04080D 12          1217          		LD      (DE),A          ;STORE SIGN
04080E 13          1218          		INC     DE
04080F AF          1219  STR10:			XOR     A               ;CLEAR A
040810 B9          1220          		CP      C
040811 28 4E       1221          		JR      Z,STR2          ;ZERO
040813 D5          1222          		PUSH    DE              ;SAVE TEXT POINTER
040814 78          1223          		LD      A,B
040815 F5          1224  STR11:			PUSH    AF              ;SAVE DECIMAL COUNTER
040816 79          1225          		LD      A,C             ;BINARY EXPONENT
040817 FE A1       1226          		CP      161
040819 30 1C       1227          		JR      NC,STR14
04081B FE 9B       1228          		CP      155
04081D 30 29       1229          		JR      NC,STR15
04081F 2F          1230          		CPL
040820 FE E1       1231          		CP      225
040822 38 02       1232          		JR      C,STR13
040824 3E F8       1233          		LD      A,-8
040826 C6 1C       1234  STR13:			ADD     A,28
040828 CD B5 0C 04 1235          		CALL    POWR10
04082C F5          1236          		PUSH    AF
04082D CD A4 02 04 1237          		CALL    FMUL
040831 F1          1238          		POP     AF
040832 47          1239          		LD      B,A
040833 F1          1240          		POP     AF
040834 90          1241          		SUB     B
040835 18 DE       1242          		JR      STR11
040837 D6 20       1243  STR14:			SUB     32
040839 CD B5 0C 04 1244          		CALL    POWR10
04083D F5          1245          		PUSH    AF
04083E CD FB 01 04 1246          		CALL    FDIV
040842 F1          1247          		POP     AF
040843 47          1248          		LD      B,A
040844 F1          1249          		POP     AF
040845 80          1250          		ADD     A,B
040846 18 CD       1251          		JR      STR11
040848 3E 09       1252  STR15:			LD      A,9
04084A CD B5 0C 04 1253          		CALL    POWR10          ;10^9
04084E CD C9 0B 04 1254          		CALL    FCP0
040852 79          1255          		LD      A,C
040853 C1          1256          		POP     BC
040854 4F          1257          		LD      C,A
040855 CB FC       1258          		SET     7,H             ;IMPLIED 1
040857 DC F1 0B 04 1259          		CALL    C,X10B          ;X10, DEC B
04085B D1          1260          		POP     DE              ;RESTORE TEXT POINTER
04085C CB B9       1261          		RES     7,C
04085E 3E 00       1262          		LD      A,0
040860 17          1263          		RLA                     ;PUT CARRY IN LSB
040861             1264  ;
040861             1265  ;At this point decimal normalisation has been done,
040861             1266  ;now convert to decimal digits:
040861             1267  ;      AHLH'L' = number in normalised integer form
040861             1268  ;            B = decimal place adjustment
040861             1269  ;            C = binary place adjustment (29-33)
040861             1270  ;
040861 0C          1271  STR2:			INC     C
040862 08          1272          		EX      AF,AF'          ;SAVE A
040863 78          1273          		LD      A,B
040864 DD CB 02 4E 1274          		BIT     1,(IX+2)
040868 20 08       1275          		JR      NZ,STR20
04086A AF          1276          		XOR     A
04086B DD BE 01    1277          		CP      (IX+1)
04086E 28 0B       1278          		JR      Z,STR21
040870 3E F6       1279          		LD      A,-10
040872 DD 86 01    1280  STR20:			ADD     A,(IX+1)        ;SIG. FIG. COUNT
040875 B7          1281          		OR      A               ;CLEAR CARRY
040876 FA 7B 08 04 1282          		JP      M,STR21
04087A AF          1283          		XOR     A
04087B F5          1284  STR21:			PUSH    AF
04087C 08          1285          		EX      AF,AF'          ;RESTORE A
04087D CD 25 0C 04 1286  STR22:			CALL    X2              ;RL AHLH'L'
040881 8F          1287          		ADC     A,A
040882 FE 0A       1288          		CP      10
040884 38 05       1289          		JR      C,STR23
040886 D6 0A       1290          		SUB     10
040888 D9          1291          		EXX
040889 2C          1292          		INC     L               ;SET RESULT BIT
04088A D9          1293          		EXX
04088B 0D          1294  STR23:			DEC     C
04088C 20 EF       1295          		JR      NZ,STR22        ;32 TIMES
04088E 4F          1296          		LD      C,A             ;REMAINDER
04088F 7C          1297          		LD      A,H
040890 E6 3F       1298          		AND     3FH             ;CLEAR OUT JUNK
040892 67          1299          		LD      H,A
040893 F1          1300          		POP     AF
040894 F2 A2 08 04 1301          		JP      P,STR24
040898 3C          1302          		INC     A
040899 20 1C       1303          		JR      NZ,STR26
04089B 3E 04       1304          		LD      A,4
04089D B9          1305          		CP      C               ;ROUND UP?
04089E 3E 00       1306          		LD      A,0
0408A0 18 15       1307          		JR      STR26
0408A2 F5          1308  STR24:			PUSH    AF
0408A3 79          1309          		LD      A,C
0408A4 CE 30       1310          		ADC     A,'0'           ;ADD CARRY
0408A6 FE 30       1311          		CP      '0'
0408A8 28 05       1312          		JR      Z,STR25         ;SUPPRESS ZERO
0408AA FE 3A       1313          		CP      '9'+1
0408AC 3F          1314          		CCF
0408AD 30 08       1315          		JR      NC,STR26
0408AF E3          1316  STR25:			EX      (SP),HL
0408B0 CB 75       1317          		BIT     6,L             ;ZERO FLAG
0408B2 E3          1318  		        EX      (SP),HL
0408B3 20 05       1319          		JR      NZ,STR27
0408B5 3E 30       1320          		LD      A,'0'
0408B7 3C          1321  STR26:			INC     A               ;SET +VE
0408B8 3D          1322          		DEC     A
0408B9 F5          1323          		PUSH    AF              ;PUT ON STACK + CARRY
0408BA 04          1324  STR27:			INC     B
0408BB CD 95 0B 04 1325          		CALL    TEST            ;IS HLH'L' ZERO?
0408BF 0E 20       1326          		LD      C,32
0408C1 3E 00       1327          		LD      A,0
0408C3 20 B8       1328          		JR      NZ,STR22
0408C5 F1          1329          		POP     AF
0408C6 F5          1330          		PUSH    AF
0408C7 3E 00       1331          		LD      A,0
0408C9 38 B2       1332          		JR      C,STR22
0408CB             1333  ;
0408CB             1334  ;At this point, the decimal character string is stored
0408CB             1335  ; on the stack. Trailing zeroes are suppressed and may
0408CB             1336  ; need to be replaced.
0408CB             1337  ;B register holds decimal point position.
0408CB             1338  ;Now format number and store as ASCII string:
0408CB             1339  ;
0408CB EB          1340  STR3:			EX      DE,HL           ;STRING POINTER
0408CC 0E FF       1341          		LD      C,-1            ;FLAG "E"
0408CE 16 01       1342          		LD      D,1
0408D0 DD 5E 01    1343          		LD      E,(IX+1)        ;f2
0408D3 DD CB 02 46 1344          		BIT     0,(IX+2)
0408D7 20 35       1345          		JR      NZ,STR34        ;E MODE
0408D9 DD CB 02 4E 1346          		BIT     1,(IX+2)
0408DD 28 12       1347          		JR      Z,STR31
0408DF 78          1348          		LD      A,B             ;F MODE
0408E0 B7          1349          		OR      A
0408E1 28 05       1350          		JR      Z,STR30
0408E3 FA E8 08 04 1351          		JP      M,STR30
0408E7 50          1352          		LD      D,B
0408E8 7A          1353  STR30:			LD      A,D
0408E9 DD 86 01    1354          		ADD     A,(IX+1)
0408EC 5F          1355          		LD      E,A
0408ED FE 0B       1356          		CP      11
0408EF 38 19       1357          		JR      C,STR32
0408F1 78          1358  STR31:			LD      A,B             ;G MODE
0408F2 11 01 01 00 1359          		LD      DE,101H
0408F6 B7          1360          		OR      A
0408F7 FA 0E 09 04 1361          		JP      M,STR34
0408FB 28 0D       1362          		JR      Z,STR32
0408FD DD 7E 01    1363          		LD      A,(IX+1)
040900 B7          1364          		OR      A
040901 20 02       1365          		JR      NZ,STR3A
040903 3E 0A       1366          		LD      A,10
040905 B8          1367  STR3A:			CP      B
040906 38 06       1368          		JR      C,STR34
040908 50          1369          		LD      D,B
040909 58          1370          		LD      E,B
04090A 78          1371  STR32:			LD      A,B
04090B C6 81       1372          		ADD     A,129
04090D 4F          1373          		LD      C,A
04090E CB FA       1374  STR34:			SET     7,D
040910 1D          1375          		DEC     E
040911 7A          1376  STR35:			LD      A,D
040912 B9          1377          		CP      C
040913 30 0E       1378          		JR      NC,STR33
040915 F1          1379  STR36:			POP     AF
040916 28 04       1380          		JR      Z,STR37
040918 F2 25 09 04 1381          		JP      P,STR38
04091C F5          1382  STR37:			PUSH    AF
04091D 1C          1383          		INC     E
04091E 1D          1384          		DEC     E
04091F FA 36 09 04 1385          		JP      M,STR4
040923 3E 30       1386  STR33:			LD      A,'0'
040925 15          1387  STR38:			DEC     D
040926 E2 2D 09 04 1388          		JP      PO,STR39
04092A 36 2E       1389          		LD      (HL),'.'
04092C 23          1390          		INC     HL
04092D 77          1391  STR39:			LD      (HL),A
04092E 23          1392          		INC     HL
04092F 1D          1393          		DEC     E
040930 F2 11 09 04 1394          		JP      P,STR35
040934 18 DF       1395          		JR      STR36
040936             1396  ;
040936 F1          1397  STR4:			POP     AF
040937 0C          1398  STR40:			INC     C
040938 4D          1399          		LD      C,L
040939 20 28       1400          		JR      NZ,STR44
04093B 36 45       1401          		LD      (HL),'E'        ;EXPONENT
04093D 23          1402          		INC     HL
04093E 78          1403          		LD      A,B
04093F 3D          1404          		DEC     A
040940 F2 49 09 04 1405          		JP      P,STR41
040944 36 2D       1406          		LD      (HL),'-'
040946 23          1407          		INC     HL
040947 ED 44       1408          		NEG
040949 36 30       1409  STR41:			LD      (HL),'0'
04094B 28 15       1410          		JR      Z,STR47
04094D FE 0A       1411          		CP      10
04094F 47          1412          		LD      B,A
040950 3E 3A       1413          		LD      A,':'
040952 38 03       1414          		JR      C,STR42
040954 23          1415          		INC     HL
040955 36 30       1416          		LD      (HL),'0'
040957 34          1417  STR42:			INC     (HL)
040958 BE          1418          		CP      (HL)
040959 20 05       1419          		JR      NZ,STR43
04095B 36 30       1420          		LD      (HL),'0'
04095D 2B          1421          		DEC     HL
04095E 34          1422          		INC     (HL)
04095F 23          1423          		INC     HL
040960 10 F5       1424  STR43:			DJNZ    STR42
040962 23          1425  STR47:			INC     HL
040963 EB          1426  STR44:			EX      DE,HL
040964 C9          1427        			RET
040965             1428  ;
040965             1429  ;Support subroutines:
040965             1430  ;
040965 DD 46 04    1431  DLOAD5:			LD      B,(IX+4)
040968 D9          1432          		EXX
040969 DD 5E 00    1433          		LD      E,(IX+0)
04096C DD 56 01    1434          		LD      D,(IX+1)
04096F D9          1435          		EXX
040970 DD 5E 02    1436          		LD      E,(IX+2)
040973 DD 56 03    1437          		LD      D,(IX+3)
040976 C9          1438          		RET
040977             1439  ;
040977 DD 46 06    1440  DLOAD5_SPL:		LD      B,(IX+6)
04097A D9          1441  			EXX
04097B DD 17 00    1442  			LD	DE, (IX+0)
04097E D9          1443  			EXX
04097F DD 17 03    1444  			LD	DE, (IX+3)
040982 C9          1445  			RET
040983             1446  ;
040983             1447  ;CON - Get unsigned numeric constant from ASCII string.
040983             1448  ;   Inputs: ASCII string at (IX).
040983             1449  ;  Outputs: Variable-type result in HLH'L'C
040983             1450  ;           IX updated (points to delimiter)
040983             1451  ;           A7 = 0 (numeric marker)
040983             1452  ;
040983 CD B9 0B 04 1453  CON:			CALL    ZERO            ;INITIALISE TO ZERO
040987 0E 00       1454          		LD      C,0             ;TRUNCATION COUNTER
040989 CD 17 0A 04 1455          		CALL    NUMBER          ;GET INTEGER PART
04098D FE 2E       1456          		CP      '.'
04098F 06 00       1457          		LD      B,0             ;DECL. PLACE COUNTER
040991 CC 15 0A 04 1458          		CALL    Z,NUMBIX        ;GET FRACTION PART
040995 FE 45       1459          		CP      'E'
040997 3E 00       1460          		LD      A,0             ;INITIALISE EXPONENT
040999 CC E3 09 04 1461          		CALL    Z,GETEXP        ;GET EXPONENT
04099D CB 7C       1462          		BIT     7,H
04099F 20 08       1463          		JR      NZ,CON0         ;INTEGER OVERFLOW
0409A1 B7          1464          		OR      A
0409A2 20 05       1465          		JR      NZ,CON0         ;EXPONENT NON-ZERO
0409A4 B8          1466          		CP      B
0409A5 20 02       1467          		JR      NZ,CON0         ;DECIMAL POINT
0409A7 B9          1468          		CP      C
0409A8 C8          1469          		RET     Z               ;INTEGER
0409A9 90          1470  CON0:			SUB     B
0409AA 81          1471          		ADD     A,C
0409AB 0E 9F       1472          		LD      C,159
0409AD CD 1C 0B 04 1473          		CALL    FLOAT_
0409B1 CB BC       1474          		RES     7,H             ;DITCH IMPLIED 1
0409B3 B7          1475          		OR      A
0409B4 C8          1476          		RET     Z               ;DONE
0409B5 FA C3 09 04 1477          		JP      M,CON2          ;NEGATIVE EXPONENT
0409B9 CD B5 0C 04 1478          		CALL    POWR10
0409BD CD A4 02 04 1479          		CALL    FMUL            ;SCALE
0409C1 AF          1480          		XOR     A
0409C2 C9          1481          		RET
0409C3 FE DA       1482  CON2:			CP      -38
0409C5 38 0C       1483          		JR      C,CON3          ;CAN'T SCALE IN ONE GO
0409C7 ED 44       1484          		NEG
0409C9 CD B5 0C 04 1485          		CALL    POWR10
0409CD CD FB 01 04 1486          		CALL    FDIV            ;SCALE
0409D1 AF          1487          		XOR     A
0409D2 C9          1488          		RET
0409D3 F5          1489  CON3:			PUSH    AF
0409D4 3E 26       1490          		LD      A,38
0409D6 CD B5 0C 04 1491          		CALL    POWR10
0409DA CD FB 01 04 1492          		CALL    FDIV
0409DE F1          1493          		POP     AF
0409DF C6 26       1494          		ADD     A,38
0409E1 18 E0       1495          		JR      CON2
0409E3             1496  ;
0409E3             1497  ;GETEXP - Get decimal exponent from string
0409E3             1498  ;     Inputs: ASCII string at (IX)
0409E3             1499  ;             (IX points at 'E')
0409E3             1500  ;             A = initial value
0409E3             1501  ;    Outputs: A = new exponent
0409E3             1502  ;             IX updated.
0409E3             1503  ;   Destroys: A,A',IX,F,F'
0409E3             1504  ;
0409E3 C5          1505  GETEXP:			PUSH    BC              ;SAVE REGISTERS
0409E4 47          1506          		LD      B,A             ;INITIAL VALUE
0409E5 0E 02       1507          		LD      C,2             ;2 DIGITS MAX
0409E7 DD 23       1508          		INC     IX              ;BUMP PAST 'E'
0409E9 CD D3 0D 04 1509          		CALL    SIGNQ
0409ED 08          1510          		EX      AF,AF'          ;SAVE EXPONENT SIGN
0409EE CD C9 0D 04 1511  GETEX1:			CALL    DIGITQ
0409F2 38 18       1512          		JR      C,GETEX2
0409F4 78          1513          		LD      A,B             ;B=B*10
0409F5 87          1514          		ADD     A,A
0409F6 87          1515          		ADD     A,A
0409F7 80          1516          		ADD     A,B
0409F8 87          1517          		ADD     A,A
0409F9 47          1518          		LD      B,A
0409FA DD 7E 00    1519          		LD      A,(IX)          ;GET BACK DIGIT
0409FD DD 23       1520          		INC     IX
0409FF E6 0F       1521          		AND     0FH             ;MASK UNWANTED BITS
040A01 80          1522          		ADD     A,B             ;ADD IN DIGIT
040A02 47          1523          		LD      B,A
040A03 0D          1524          		DEC     C
040A04 F2 EE 09 04 1525          		JP      P,GETEX1
040A08 06 64       1526          		LD      B,100           ;FORCE OVERFLOW
040A0A 18 E2       1527          		JR      GETEX1
040A0C 08          1528  GETEX2:			EX      AF,AF'          ;RESTORE SIGN
040A0D FE 2D       1529          		CP      '-'
040A0F 78          1530          		LD      A,B
040A10 C1          1531          		POP     BC              ;RESTORE
040A11 C0          1532          		RET     NZ
040A12 ED 44       1533          		NEG                     ;NEGATE EXPONENT
040A14 C9          1534          		RET
040A15             1535  ;
040A15             1536  ;NUMBER: Get unsigned integer from string.
040A15             1537  ;    Inputs: string at (IX)
040A15             1538  ;            C = truncated digit count
040A15             1539  ;                (initially zero)
040A15             1540  ;            B = total digit count
040A15             1541  ;            HLH'L' = initial value
040A15             1542  ;   Outputs: HLH'L' = number (binary integer)
040A15             1543  ;            A = delimiter.
040A15             1544  ;            B, C & IX updated
040A15             1545  ;  Destroys: A,B,C,D,E,H,L,B',C',D',E',H',L',IX,F
040A15             1546  ;
040A15 DD 23       1547  NUMBIX:			INC     IX
040A17 CD C9 0D 04 1548  NUMBER:			CALL    DIGITQ
040A1B D8          1549          		RET     C
040A1C 04          1550          		INC     B               ;INCREMENT DIGIT COUNT
040A1D DD 23       1551          		INC     IX
040A1F CD 12 0C 04 1552          		CALL    X10             ;*10 & COPY OLD VALUE
040A23 38 15       1553          		JR      C,NUMB1         ;OVERFLOW
040A25 0D          1554          		DEC     C               ;SEE IF TRUNCATED
040A26 0C          1555          		INC     C
040A27 20 11       1556          		JR      NZ,NUMB1        ;IMPORTANT!
040A29 E6 0F       1557          		AND     0FH
040A2B D9          1558          		EXX
040A2C 06 00       1559          		LD      B,0
040A2E 4F          1560          		LD      C,A
040A2F 52 09       1561          		ADD.S   HL,BC           ;ADD IN DIGIT
040A31 D9          1562          		EXX
040A32 30 E3       1563          		JR      NC,NUMBER
040A34 52 23       1564          		INC.S   HL              ;CARRY
040A36 7C          1565          		LD      A,H
040A37 B5          1566          		OR      L
040A38 20 DD       1567          		JR      NZ,NUMBER
040A3A 0C          1568  NUMB1:			INC     C               ;TRUNCATION COUNTER
040A3B CD 70 0B 04 1569          		CALL    SWAP1           ;RESTORE PREVIOUS VALUE
040A3F 18 D6       1570          		JR      NUMBER
040A41             1571  ;
040A41             1572  ;FIX - Fix number to specified exponent value.
040A41             1573  ;    Inputs: HLH'L'C = +ve non-zero number (floated)
040A41             1574  ;            A = desired exponent (A>C)
040A41             1575  ;   Outputs: HLH'L'C = fixed number (unsigned)
040A41             1576  ;            fraction shifted into B'C'
040A41             1577  ;            A'F' positive if integer input
040A41             1578  ;  Destroys: C,H,L,A',B',C',H',L',F,F'
040A41             1579  ;
040A41 08          1580  FIX:			EX      AF,AF'
040A42 AF          1581          		XOR     A
040A43 08          1582          		EX      AF,AF'
040A44 CB FC       1583          		SET     7,H             ;IMPLIED 1
040A46 CD 75 0B 04 1584  FIX1:			CALL    DIV2
040A4A B9          1585          		CP      C
040A4B C8          1586          		RET     Z
040A4C D2 46 0A 04 1587          		JP      NC,FIX1
040A50 C3 84 0B 04 1588          		JP      OFLOW
040A54             1589  ;
040A54             1590  ;SFIX - Convert to integer if necessary.
040A54             1591  ;    Input: Variable-type number in HLH'L'C
040A54             1592  ;   Output: Integer in HLH'L', C=0
040A54             1593  ; Destroys: A,C,H,L,A',B',C',H',L',F,F'
040A54             1594  ;
040A54             1595  ;NEGATE - Negate HLH'L'
040A54             1596  ;    Destroys: H,L,H',L',F
040A54             1597  ;
040A54 CD 6D 0B 04 1598  FIX2:			CALL    SWAP
040A58 CD 60 0A 04 1599          		CALL    SFIX
040A5C CD 6D 0B 04 1600          		CALL    SWAP
040A60 0D          1601  SFIX:			DEC     C
040A61 0C          1602          		INC     C
040A62 C8          1603          		RET     Z               ;INTEGER/ZERO
040A63 CB 7C       1604          		BIT     7,H             ;SIGN
040A65 F5          1605          		PUSH    AF
040A66 3E 9F       1606          		LD      A,159
040A68 CD 41 0A 04 1607          		CALL    FIX
040A6C F1          1608          		POP     AF
040A6D 0E 00       1609          		LD      C,0
040A6F C8          1610          		RET     Z
040A70 B7          1611  NEGATE:			OR      A               ;CLEAR CARRY
040A71 D9          1612          		EXX
040A72 D5          1613  NEG0:			PUSH    DE
040A73 EB          1614          		EX      DE,HL
040A74 21 00 00 00 1615          		LD      HL,0
040A78 52 ED 52    1616          		SBC.S   HL,DE
040A7B D1          1617          		POP     DE
040A7C D9          1618          		EXX
040A7D D5          1619          		PUSH    DE
040A7E EB          1620          		EX      DE,HL
040A7F 21 00 00 00 1621          		LD      HL,0
040A83 52 ED 52    1622          		SBC.S   HL,DE
040A86 D1          1623          		POP     DE
040A87 C9          1624          		RET
040A88             1625  ;
040A88             1626  ;NEG - Negate HLH'L'B'C'
040A88             1627  ;    Also complements A (used in FADD)
040A88             1628  ;    Destroys: A,H,L,B',C',H',L',F
040A88             1629  ;
040A88 D9          1630  NEG_:			EXX
040A89 2F          1631          		CPL
040A8A E5          1632          		PUSH    HL
040A8B B7          1633          		OR      A               ;CLEAR CARRY
040A8C 21 00 00 00 1634          		LD      HL,0
040A90 52 ED 42    1635          		SBC.S   HL,BC
040A93 44          1636          		LD      B,H
040A94 4D          1637          		LD      C,L
040A95 E1          1638          		POP     HL
040A96 18 DA       1639          		JR      NEG0
040A98             1640  ;
040A98             1641  ;SCALE - Trig scaling.
040A98             1642  ;MOD48 - 48-bit floating-point "modulus" (remainder).
040A98             1643  ;   Inputs: HLH'L'C unsigned floating-point dividend
040A98             1644  ;           DED'E'B'C'B unsigned 48-bit FP divisor
040A98             1645  ;  Outputs: HLH'L'C floating point remainder (H7=1)
040A98             1646  ;           E = quotient (bit 7 is sticky)
040A98             1647  ; Destroys: A,B,C,D,E,H,L,B',C',D',E',H',L',IX,F
040A98             1648  ;FLO48 - Float unsigned number (48 bits)
040A98             1649  ;    Input/output in HLH'L'B'C'C
040A98             1650  ;   Destroys: C,H,L,B',C',H',L',F
040A98             1651  ;
040A98 3E 96       1652  SCALE:			LD      A,150
040A9A B9          1653          		CP      C
040A9B 3E 17       1654          		LD      A,ACLOST
040A9D DA 13 00 04 1655          		JP      C,ERROR_         ;"Accuracy lost"
040AA1 CD DE 05 04 1656          		CALL    PIBY4
040AA5 D9          1657          		EXX
040AA6 01 69 21 00 1658          		LD      BC,2169H        ;3.141592653589793238
040AAA D9          1659          		EXX
040AAB CB FA       1660  MOD48:			SET     7,D             ;IMPLIED 1
040AAD CB FC       1661          		SET     7,H
040AAF 79          1662          		LD      A,C
040AB0 0E 00       1663          		LD      C,0             ;INIT QUOTIENT
040AB2 DD 21 00 00 1664          		LD      IX,0
       00          
040AB7 DD E5       1665          		PUSH    IX              ;PUT ZERO ON STACK
040AB9 B8          1666          		CP      B
040ABA 38 46       1667          		JR      C,MOD485        ;DIVIDEND<DIVISOR
040ABC D9          1668  MOD481:			EXX                     ;CARRY=0 HERE
040ABD E3          1669          		EX      (SP),HL
040ABE 52 ED 42    1670          		SBC.S   HL,BC
040AC1 E3          1671          		EX      (SP),HL
040AC2 52 ED 52    1672          		SBC.S   HL,DE
040AC5 D9          1673          		EXX
040AC6 52 ED 52    1674          		SBC.S   HL,DE
040AC9 30 0C       1675          		JR      NC,MOD482       ;DIVIDEND>=DIVISOR
040ACB D9          1676          		EXX
040ACC E3          1677          		EX      (SP),HL
040ACD 52 09       1678          		ADD.S   HL,BC
040ACF E3          1679          		EX      (SP),HL
040AD0 52 ED 5A    1680          		ADC.S   HL,DE
040AD3 D9          1681          		EXX
040AD4 52 ED 5A    1682          		ADC.S   HL,DE
040AD7 3F          1683  MOD482:			CCF
040AD8 CB 11       1684          		RL      C               ;QUOTIENT
040ADA 30 02       1685          		JR      NC,MOD483
040ADC CB F9       1686          		SET     7,C             ;STICKY BIT
040ADE 3D          1687  MOD483:			DEC     A
040ADF B8          1688          		CP      B
040AE0 38 1F       1689          		JR      C,MOD484        ;DIVIDEND<DIVISOR
040AE2 E3          1690          		EX      (SP),HL
040AE3 52 29       1691          		ADD.S   HL,HL           ;DIVIDEND * 2
040AE5 E3          1692          		EX      (SP),HL
040AE6 D9          1693          		EXX
040AE7 52 ED 6A    1694          		ADC.S   HL,HL
040AEA D9          1695          		EXX
040AEB 52 ED 6A    1696          		ADC.S   HL,HL
040AEE 30 CC       1697          		JR      NC,MOD481       ;AGAIN
040AF0 B7          1698          		OR      A
040AF1 D9          1699          		EXX
040AF2 E3          1700          		EX      (SP),HL
040AF3 52 ED 42    1701          		SBC.S   HL,BC           ;OVERFLOW, SO SUBTRACT
040AF6 E3          1702          		EX      (SP),HL
040AF7 52 ED 52    1703          		SBC.S   HL,DE
040AFA D9          1704          		EXX
040AFB 52 ED 52    1705          		SBC.S   HL,DE
040AFE B7          1706          		OR      A
040AFF 18 D6       1707          		JR      MOD482
040B01             1708  ;
040B01 3C          1709  MOD484:			INC     A
040B02 59          1710  MOD485:			LD      E,C             ;QUOTIENT
040B03 4F          1711          		LD      C,A             ;REMAINDER EXPONENT
040B04 D9          1712          		EXX
040B05 C1          1713          		POP     BC
040B06 D9          1714          		EXX
040B07 CB 7C       1715  FLO48:			BIT     7,H
040B09 C0          1716          		RET     NZ
040B0A D9          1717          		EXX
040B0B CB 21       1718          		SLA     C
040B0D CB 10       1719          		RL      B
040B0F 52 ED 6A    1720          		ADC.S   HL,HL
040B12 D9          1721          		EXX
040B13 52 ED 6A    1722          		ADC.S   HL,HL
040B16 0D          1723          		DEC     C
040B17 C2 07 0B 04 1724          		JP      NZ,FLO48
040B1B C9          1725          		RET
040B1C             1726  ;
040B1C             1727  ;Float unsigned number
040B1C             1728  ;    Input/output in HLH'L'C
040B1C             1729  ;   Destroys: C,H,L,H',L',F
040B1C             1730  ;
040B1C CB 7C       1731  FLOAT_:			BIT     7,H
040B1E C0          1732          		RET     NZ
040B1F D9          1733          		EXX                     ;SAME AS "X2"
040B20 52 29       1734          		ADD.S   HL,HL           ;TIME-CRITICAL
040B22 D9          1735          		EXX                     ;REGION
040B23 52 ED 6A    1736          		ADC.S   HL,HL           ;(BENCHMARKS)
040B26 0D          1737          		DEC     C
040B27 C2 1C 0B 04 1738          		JP      NZ,FLOAT_
040B2B C9          1739          		RET
040B2C             1740  ;
040B2C             1741  ;SFLOAT - Convert to floating-point if necessary.
040B2C             1742  ;    Input: Variable-type number in HLH'L'C
040B2C             1743  ;    Output: Floating-point in HLH'L'C
040B2C             1744  ;    Destroys: A,C,H,L,H',L',F
040B2C             1745  ;
040B2C 08          1746  FLOATA:			EX      AF,AF'
040B2D C6 2A       1747          		ADD     A,RTABLE-DTABLE/3
040B2F 08          1748          		EX      AF,AF'
040B30 CD 6D 0B 04 1749  FLOAT2:			CALL    SWAP
040B34 CD 3C 0B 04 1750          		CALL    SFLOAT
040B38 CD 6D 0B 04 1751          		CALL    SWAP
040B3C 0D          1752  SFLOAT:			DEC     C
040B3D 0C          1753          		INC     C
040B3E C0          1754          		RET     NZ              ;ALREADY FLOATING-POINT
040B3F CD 95 0B 04 1755          		CALL    TEST
040B43 C8          1756          		RET     Z               ;ZERO
040B44 7C          1757          		LD      A,H
040B45 B7          1758          		OR      A
040B46 FC 70 0A 04 1759          		CALL    M,NEGATE
040B4A 0E 9F       1760          		LD      C,159
040B4C CD 1C 0B 04 1761          		CALL    FLOAT_
040B50 B7          1762          		OR      A
040B51 F8          1763          		RET     M               ;NEGATIVE
040B52 CB BC       1764          		RES     7,H
040B54 C9          1765          		RET
040B55             1766  ;
040B55             1767  ;ROUND UP
040B55             1768  ;Return with carry set if 32-bit overflow
040B55             1769  ;   Destroys: H,L,B',C',H',L',F
040B55             1770  ;
040B55 D9          1771  ADD1:			EXX
040B56 01 01 00 00 1772          		LD      BC,1
040B5A 52 09       1773          		ADD.S   HL,BC
040B5C D9          1774          		EXX
040B5D D0          1775          		RET     NC
040B5E C5          1776          		PUSH    BC
040B5F 01 01 00 00 1777          		LD      BC,1
040B63 52 09       1778          		ADD.S   HL,BC
040B65 C1          1779          		POP     BC
040B66 C9          1780          		RET
040B67             1781  ;
040B67             1782  ;ODD - Add one if even, leave alone if odd.
040B67             1783  ; (Used to perform unbiassed rounding, i.e.
040B67             1784  ;  number is rounded up half the time)
040B67             1785  ;    Destroys: L',F (carry cleared)
040B67             1786  ;
040B67 B7          1787  ODD:			OR      A               ;CLEAR CARRY
040B68 D9          1788          		EXX
040B69 CB C5       1789          		SET     0,L             ;MAKE ODD
040B6B D9          1790          		EXX
040B6C C9          1791          		RET
040B6D             1792  ;
040B6D             1793  ;SWAP - Swap arguments.
040B6D             1794  ;    Exchanges DE,HL D'E',H'L' and B,C
040B6D             1795  ;    Destroys: A,B,C,D,E,H,L,D',E',H',L'
040B6D             1796  ;SWAP1 - Swap DEHL with D'E'H'L'
040B6D             1797  ;    Destroys: D,E,H,L,D',E',H',L'
040B6D             1798  ;
040B6D 79          1799  SWAP:			LD      A,C
040B6E 48          1800          		LD      C,B
040B6F 47          1801          		LD      B,A
040B70 EB          1802  SWAP1:			EX      DE,HL
040B71 D9          1803          		EXX
040B72 EB          1804          		EX      DE,HL
040B73 D9          1805          		EXX
040B74 C9          1806          		RET
040B75             1807  ;
040B75             1808  ; DIV2 - destroys C,H,L,A',B',C',H',L',F,F'
040B75             1809  ; INCC - destroys C,F
040B75             1810  ; OFLOW
040B75             1811  ;
040B75 CD 2E 0C 04 1812  DIV2:			CALL    D2
040B79 D9          1813          		EXX
040B7A CB 18       1814          		RR      B
040B7C CB 19       1815          		RR      C
040B7E 08          1816          		EX      AF,AF'
040B7F B0          1817          		OR      B
040B80 08          1818          		EX      AF,AF'
040B81 D9          1819          		EXX
040B82 0C          1820  INCC:			INC     C
040B83 C0          1821          		RET     NZ
040B84 3E 14       1822  OFLOW:			LD      A,TOOBIG
040B86 C3 13 00 04 1823          		JP      ERROR_           ;"Too big"
040B8A             1824  ;
040B8A             1825  ; FTEST - Test for zero & sign
040B8A             1826  ;     Output: A=0 if zero, A=&40 if +ve, A=&C0 if -ve
040B8A             1827  ;
040B8A CD 95 0B 04 1828  FTEST:			CALL    TEST
040B8E C8          1829          		RET     Z
040B8F 7C          1830          		LD      A,H
040B90 E6 80       1831          		AND     10000000B
040B92 F6 40       1832          		OR      01000000B
040B94 C9          1833          		RET
040B95             1834  ;
040B95             1835  ; TEST - Test HLH'L' for zero.
040B95             1836  ;     Output: Z-flag set & A=0 if HLH'L'=0
040B95             1837  ;     Destroys: A,F
040B95             1838  ;
040B95 7C          1839  TEST:			LD      A,H
040B96 B5          1840          		OR      L
040B97 D9          1841          		EXX
040B98 B4          1842          		OR      H
040B99 B5          1843          		OR      L
040B9A D9          1844          		EXX
040B9B C9          1845          		RET
040B9C             1846  ;
040B9C             1847  ; FCOMP - Compare two numbers
040B9C             1848  ;     Output: A=0 if equal, A=&40 if L>R, A=&C0 if L<R
040B9C             1849  ;
040B9C 78          1850  FCOMP:			LD      A,B
040B9D B1          1851          		OR      C               ;Both integer?
040B9E 20 0B       1852          		JR      NZ,FCOMP1
040BA0 CD B5 0B 04 1853          		CALL    ICP
040BA4 3E 00       1854  FCOMP0:			LD      A,0
040BA6 C8          1855          		RET     Z               ;Equal
040BA7 3E 80       1856          		LD      A,80H
040BA9 1F          1857          		RRA
040BAA C9          1858          		RET
040BAB             1859  ;
040BAB CD 30 0B 04 1860  FCOMP1:			CALL    FLOAT2          ;Float both
040BAF CD C3 0B 04 1861          		CALL    FCP
040BB3 18 EF       1862          		JR      FCOMP0
040BB5             1863  ;
040BB5             1864  ; Integer and floating point compare.
040BB5             1865  ; Sets carry & zero flags according to HLH'L'C-DED'E'B
040BB5             1866  ; Result pre-set to FALSE
040BB5             1867  ; ICP1, FCP1 destroy A,F
040BB5             1868  ;
040BB5             1869  ; ZERO - Return zero.
040BB5             1870  ;  Destroys: A,C,H,L,H',L'
040BB5             1871  ;
040BB5 CD E8 0B 04 1872  ICP:			CALL    ICP1
040BB9 3E 00       1873  ZERO:			LD      A,0
040BBB D9          1874          		EXX
040BBC 67          1875          		LD      H,A
040BBD 6F          1876  	       		LD      L,A
040BBE D9          1877          		EXX
040BBF 67          1878        			LD      H,A
040BC0 6F          1879       			LD      L,A
040BC1 4F          1880  	    		LD      C,A
040BC2 C9          1881          		RET
040BC3             1882  ;
040BC3 CD DA 0B 04 1883  FCP:			CALL    FCP1
040BC7 18 F0       1884          		JR      ZERO            ;PRESET FALSE
040BC9             1885  ;
040BC9 79          1886  FCP0:			LD      A,C
040BCA B8          1887          		CP      B               ;COMPARE EXPONENTS
040BCB C0          1888          		RET     NZ
040BCC             1889  ICP0:
040BCC 52 ED 52    1890  			SBC.S   HL,DE           ;COMP MANTISSA MSB
040BCF 52 19       1891          		ADD.S   HL,DE
040BD1 C0          1892          		RET     NZ
040BD2 D9          1893          		EXX
040BD3 52 ED 52    1894          		SBC.S   HL,DE           ;COMP MANTISSA LSB
040BD6 52 19       1895          		ADD.S   HL,DE
040BD8 D9          1896          		EXX
040BD9 C9          1897          		RET
040BDA             1898  ;
040BDA 7C          1899  FCP1:			LD      A,H
040BDB AA          1900          		XOR     D
040BDC 7C          1901          		LD      A,H
040BDD 17          1902          		RLA
040BDE F8          1903          		RET     M
040BDF 30 E8       1904          		JR      NC,FCP0
040BE1 CD C9 0B 04 1905          		CALL    FCP0
040BE5 C8          1906          		RET     Z               ;** V0.1 BUG FIX
040BE6 3F          1907          		CCF
040BE7 C9          1908          		RET
040BE8             1909  ;
040BE8 7C          1910  ICP1:			LD      A,H
040BE9 AA          1911          		XOR     D
040BEA F2 CC 0B 04 1912          		JP      P,ICP0
040BEE 7C          1913          		LD      A,H
040BEF 17          1914          		RLA
040BF0 C9          1915          		RET
040BF1             1916  ;
040BF1             1917  ; ADD - Integer add.
040BF1             1918  ; Carry, sign & zero flags valid on exit
040BF1             1919  ;     Destroys: H,L,H',L',F
040BF1             1920  ;
040BF1 05          1921  X10B:			DEC     B
040BF2 0C          1922          		INC     C
040BF3 CD 3A 0C 04 1923  X5:			CALL    COPY0
040BF7 CD 2D 0C 04 1924          		CALL    D2C
040BFB CD 2D 0C 04 1925          		CALL    D2C
040BFF 08          1926          		EX      AF,AF'          ;SAVE CARRY
040C00 D9          1927  ADD_:			EXX
040C01 52 19       1928          		ADD.S   HL,DE
040C03 D9          1929          		EXX
040C04 52 ED 5A    1930          		ADC.S   HL,DE
040C07 C9          1931          		RET
040C08             1932  ;
040C08             1933  ; SUB - Integer subtract.
040C08             1934  ; Carry, sign & zero flags valid on exit
040C08             1935  ;     Destroys: H,L,H',L',F
040C08             1936  ;
040C08 D9          1937  SUB_:			EXX
040C09 B7          1938          		OR      A
040C0A 52 ED 52    1939          		SBC.S   HL,DE
040C0D D9          1940          		EXX
040C0E 52 ED 52    1941          		SBC.S   HL,DE
040C11 C9          1942          		RET
040C12             1943  ;
040C12             1944  ; X10 - unsigned integer * 10
040C12             1945  ;    Inputs: HLH'L' initial value
040C12             1946  ;   Outputs: DED'E' = initial HLH'L'
040C12             1947  ;            Carry bit set if overflow
040C12             1948  ;            If carry not set HLH'L'=result
040C12             1949  ;  Destroys: D,E,H,L,D',E',H',L',F
040C12             1950  ; X2 - Multiply HLH'L' by 2 as 32-bit integer.
040C12             1951  ;     Carry set if MSB=1 before shift.
040C12             1952  ;     Sign set if MSB=1 after shift.
040C12             1953  ;     Destroys: H,L,H',L',F
040C12             1954  ;
040C12 CD 3A 0C 04 1955  X10:			CALL    COPY0           ;DED'E'=HLH'L'
040C16 CD 25 0C 04 1956          		CALL    X2
040C1A D8          1957          		RET     C               ;TOO BIG
040C1B CD 25 0C 04 1958          		CALL    X2
040C1F D8          1959          		RET     C
040C20 CD 00 0C 04 1960          		CALL    ADD_
040C24 D8          1961          		RET     C
040C25 D9          1962  X2:			EXX
040C26 52 29       1963          		ADD.S   HL,HL
040C28 D9          1964          		EXX
040C29 52 ED 6A    1965          		ADC.S   HL,HL
040C2C C9          1966          		RET
040C2D             1967  ;
040C2D             1968  ; D2 - Divide HLH'L' by 2 as 32-bit integer.
040C2D             1969  ;     Carry set if LSB=1 before shift.
040C2D             1970  ;     Destroys: H,L,H',L',F
040C2D             1971  ;
040C2D 0C          1972  D2C:			INC     C
040C2E CB 3C       1973  D2:			SRL     H
040C30 CB 1D       1974          		RR      L
040C32 D9          1975          		EXX
040C33 CB 1C       1976          		RR      H
040C35 CB 1D       1977          		RR      L
040C37 D9          1978          		EXX
040C38 C9          1979          		RET
040C39             1980  ;
040C39             1981  ; COPY - COPY HLH'L'C INTO DED'E'B
040C39             1982  ;   Destroys: B,C,D,E,H,L,D',E',H',L'
040C39             1983  ;
040C39 41          1984  COPY_:			LD      B,C
040C3A 54          1985  COPY0:			LD      D,H
040C3B 5D          1986          		LD      E,L
040C3C D9          1987          		EXX
040C3D 54          1988          		LD      D,H
040C3E 5D          1989          		LD      E,L
040C3F D9          1990          		EXX
040C40 C9          1991          		RET
040C41             1992  ;
040C41             1993  ; SQUARE - PUSH X*X
040C41             1994  ; PUSH5 - PUSH HLH'L'C ONTO STACK.
040C41             1995  ;   Destroys: SP,IX
040C41             1996  ;
040C41 CD 39 0C 04 1997  SQUARE:			CALL    COPY_
040C45 CD A4 02 04 1998          		CALL    FMUL
040C49 DD E1       1999  PUSH5:			POP     IX              ;RETURN ADDRESS
040C4B C5          2000          		PUSH    BC
040C4C E5          2001          		PUSH    HL
040C4D D9          2002          		EXX
040C4E E5          2003          		PUSH    HL
040C4F D9          2004          		EXX
040C50 DD E9       2005          		JP      (IX)            ;"RETURN"
040C52             2006  ;
040C52             2007  ; POP5 - POP DED'E'B OFF STACK.
040C52             2008  ;   Destroys: A,B,D,E,D',E',SP,IX
040C52             2009  ;
040C52 DD E1       2010  POP5:			POP     IX              ;RETURN ADDRESS
040C54 D9          2011          		EXX
040C55 D1          2012          		POP     DE
040C56 D9          2013          		EXX
040C57 D1          2014          		POP     DE
040C58 79          2015          		LD      A,C
040C59 C1          2016          		POP     BC
040C5A 41          2017          		LD      B,C
040C5B 4F          2018          		LD      C,A
040C5C DD E9       2019          		JP      (IX)            ;"RETURN"
040C5E             2020  ;
040C5E             2021  ; RATIO - Calculate (X-1)/(X+1)
040C5E             2022  ;     Inputs: X in HLH'L'C
040C5E             2023  ;    Outputs: (X-1)/(X+1) in HLH'L'C
040C5E             2024  ;   Destroys: Everything except IY,SP,I
040C5E             2025  ;
040C5E CD 49 0C 04 2026  RATIO:			CALL    PUSH5           ;SAVE X
040C62 CD D1 05 04 2027          		CALL    DONE
040C66 CD 92 01 04 2028          		CALL    FADD
040C6A CD 52 0C 04 2029          		CALL    POP5            ;RESTORE X
040C6E CD 49 0C 04 2030          		CALL    PUSH5           ;SAVE X+1
040C72 CD 6D 0B 04 2031          		CALL    SWAP
040C76 CD D1 05 04 2032          		CALL    DONE
040C7A CD 79 01 04 2033          		CALL    FSUB
040C7E CD 52 0C 04 2034          		CALL    POP5            ;RESTORE X+1
040C82 C3 FB 01 04 2035          		JP      FDIV
040C86             2036  ;
040C86             2037  ; POLY - Evaluate a polynomial.
040C86             2038  ;     Inputs: X in HLH'L'C and also stored at (SP+2)
040C86             2039  ;             Polynomial coefficients follow call.
040C86             2040  ;    Outputs: Result in HLH'L'C
040C86             2041  ;   Destroys: Everything except IY,SP,I
040C86             2042  ; Routine terminates on finding a coefficient >=1.
040C86             2043  ; Note: The last coefficient is EXECUTED on return
040C86             2044  ;       so must contain only innocuous bytes!
040C86             2045  ;
040C86 DD 21 03 00 2046  POLY:			LD      IX, 3				; Advance the SP to the return address
       00          
040C8B DD 39       2047          		ADD     IX, SP
040C8D DD E3       2048          		EX      (SP), IX			; IX: Points to the inline list of coefficients
040C8F             2049  ;
040C8F CD 65 09 04 2050          		CALL    DLOAD5          		; Load the first coefficient from (IX)
040C93 CD A4 02 04 2051  POLY1:			CALL    FMUL
040C97 11 05 00 00 2052          		LD      DE, 5				; Skip to the next coefficient
040C9B DD 19       2053          		ADD     IX, DE
040C9D CD 65 09 04 2054          		CALL    DLOAD5          		; Load the second coefficient from (IX)
040CA1 DD E3       2055          		EX      (SP), IX			; Restore the SP just in case we need to return
040CA3 04          2056          		INC     B
040CA4 05          2057          		DEC     B               		; Test B for end byte (80h)
040CA5 FA 92 01 04 2058          		JP      M,FADD				; Yes, so add and return
040CA9 CD 92 01 04 2059          		CALL    FADD				; No, so add
040CAD CD 77 09 04 2060          		CALL    DLOAD5_SPL			; Load X from SP
040CB1 DD E3       2061          		EX      (SP), IX			; IX: Points to the inline list of coefficients
040CB3 18 DE       2062          		JR      POLY1				; And loop
040CB5             2063  ;
040CB5             2064  ; POWR10 - Calculate power of ten.
040CB5             2065  ;     Inputs: A=power of 10 required (A<128)
040CB5             2066  ;             A=binary exponent to be exceeded (A>=128)
040CB5             2067  ;    Outputs: DED'E'B = result
040CB5             2068  ;             A = actual power of ten returned
040CB5             2069  ;   Destroys: A,B,D,E,A',D',E',F,F'
040CB5             2070  ;
040CB5 3C          2071  POWR10:			INC     A
040CB6 08          2072          		EX      AF,AF'
040CB7 E5          2073          		PUSH    HL
040CB8 D9          2074          		EXX
040CB9 E5          2075          		PUSH    HL
040CBA D9          2076          		EXX
040CBB CD D1 05 04 2077          		CALL    DONE
040CBF CD 6D 0B 04 2078          		CALL    SWAP
040CC3 AF          2079          		XOR     A
040CC4 08          2080  POWR11:			EX      AF,AF'
040CC5 3D          2081          		DEC     A
040CC6 28 26       2082          		JR      Z,POWR14        ;EXIT TYPE 1
040CC8 F2 D0 0C 04 2083          		JP      P,POWR13
040CCC B9          2084          		CP      C
040CCD 38 1F       2085          		JR      C,POWR14        ;EXIT TYPE 2
040CCF 3C          2086          		INC     A
040CD0 08          2087  POWR13:			EX      AF,AF'
040CD1 3C          2088          		INC     A
040CD2 CB FC       2089          		SET     7,H
040CD4 CD F3 0B 04 2090          		CALL    X5
040CD8 30 06       2091          		JR      NC,POWR12
040CDA 08          2092          		EX      AF,AF'
040CDB CD 2D 0C 04 2093          		CALL    D2C
040CDF 08          2094          		EX      AF,AF'
040CE0 08          2095  POWR12:			EX      AF,AF'
040CE1 DC 55 0B 04 2096          		CALL    C,ADD1          ;ROUND UP
040CE5 0C          2097          		INC     C
040CE6 FA C4 0C 04 2098          		JP      M,POWR11
040CEA C3 84 0B 04 2099          		JP      OFLOW
040CEE CD 6D 0B 04 2100  POWR14:			CALL    SWAP
040CF2 CB BA       2101          		RES     7,D
040CF4 D9          2102          		EXX
040CF5 E1          2103          		POP     HL
040CF6 D9          2104          		EXX
040CF7 E1          2105          		POP     HL
040CF8 08          2106          		EX      AF,AF'
040CF9 C9          2107          		RET
040CFA             2108  ;
040CFA             2109  ; DIVA, DIVB - DIVISION PRIMITIVE.
040CFA             2110  ;     Function: D'E'DE = H'L'HLD'E'DE / B'C'BC
040CFA             2111  ;               Remainder in H'L'HL
040CFA             2112  ;     Inputs: A = loop counter (normally -32)
040CFA             2113  ;     Destroys: A,D,E,H,L,D',E',H',L',F
040CFA             2114  ;
040CFA B7          2115  DIVA:			OR      A               ;CLEAR CARRY
040CFB             2116  DIV0:
040CFB 52 ED 42    2117  			SBC.S   HL,BC           ;DIVIDEND-DIVISOR
040CFE D9          2118          		EXX
040CFF 52 ED 42    2119          		SBC.S   HL,BC
040D02 D9          2120          		EXX
040D03 30 07       2121          		JR      NC,DIV1
040D05 52 09       2122          		ADD.S   HL,BC           ;DIVIDEND+DIVISOR
040D07 D9          2123          		EXX
040D08 52 ED 4A    2124          		ADC.S   HL,BC
040D0B D9          2125          		EXX
040D0C 3F          2126  DIV1:			CCF
040D0D CB 13       2127  DIVC:			RL      E               ;SHIFT RESULT INTO DE
040D0F CB 12       2128          		RL      D
040D11 D9          2129          		EXX
040D12 CB 13       2130          		RL      E
040D14 CB 12       2131          		RL      D
040D16 D9          2132          		EXX
040D17 3C          2133          		INC     A
040D18 F0          2134          		RET     P
040D19             2135  DIVB:
040D19 52 ED 6A    2136  			ADC.S   HL,HL           ;DIVIDEND*2
040D1C D9          2137          		EXX
040D1D 52 ED 6A    2138          		ADC.S   HL,HL
040D20 D9          2139          		EXX
040D21 30 D8       2140          		JR      NC,DIV0
040D23 B7          2141          		OR      A
040D24 52 ED 42    2142          		SBC.S   HL,BC           ;DIVIDEND-DIVISOR
040D27 D9          2143          		EXX
040D28 52 ED 42    2144          		SBC.S   HL,BC
040D2B D9          2145          		EXX
040D2C 37          2146          		SCF
040D2D C3 0D 0D 04 2147          		JP      DIVC
040D31             2148  ;
040D31             2149  ;MULA, MULB - MULTIPLICATION PRIMITIVE.
040D31             2150  ;    Function: H'L'HLD'E'DE = B'C'BC * D'E'DE
040D31             2151  ;    Inputs: A = loop counter (usually -32)
040D31             2152  ;            H'L'HL = 0
040D31             2153  ;    Destroys: D,E,H,L,D',E',H',L',A,F
040D31             2154  ;
040D31 B7          2155  MULA:			OR      A               ;CLEAR CARRY
040D32 D9          2156  MUL0:			EXX
040D33 CB 1A       2157          		RR      D               ;MULTIPLIER/2
040D35 CB 1B       2158          		RR      E
040D37 D9          2159          		EXX
040D38 CB 1A       2160          		RR      D
040D3A CB 1B       2161          		RR      E
040D3C 30 07       2162          		JR      NC,MUL1
040D3E 52 09       2163          		ADD.S   HL,BC           ;ADD IN MULTIPLICAND
040D40 D9          2164          		EXX
040D41 52 ED 4A    2165          		ADC.S   HL,BC
040D44 D9          2166          		EXX
040D45 3C          2167  MUL1:			INC     A
040D46 F0          2168          		RET     P
040D47 D9          2169  MULB:			EXX
040D48 CB 1C       2170          		RR      H               ;PRODUCT/2
040D4A CB 1D       2171          		RR      L
040D4C D9          2172          		EXX
040D4D CB 1C       2173          		RR      H
040D4F CB 1D       2174          		RR      L
040D51 C3 32 0D 04 2175          		JP      MUL0
040D55             2176  ;
040D55             2177  ; SQRA, SQRB - SQUARE ROOT PRIMITIVES
040D55             2178  ;     Function: B'C'BC = SQR (D'E'DE)
040D55             2179  ;     Inputs: A = loop counter (normally -31)
040D55             2180  ;             B'C'BCH'L'HL initialised to 0
040D55             2181  ;   Destroys: A,B,C,D,E,H,L,B',C',D',E',H',L',F
040D55             2182  ;
040D55             2183  SQR1:
040D55 52 ED 42    2184  			SBC.S   HL,BC
040D58 D9          2185          		EXX
040D59 52 ED 42    2186          		SBC.S   HL,BC
040D5C D9          2187          		EXX
040D5D 0C          2188          		INC     C
040D5E 30 09       2189          		JR      NC,SQR2
040D60 0D          2190          		DEC     C
040D61 52 09       2191          		ADD.S   HL,BC
040D63 D9          2192          		EXX
040D64 52 ED 4A    2193          		ADC.S   HL,BC
040D67 D9          2194          		EXX
040D68 0D          2195          		DEC     C
040D69 3C          2196  SQR2:			INC     A
040D6A F0          2197          		RET     P
040D6B CB 21       2198  SQRA:			SLA     C
040D6D CB 10       2199          		RL      B
040D6F D9          2200          		EXX
040D70 CB 11       2201          		RL      C
040D72 CB 10       2202          		RL      B
040D74 D9          2203          		EXX
040D75 0C          2204          		INC     C
040D76 CB 23       2205          		SLA     E
040D78 CB 12       2206          		RL      D
040D7A D9          2207          		EXX
040D7B CB 13       2208          		RL      E
040D7D CB 12       2209          		RL      D
040D7F D9          2210          		EXX
040D80 52 ED 6A    2211          		ADC.S   HL,HL
040D83 D9          2212          		EXX
040D84 52 ED 6A    2213          		ADC.S   HL,HL
040D87 D9          2214          		EXX
040D88 CB 23       2215          		SLA     E
040D8A CB 12       2216          		RL      D
040D8C D9          2217          		EXX
040D8D CB 13       2218          		RL      E
040D8F CB 12       2219          		RL      D
040D91 D9          2220          		EXX
040D92 52 ED 6A    2221          		ADC.S   HL,HL
040D95 D9          2222          		EXX
040D96 52 ED 6A    2223          		ADC.S   HL,HL
040D99 D9          2224          		EXX
040D9A D2 55 0D 04 2225          		JP      NC,SQR1
040D9E B7          2226  SQR3:			OR      A
040D9F 52 ED 42    2227          		SBC.S   HL,BC
040DA2 D9          2228          		EXX
040DA3 52 ED 42    2229          		SBC.S   HL,BC
040DA6 D9          2230          		EXX
040DA7 0C          2231          		INC     C
040DA8 C3 69 0D 04 2232          		JP      SQR2
040DAC             2233  ;
040DAC             2234  SQRB:
040DAC 52 29       2235  			ADD.S   HL,HL
040DAE D9          2236          		EXX
040DAF 52 ED 6A    2237          		ADC.S   HL,HL
040DB2 D9          2238          		EXX
040DB3 38 E9       2239          		JR      C,SQR3
040DB5 3C          2240          		INC     A
040DB6 0C          2241          		INC     C
040DB7 52 ED 42    2242          		SBC.S   HL,BC
040DBA D9          2243          		EXX
040DBB 52 ED 42    2244          		SBC.S   HL,BC
040DBE D9          2245          		EXX
040DBF D0          2246          		RET     NC
040DC0 52 09       2247          		ADD.S   HL,BC
040DC2 D9          2248          		EXX
040DC3 52 ED 4A    2249          		ADC.S   HL,BC
040DC6 D9          2250          		EXX
040DC7 0D          2251          		DEC     C
040DC8 C9          2252          		RET
040DC9             2253  ;
040DC9 DD 7E 00    2254  DIGITQ:			LD      A,(IX)
040DCC FE 3A       2255          		CP      '9'+1
040DCE 3F          2256          		CCF
040DCF D8          2257          		RET     C
040DD0 FE 30       2258          		CP      '0'
040DD2 C9          2259          		RET
040DD3             2260  ;
040DD3 DD 7E 00    2261  SIGNQ:			LD      A,(IX)
040DD6 DD 23       2262          		INC     IX
040DD8 FE 20       2263          		CP      ' '
040DDA 28 F7       2264          		JR      Z,SIGNQ
040DDC FE 2B       2265          		CP      '+'
040DDE C8          2266          		RET     Z
040DDF FE 2D       2267          		CP      '-'
040DE1 C8          2268          		RET     Z
040DE2 DD 2B       2269          		DEC     IX
040DE4 C9          2270          		RET
