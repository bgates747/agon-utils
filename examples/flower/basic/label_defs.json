{
    "ABSV": [
        {
            "def_file": "eval.asm",
            "def_line": 877,
            "def_content": "ABSV:\t\t\tLD      A,16"
        }
    ],
    "ABSV_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 658,
            "def_content": "ABSV_FP:\t\t\tBIT     7,H"
        }
    ],
    "ACCS": [
        {
            "def_file": "ram.asm",
            "def_line": 65,
            "def_content": "ACCS:           BLKB    256,0             ; String Accumulator"
        }
    ],
    "ACLOST": [
        {
            "def_file": "fpp.asm",
            "def_line": 47,
            "def_content": "ACLOST:\t\t\tEQU     23              ;Accuracy lost"
        }
    ],
    "ACS": [
        {
            "def_file": "eval.asm",
            "def_line": 967,
            "def_content": "ACS:\t\t\tLD      A,17"
        }
    ],
    "ACS1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1184,
            "def_content": "ACS1:\t\t\tCALL    PIBY4           ;PI/4"
        }
    ],
    "ACS_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1202,
            "def_content": "ACS_FP:\t\t\tCALL    ASN_FP"
        }
    ],
    "ADD1": [
        {
            "def_file": "eval.asm",
            "def_line": 497,
            "def_content": "ADD1:\t\t\tEXX\t\t\t\t; Then add 1"
        }
    ],
    "ADD1_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1776,
            "def_content": "ADD1_FP:\t\t\tEXX"
        }
    ],
    "ADDR16": [
        {
            "def_file": "exec.asm",
            "def_line": 2740,
            "def_content": "ADDR16:\t\t\tCALL\tNUMBER\t\t\t; Fetch an address (16-bit) and fall through to VAL16"
        }
    ],
    "ADDR24": [
        {
            "def_file": "exec.asm",
            "def_line": 2745,
            "def_content": "ADDR24:\t\t\tCALL    NUMBER\t\t\t; Fetch an address (24-bit) and fall through to VAL24"
        }
    ],
    "ADDR_": [
        {
            "def_file": "exec.asm",
            "def_line": 2737,
            "def_content": "ADDR_:\t\t\tBIT\t7,D\t\t\t; Check the ADL flag"
        }
    ],
    "ADD_": [
        {
            "def_file": "fpp.asm",
            "def_line": 1932,
            "def_content": "ADD_:\t\t\tEXX"
        }
    ],
    "ADL_": [
        {
            "def_file": "exec.asm",
            "def_line": 2656,
            "def_content": "ADL_:\t\t\tCALL\tNUMBER\t\t\t; Fetch the ADL value"
        }
    ],
    "ADVAL": [
        {
            "def_file": "sorry.asm",
            "def_line": 21,
            "def_content": "ADVAL:"
        }
    ],
    "ANDK": [
        {
            "def_file": "eval.asm",
            "def_line": 165,
            "def_content": "ANDK:\t\t\tEQU     80H"
        }
    ],
    "ARGERR": [
        {
            "def_file": "exec.asm",
            "def_line": 1872,
            "def_content": "ARGERR:\t\t\tLD      A,31"
        }
    ],
    "ARGUE": [
        {
            "def_file": "exec.asm",
            "def_line": 1826,
            "def_content": "ARGUE:\t\t\tLD      A,-1"
        }
    ],
    "ARGUE1": [
        {
            "def_file": "exec.asm",
            "def_line": 1828,
            "def_content": "ARGUE1:\t\t\tINC     IY              \t; Bump past '(' or ',''"
        }
    ],
    "ARGUE2": [
        {
            "def_file": "exec.asm",
            "def_line": 1856,
            "def_content": "ARGUE2:\t\t\tCALL    EXPRS\t\t\t; At this point it is a string variable, so get the string expression value"
        }
    ],
    "ARGUE4": [
        {
            "def_file": "exec.asm",
            "def_line": 1865,
            "def_content": "ARGUE4:\t\t\tCALL    NXT\t\t\t; Skip whitespace"
        }
    ],
    "ARGUE5": [
        {
            "def_file": "exec.asm",
            "def_line": 1875,
            "def_content": "ARGUE5:\t\t\tCALL    BRAKET\t\t\t; Check for end bracket (throws an error if missing)"
        }
    ],
    "ARGUE6": [
        {
            "def_file": "exec.asm",
            "def_line": 1881,
            "def_content": "ARGUE6:\t\t\tPOP     BC"
        }
    ],
    "ARGUE7": [
        {
            "def_file": "exec.asm",
            "def_line": 1897,
            "def_content": "ARGUE7:\t\t\tCALL    POPS"
        }
    ],
    "ARRAY": [
        {
            "def_file": "main.asm",
            "def_line": 1457,
            "def_content": "ARRAY:\t\t\tLD      A,14            \t; Otherwise Error: 'Array'"
        }
    ],
    "ASC": [
        {
            "def_file": "eval.asm",
            "def_line": 720,
            "def_content": "ASC:\t\t\tCALL    ITEMS\t\t\t; Get the string argument argument"
        }
    ],
    "ASC0": [
        {
            "def_file": "eval.asm",
            "def_line": 721,
            "def_content": "ASC0:\t\t\tXOR     A\t\t\t; Quickly check the length of the string in ACCS"
        }
    ],
    "ASC1": [
        {
            "def_file": "eval.asm",
            "def_line": 724,
            "def_content": "ASC1:\t\t\tLD      HL,(ACCS)\t\t;  L: The first character (H will be discarded in COUNT0"
        }
    ],
    "ASC_TO_NUMBER": [
        {
            "def_file": "misc.asm",
            "def_line": 38,
            "def_content": "ASC_TO_NUMBER:\t\tPUSH\tBC\t\t\t; Preserve BC"
        }
    ],
    "ASC_TO_NUMBER1": [
        {
            "def_file": "misc.asm",
            "def_line": 46,
            "def_content": "ASC_TO_NUMBER1:\t\tLD\tA, (HL)\t\t\t; Fetch the character"
        }
    ],
    "ASC_TO_NUMBER2": [
        {
            "def_file": "misc.asm",
            "def_line": 55,
            "def_content": "ASC_TO_NUMBER2:\t\tEX \tDE, HL \t\t\t; Shift DE left 4 times"
        }
    ],
    "ASC_TO_NUMBER3": [
        {
            "def_file": "misc.asm",
            "def_line": 66,
            "def_content": "ASC_TO_NUMBER3:\t\tLD\tA, (HL)"
        }
    ],
    "ASC_TO_NUMBER4": [
        {
            "def_file": "misc.asm",
            "def_line": 82,
            "def_content": "ASC_TO_NUMBER4:\t\tPOP\tBC \t\t\t; Fall through to SKIPSPC here"
        }
    ],
    "ASM": [
        {
            "def_file": "exec.asm",
            "def_line": 369,
            "def_content": "ASM:\t\t\tLD      (ERRLIN),IY"
        }
    ],
    "ASM0": [
        {
            "def_file": "exec.asm",
            "def_line": 368,
            "def_content": "ASM0:\t\t\tCALL    NEWLIN"
        }
    ],
    "ASMB": [
        {
            "def_file": "exec.asm",
            "def_line": 2322,
            "def_content": "ASMB:\t\t\tCP      '.'\t\t\t; Check for a dot; this indicates a label"
        }
    ],
    "ASMB1": [
        {
            "def_file": "exec.asm",
            "def_line": 2338,
            "def_content": "ASMB1:\t\t\tLD\tA,(LISTON)\t\t; Get the OPT flags"
        }
    ],
    "ASN": [
        {
            "def_file": "eval.asm",
            "def_line": 955,
            "def_content": "ASN:\t\t\tLD      A,18"
        }
    ],
    "ASN_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1112,
            "def_content": "ASN_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "ASSEM": [
        {
            "def_file": "exec.asm",
            "def_line": 2209,
            "def_content": "ASSEM:\t\t\tCALL    SKIP"
        }
    ],
    "ASSEM0": [
        {
            "def_file": "exec.asm",
            "def_line": 2223,
            "def_content": "ASSEM0:\t\t\tPUSH    IX"
        }
    ],
    "ASSEM1": [
        {
            "def_file": "exec.asm",
            "def_line": 2268,
            "def_content": "ASSEM1:\t\t\tLD      A,(COUNT)"
        }
    ],
    "ASSEM2": [
        {
            "def_file": "exec.asm",
            "def_line": 2278,
            "def_content": "ASSEM2:\t\t\tLD      A,22\t\t\t; Tab to the disassembly field"
        }
    ],
    "ASSEM3": [
        {
            "def_file": "exec.asm",
            "def_line": 2233,
            "def_content": "ASSEM3:\t\t\tINC     IY"
        }
    ],
    "ASSEM4": [
        {
            "def_file": "exec.asm",
            "def_line": 2283,
            "def_content": "ASSEM4:\t\t\tLD      A,(BC)"
        }
    ],
    "ASSEM5": [
        {
            "def_file": "exec.asm",
            "def_line": 2253,
            "def_content": "ASSEM5:\t\t\tPOP     HL              \t; Old PC"
        }
    ],
    "ASSIGN": [
        {
            "def_file": "exec.asm",
            "def_line": 1673,
            "def_content": "ASSIGN:\t\t\tCALL    GETVAR          \t; Try to get the variable"
        }
    ],
    "ATEND": [
        {
            "def_file": "main.asm",
            "def_line": 341,
            "def_content": "ATEND:\t\t\tPOP     BC              \t; BC: Line length"
        }
    ],
    "ATN": [
        {
            "def_file": "eval.asm",
            "def_line": 961,
            "def_content": "ATN:\t\t\tLD      A,19"
        }
    ],
    "ATN0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1133,
            "def_content": "ATN0:\t\t\tPUSH    HL              ;SAVE SIGN"
        }
    ],
    "ATN1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1153,
            "def_content": "ATN1:\t\t\tCALL    RATIO           ;X=(X-1)/(X+1)"
        }
    ],
    "ATN2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1155,
            "def_content": "ATN2:\t\t\tPUSH    BC              ;SAVE FLAG"
        }
    ],
    "ATN_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1132,
            "def_content": "ATN_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "AUTO": [
        {
            "def_file": "main.asm",
            "def_line": 864,
            "def_content": "AUTO:\t\t\tCALL    PAIR\t\t\t; Get the parameter pair (HL: first parameter, BC: second parameter)"
        }
    ],
    "AUTOLOAD": [
        {
            "def_file": "main.asm",
            "def_line": 186,
            "def_content": "AUTOLOAD:\t\tLD\tHL, (IX+3)\t\t; HLU: Address of filename"
        }
    ],
    "AUTOLOAD_1": [
        {
            "def_file": "main.asm",
            "def_line": 188,
            "def_content": "AUTOLOAD_1:\t\tLD\tA, (HL)\t\t\t; Fetch the filename byte"
        }
    ],
    "AUTOLOAD_2": [
        {
            "def_file": "main.asm",
            "def_line": 195,
            "def_content": "AUTOLOAD_2:\t\tDEC\tE"
        }
    ],
    "AUTONO": [
        {
            "def_file": "ram.asm",
            "def_line": 80,
            "def_content": "AUTONO:         BLKB    3,0               ; Auto Flag"
        }
    ],
    "BAD": [
        {
            "def_file": "main.asm",
            "def_line": 873,
            "def_content": "BAD:\t\t\tCALL    TELL            \t; Output \"Bad program\" error"
        }
    ],
    "BADBIN": [
        {
            "def_file": "eval.asm",
            "def_line": 463,
            "def_content": "BADBIN:\t\t\tLD\tA, 28\t\t\t; Error: \"Bad Binary\" - reuses same error code as Bad HEX"
        }
    ],
    "BADDIM": [
        {
            "def_file": "exec.asm",
            "def_line": 518,
            "def_content": "BADDIM:\t\t\tLD      A,10            \t; Throw a \"Bad DIM\" error"
        }
    ],
    "BADHEX": [
        {
            "def_file": "eval.asm",
            "def_line": 441,
            "def_content": "BADHEX:\t\t\tLD      A,28"
        }
    ],
    "BADOP": [
        {
            "def_file": "fpp.asm",
            "def_line": 42,
            "def_content": "BADOP:\t\t\tEQU     1               ;Bad operation code"
        }
    ],
    "BAD_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 62,
            "def_content": "BAD_FP:\t\t\tLD      A,BADOP         ;\"Bad operation code\""
        }
    ],
    "BGET": [
        {
            "def_file": "eval.asm",
            "def_line": 695,
            "def_content": "BGET:\t\t\tCALL    CHANEL          \t; Channel number"
        }
    ],
    "BIN": [
        {
            "def_file": "eval.asm",
            "def_line": 449,
            "def_content": "BIN:\t\t\tCALL    ZERO\t\t\t; Set result to 0"
        }
    ],
    "BIN1": [
        {
            "def_file": "eval.asm",
            "def_line": 452,
            "def_content": "BIN1:\t\t\tINC\tIY\t\t\t; Move pointer to next character"
        }
    ],
    "BIND": [
        {
            "def_file": "exec.asm",
            "def_line": 2789,
            "def_content": "BIND:\t\t\tCP      76H"
        }
    ],
    "BIND1": [
        {
            "def_file": "exec.asm",
            "def_line": 2423,
            "def_content": "BIND1:\t\t\tJP      NC,BIND"
        }
    ],
    "BINDIG": [
        {
            "def_file": "eval.asm",
            "def_line": 1607,
            "def_content": "BINDIG:\t\t\tLD\tA,(IY)"
        }
    ],
    "BITLOOKUP": [
        {
            "def_file": "eval.asm",
            "def_line": 1257,
            "def_content": "BITLOOKUP:\t\tDB\t01h, 02h, 04h, 08h"
        }
    ],
    "BIT_": [
        {
            "def_file": "exec.asm",
            "def_line": 2881,
            "def_content": "BIT_:\t\t\tCALL    NUMBER"
        }
    ],
    "BPUT": [
        {
            "def_file": "exec.asm",
            "def_line": 1541,
            "def_content": "BPUT:\t\t\tCALL    CHANEL          \t; Fetch the channel number"
        }
    ],
    "BRAKET": [
        {
            "def_file": "eval.asm",
            "def_line": 1629,
            "def_content": "BRAKET:\t\t\tCALL    NXT"
        }
    ],
    "BUFFER": [
        {
            "def_file": "ram.asm",
            "def_line": 66,
            "def_content": "BUFFER:         BLKB    256,0             ; String Input Buffer"
        }
    ],
    "BYTE0": [
        {
            "def_file": "exec.asm",
            "def_line": 2431,
            "def_content": "BYTE0:\t\t\tLD      A,C"
        }
    ],
    "BYTE_": [
        {
            "def_file": "exec.asm",
            "def_line": 2823,
            "def_content": "BYTE_:\t\t\tLD      (IX),A\t\t\t; Write a byte out"
        }
    ],
    "CALL1": [
        {
            "def_file": "exec.asm",
            "def_line": 1570,
            "def_content": "CALL1:\t\t\tCALL    NXT\t\t\t; Skip whitespace"
        }
    ],
    "CALL2": [
        {
            "def_file": "exec.asm",
            "def_line": 1592,
            "def_content": "CALL2:\t\t\tLD      A,B"
        }
    ],
    "CALL_": [
        {
            "def_file": "exec.asm",
            "def_line": 1562,
            "def_content": "CALL_:\t\t\tCALL    EXPRI           \t; Fetch the address"
        }
    ],
    "CARRET": [
        {
            "def_file": "main.asm",
            "def_line": 1287,
            "def_content": "CARRET:\t\t\tLD      (COUNT),A\t\t; Store the new count value"
        }
    ],
    "CB": [
        {
            "def_file": "exec.asm",
            "def_line": 2788,
            "def_content": "CB:\t\t\tLD      A,0CBH"
        }
    ],
    "CHAIN": [
        {
            "def_file": "exec.asm",
            "def_line": 224,
            "def_content": "CHAIN:\t\t\tCALL    EXPRS\t\t\t; Get the filename"
        }
    ],
    "CHAIN0": [
        {
            "def_file": "exec.asm",
            "def_line": 227,
            "def_content": "CHAIN0:\t\t\tLD      SP,(HIMEM)\t\t; Reset SP"
        }
    ],
    "CHANEL": [
        {
            "def_file": "exec.asm",
            "def_line": 2194,
            "def_content": "CHANEL:\t\t\tCALL    NXT\t\t\t; Skip whitespace"
        }
    ],
    "CHECK": [
        {
            "def_file": "exec.asm",
            "def_line": 1793,
            "def_content": "CHECK:\t\t\tPUSH    HL"
        }
    ],
    "CHKO1": [
        {
            "def_file": "fpp.asm",
            "def_line": 490,
            "def_content": "CHKO1:\t\t\tJP      M,OFLOW         ;OVERFLOW"
        }
    ],
    "CHKO2": [
        {
            "def_file": "fpp.asm",
            "def_line": 491,
            "def_content": "CHKO2:\t\t\tADD     A,80H"
        }
    ],
    "CHKOVF": [
        {
            "def_file": "fpp.asm",
            "def_line": 487,
            "def_content": "CHKOVF:\t\t\tJR      C,CHKO1"
        }
    ],
    "CHNL": [
        {
            "def_file": "exec.asm",
            "def_line": 2198,
            "def_content": "CHNL:\t\t\tINC     IY             \t\t; Bump past the '#'"
        }
    ],
    "CHRS": [
        {
            "def_file": "eval.asm",
            "def_line": 1194,
            "def_content": "CHRS:\t\t\tCALL    ITEMI"
        }
    ],
    "CLEAN": [
        {
            "def_file": "main.asm",
            "def_line": 1097,
            "def_content": "CLEAN:\t\t\tCALL    SETTOP\t\t\t; Set TOP sysvar"
        }
    ],
    "CLEAR": [
        {
            "def_file": "main.asm",
            "def_line": 1139,
            "def_content": "CLEAR:\t\t\tPUSH    HL\t\t\t; Stack the BASIC program pointer"
        }
    ],
    "CLEAR1": [
        {
            "def_file": "main.asm",
            "def_line": 1147,
            "def_content": "CLEAR1:\t\t\tLD      (HL),0\t\t\t; Clear the dynamic variable pointers"
        }
    ],
    "CLG": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 46,
            "def_content": "CLG:"
        }
    ],
    "CLI": [
        {
            "def_file": "exec.asm",
            "def_line": 317,
            "def_content": "CLI:\t\t\tCALL    EXPRS"
        }
    ],
    "CLOOP": [
        {
            "def_file": "main.asm",
            "def_line": 227,
            "def_content": "CLOOP:\t\t\tSCF\t\t\t\t; See above - not sure why this is here!"
        }
    ],
    "CLOOP0": [
        {
            "def_file": "main.asm",
            "def_line": 898,
            "def_content": "CLOOP0:\t\t\tJP      CLOOP\t\t\t; Jump back to the command loop"
        }
    ],
    "CLOOP1": [
        {
            "def_file": "main.asm",
            "def_line": 591,
            "def_content": "CLOOP1:\t\t\tJP      CLOOP"
        }
    ],
    "CLOSE": [
        {
            "def_file": "exec.asm",
            "def_line": 1535,
            "def_content": "CLOSE:\t\t\tCALL    CHANEL\t\t\t; Fetch the channel number"
        }
    ],
    "CLR": [
        {
            "def_file": "exec.asm",
            "def_line": 1362,
            "def_content": "CLR:\t\t\tCALL    CLEAR"
        }
    ],
    "CLRSCN": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 53,
            "def_content": "CLRSCN:\t\t\tLD\tA, 0Ch"
        }
    ],
    "CLS": [
        {
            "def_file": "exec.asm",
            "def_line": 1338,
            "def_content": "CLS:\t\tCALL    CLRSCN"
        }
    ],
    "CMDTAB": [
        {
            "def_file": "exec.asm",
            "def_line": 157,
            "def_content": "CMDTAB:\t\t\tDW24  AUTO\t\t\t; C6H"
        }
    ],
    "COLD": [
        {
            "def_file": "main.asm",
            "def_line": 199,
            "def_content": "COLD:\t\t\tPOP\tHL\t\t\t; Pop the return address to init off SPS"
        }
    ],
    "COLOUR": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 139,
            "def_content": "COLOUR:\t\t\tCALL\tEXPRI\t\t\t; The colour / mode"
        }
    ],
    "COLOUR_1": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 151,
            "def_content": "COLOUR_1:\t\tCALL\tCOMMA"
        }
    ],
    "COLOUR_2": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 168,
            "def_content": "COLOUR_2:\t\tCALL\tCOMMA"
        }
    ],
    "COMDS": [
        {
            "def_file": "patch.asm",
            "def_line": 390,
            "def_content": "COMDS:"
        }
    ],
    "COMMA": [
        {
            "def_file": "eval.asm",
            "def_line": 1622,
            "def_content": "COMMA:\t\t\tCALL    NXT"
        }
    ],
    "CON": [
        {
            "def_file": "eval.asm",
            "def_line": 616,
            "def_content": "CON:\t\t\tPUSH    IY"
        }
    ],
    "CON0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1474,
            "def_content": "CON0:\t\t\tSUB     B"
        }
    ],
    "CON2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1486,
            "def_content": "CON2:\t\t\tCP      -38"
        }
    ],
    "CON3": [
        {
            "def_file": "fpp.asm",
            "def_line": 1493,
            "def_content": "CON3:\t\t\tPUSH    AF"
        }
    ],
    "COND_": [
        {
            "def_file": "exec.asm",
            "def_line": 2861,
            "def_content": "COND_:\t\t\tCALL    OPND"
        }
    ],
    "CONS": [
        {
            "def_file": "eval.asm",
            "def_line": 588,
            "def_content": "CONS:\t\t\tLD      DE,ACCS\t\t\t; DE: Pointer to the string accumulator"
        }
    ],
    "CONS1": [
        {
            "def_file": "eval.asm",
            "def_line": 594,
            "def_content": "CONS1:\t\t\tLD      (DE),A\t\t\t; Store the character in the string accumulator"
        }
    ],
    "CONS2": [
        {
            "def_file": "eval.asm",
            "def_line": 602,
            "def_content": "CONS2:\t\t\tLD      A,(IY)\t\t\t; Fetch the next character"
        }
    ],
    "CONS3": [
        {
            "def_file": "eval.asm",
            "def_line": 589,
            "def_content": "CONS3:\t\t\tLD      A,(IY)\t\t\t; Fetch the first character and"
        }
    ],
    "CON_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1457,
            "def_content": "CON_FP:\t\t\tCALL    ZERO_FP            ;INITIALISE TO ZERO"
        }
    ],
    "COPY0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1990,
            "def_content": "COPY0:\t\t\tLD      D,H"
        }
    ],
    "COPY_": [
        {
            "def_file": "fpp.asm",
            "def_line": 1989,
            "def_content": "COPY_:\t\t\tLD      B,C"
        }
    ],
    "CORN": [
        {
            "def_file": "exec.asm",
            "def_line": 2778,
            "def_content": "CORN:\t\t\tPUSH    BC"
        }
    ],
    "COS": [
        {
            "def_file": "eval.asm",
            "def_line": 925,
            "def_content": "COS:\t\t\tLD      A,20"
        }
    ],
    "COS0": [
        {
            "def_file": "fpp.asm",
            "def_line": 847,
            "def_content": "COS0:\t\t\tCALL    SCALE"
        }
    ],
    "COS_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 846,
            "def_content": "COS_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "COUNT": [
        {
            "def_file": "ram.asm",
            "def_line": 87,
            "def_content": "COUNT:          BLKB    1,0               ; Print Position"
        }
    ],
    "COUNT0": [
        {
            "def_file": "eval.asm",
            "def_line": 759,
            "def_content": "COUNT0:\t\t\tLD      H,0\t\t\t; Return L"
        }
    ],
    "COUNT1": [
        {
            "def_file": "eval.asm",
            "def_line": 760,
            "def_content": "COUNT1:\t\t\tEXX\t\t\t\t; Return HL"
        }
    ],
    "COUNT2": [
        {
            "def_file": "eval.asm",
            "def_line": 766,
            "def_content": "COUNT2:\t\t\tEXX"
        }
    ],
    "COUNTV": [
        {
            "def_file": "eval.asm",
            "def_line": 757,
            "def_content": "COUNTV:\t\t\tLD      HL,(COUNT)\t\t; Return the print position sysvar"
        }
    ],
    "CREATE": [
        {
            "def_file": "main.asm",
            "def_line": 1750,
            "def_content": "CREATE:\t\t\tXOR     A"
        }
    ],
    "CRLF": [
        {
            "def_file": "main.asm",
            "def_line": 1276,
            "def_content": "CRLF:\t\t\tLD      A,CR\t\t\t; Output CR"
        }
    ],
    "CRTONULL": [
        {
            "def_file": "misc.asm",
            "def_line": 132,
            "def_content": "CRTONULL:\t\tPUSH\tBC"
        }
    ],
    "CRTONULL0": [
        {
            "def_file": "misc.asm",
            "def_line": 136,
            "def_content": "CRTONULL0:\t\tPUSH\tHL"
        }
    ],
    "CRTONULL1": [
        {
            "def_file": "misc.asm",
            "def_line": 137,
            "def_content": "CRTONULL1:\t\tLD\tA, (HL)"
        }
    ],
    "CRTONULL2": [
        {
            "def_file": "misc.asm",
            "def_line": 142,
            "def_content": "CRTONULL2:\t\tLD\t(HL), C"
        }
    ],
    "CSTR_CAT": [
        {
            "def_file": "misc.asm",
            "def_line": 217,
            "def_content": "CSTR_CAT:\t\tLD\tA, (HL)\t\t\t; Loop until we find the end of the first string"
        }
    ],
    "CSTR_CAT_1": [
        {
            "def_file": "misc.asm",
            "def_line": 223,
            "def_content": "CSTR_CAT_1:\t\tLD\tA, (DE)\t\t\t; Copy the second string onto the end of the first string"
        }
    ],
    "CSTR_ENDSWITH": [
        {
            "def_file": "misc.asm",
            "def_line": 201,
            "def_content": "CSTR_ENDSWITH:\t\tLD\tA, (HL)\t\t\t; Get the source string byte"
        }
    ],
    "CSTR_FINDCH": [
        {
            "def_file": "misc.asm",
            "def_line": 187,
            "def_content": "CSTR_FINDCH:\t\tLD\tA, (HL)\t\t\t; Get source"
        }
    ],
    "CSTR_FNAME": [
        {
            "def_file": "misc.asm",
            "def_line": 151,
            "def_content": "CSTR_FNAME:\t\tLD\tA, (HL)\t\t\t; Get source"
        }
    ],
    "CSTR_LINE": [
        {
            "def_file": "misc.asm",
            "def_line": 169,
            "def_content": "CSTR_LINE:\t\tLD\tA, (HL)\t\t\t; Get source"
        }
    ],
    "D2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1978,
            "def_content": "D2:\t\t\tSRL     H"
        }
    ],
    "D2C": [
        {
            "def_file": "fpp.asm",
            "def_line": 1977,
            "def_content": "D2C:\t\t\tINC     C"
        }
    ],
    "DATA_EX_": [
        {
            "def_file": "exec.asm",
            "def_line": 144,
            "def_content": "DATA_EX_:\t\t\tEQU     DCH"
        }
    ],
    "DATA_MN_": [
        {
            "def_file": "main.asm",
            "def_line": 132,
            "def_content": "DATA_MN_:\t\t\tEQU     DCH"
        }
    ],
    "DATPTR": [
        {
            "def_file": "ram.asm",
            "def_line": 83,
            "def_content": "DATPTR:         BLKB    2,0               ; Data Pointer"
        }
    ],
    "DB_": [
        {
            "def_file": "exec.asm",
            "def_line": 2400,
            "def_content": "DB_:\t\t\tCALL    NUMBER"
        }
    ],
    "DECODE": [
        {
            "def_file": "eval.asm",
            "def_line": 1402,
            "def_content": "DECODE:\t\t\tEXX"
        }
    ],
    "DEFS": [
        {
            "def_file": "exec.asm",
            "def_line": 2668,
            "def_content": "DEFS:\t\t\tOR\tA\t\t\t; Handle DEFB"
        }
    ],
    "DEF_": [
        {
            "def_file": "exec.asm",
            "def_line": 145,
            "def_content": "DEF_:\t\t\tEQU     DDH"
        }
    ],
    "DEG": [
        {
            "def_file": "eval.asm",
            "def_line": 889,
            "def_content": "DEG:\t\t\tLD      A,21"
        }
    ],
    "DEG_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 701,
            "def_content": "DEG_FP:\t\t\tCALL    FPI180"
        }
    ],
    "DEL": [
        {
            "def_file": "main.asm",
            "def_line": 1057,
            "def_content": "DEL:\t\t\tPUSH    DE"
        }
    ],
    "DELET1": [
        {
            "def_file": "main.asm",
            "def_line": 561,
            "def_content": "DELET1:\t\t\tLD      A,(HL)\t\t\t; Check whether it's the last line"
        }
    ],
    "DELETE": [
        {
            "def_file": "main.asm",
            "def_line": 559,
            "def_content": "DELETE:\t\t\tCALL    SETTOP          \t; Set TOP sysvar (first free byte at end of BASIC program)"
        }
    ],
    "DELIM": [
        {
            "def_file": "exec.asm",
            "def_line": 1978,
            "def_content": "DELIM:\t\t\tLD      A,(IY)          \t; Assembler delimiter"
        }
    ],
    "DIGITQ": [
        {
            "def_file": "fpp.asm",
            "def_line": 2259,
            "def_content": "DIGITQ:\t\t\tLD      A,(IX)"
        }
    ],
    "DIM": [
        {
            "def_file": "main.asm",
            "def_line": 133,
            "def_content": "DIM:\t\t\tEQU     DEH"
        }
    ],
    "DIM1": [
        {
            "def_file": "exec.asm",
            "def_line": 458,
            "def_content": "DIM1:\t\t\tINC     IY\t\t\t; Skip to the next token"
        }
    ],
    "DIM2": [
        {
            "def_file": "exec.asm",
            "def_line": 502,
            "def_content": "DIM2:\t\t\tLD      A,D"
        }
    ],
    "DIM3": [
        {
            "def_file": "exec.asm",
            "def_line": 493,
            "def_content": "DIM3:\t\t\tADD     HL,DE"
        }
    ],
    "DIM4": [
        {
            "def_file": "exec.asm",
            "def_line": 526,
            "def_content": "DIM4:\t\t\tOR      A\t\t\t;  A: The dimension variable type"
        }
    ],
    "DIM5": [
        {
            "def_file": "exec.asm",
            "def_line": 509,
            "def_content": "DIM5:\t\t\tCALL    NXT"
        }
    ],
    "DIM_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 440,
            "def_content": "DIM_EX:\t\t\tCALL    GETVAR          \t; Get the variable"
        }
    ],
    "DIR_SIZE": [
        {
            "def_file": "mos_api.inc",
            "def_line": 268,
            "def_content": "DIR_SIZE:         EQU FFOBJID_SIZE + 31  ; Total size of DIR structure"
        }
    ],
    "DISPAT": [
        {
            "def_file": "eval.asm",
            "def_line": 1690,
            "def_content": "DISPAT:\t\t\tPUSH    HL"
        }
    ],
    "DISPAT_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 82,
            "def_content": "DISPAT_FP:\t\t\tPUSH    HL"
        }
    ],
    "DISPT0": [
        {
            "def_file": "eval.asm",
            "def_line": 1693,
            "def_content": "DISPT0:\t\t\tPUSH    BC"
        }
    ],
    "DISPT2": [
        {
            "def_file": "eval.asm",
            "def_line": 1686,
            "def_content": "DISPT2:\t\t\tPUSH    HL"
        }
    ],
    "DIV0": [
        {
            "def_file": "fpp.asm",
            "def_line": 2121,
            "def_content": "DIV0:"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 8,
            "def_content": "DIV0:"
        }
    ],
    "DIV1": [
        {
            "def_file": "fpp.asm",
            "def_line": 2131,
            "def_content": "DIV1:\t\t\tCCF"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 18,
            "def_content": "DIV1:\t\t\tCCF"
        }
    ],
    "DIV2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1817,
            "def_content": "DIV2:\t\t\tCALL    D2"
        }
    ],
    "DIVA": [
        {
            "def_file": "fpp.asm",
            "def_line": 2120,
            "def_content": "DIVA:\t\t\tOR      A               ;CLEAR CARRY"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 7,
            "def_content": "DIVA:\t\t\tOR      A               ;CLEAR CARRY"
        }
    ],
    "DIVB": [
        {
            "def_file": "fpp.asm",
            "def_line": 2140,
            "def_content": "DIVB:"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 27,
            "def_content": "DIVB:"
        }
    ],
    "DIVBY0": [
        {
            "def_file": "fpp.asm",
            "def_line": 43,
            "def_content": "DIVBY0:\t\t\tEQU     18              ;Division by zero"
        }
    ],
    "DIVC": [
        {
            "def_file": "fpp.asm",
            "def_line": 2132,
            "def_content": "DIVC:\t\t\tRL      E               ;SHIFT RESULT INTO DE"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 19,
            "def_content": "DIVC:\t\t\tRL      E               ;SHIFT RESULT INTO DE"
        }
    ],
    "DIVK": [
        {
            "def_file": "eval.asm",
            "def_line": 166,
            "def_content": "DIVK:\t\t\tEQU     81H"
        }
    ],
    "DLOAD5": [
        {
            "def_file": "fpp.asm",
            "def_line": 1435,
            "def_content": "DLOAD5:\t\t\tLD      B,(IX+4)"
        }
    ],
    "DLOAD5_SPL": [
        {
            "def_file": "fpp.asm",
            "def_line": 1444,
            "def_content": "DLOAD5_SPL:\t\tLD      B,(IX+6)"
        }
    ],
    "DLP1": [
        {
            "def_file": "main.asm",
            "def_line": 1874,
            "def_content": "DLP1:\t\t\tEX      (SP),HL\t\t\t; HL: The first line number (off the stack)"
        }
    ],
    "DLPAIR": [
        {
            "def_file": "main.asm",
            "def_line": 1866,
            "def_content": "DLPAIR:\t\t\tCALL    LINNUM\t\t\t; Parse the first line number"
        }
    ],
    "DOIT": [
        {
            "def_file": "eval.asm",
            "def_line": 1648,
            "def_content": "DOIT:\t\t\tEX      AF,AF'"
        }
    ],
    "DONE": [
        {
            "def_file": "fpp.asm",
            "def_line": 933,
            "def_content": "DONE:\t\t\tLD      DE,0"
        }
    ],
    "DOSPC": [
        {
            "def_file": "exec.asm",
            "def_line": 2052,
            "def_content": "DOSPC:\t\t\tPUSH    BC"
        }
    ],
    "DOT": [
        {
            "def_file": "exec.asm",
            "def_line": 2964,
            "def_content": "DOT:\t\t\tCP\t'.'\t\t\t; Check if it is a dot character"
        }
    ],
    "DOTAB": [
        {
            "def_file": "exec.asm",
            "def_line": 2023,
            "def_content": "DOTAB:\t\t\tPUSH    BC"
        }
    ],
    "DOTAB1": [
        {
            "def_file": "exec.asm",
            "def_line": 2040,
            "def_content": "DOTAB1:\t\t\tINC     IY"
        }
    ],
    "DO_KEYBOARD": [
        {
            "def_file": "interrupts.asm",
            "def_line": 53,
            "def_content": "DO_KEYBOARD:\t\tMOSCALL\t\tmos_sysvars\t\t\t; Get the system variables"
        }
    ],
    "DO_KEYBOARD_0": [
        {
            "def_file": "interrupts.asm",
            "def_line": 59,
            "def_content": "DO_KEYBOARD_0:\t\tXOR\t\tA \t\t\t\t; Clear the keyboard values"
        }
    ],
    "DO_KEYBOARD_1": [
        {
            "def_file": "interrupts.asm",
            "def_line": 64,
            "def_content": "DO_KEYBOARD_1:\t\tLD\t\t(HL), A \t\t\t; Store the updated local copy of keycount"
        }
    ],
    "DRAW": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 229,
            "def_content": "DRAW:\t\t\tCALL\tEXPR_W2\t\t; Get X1 and Y1"
        }
    ],
    "DTABLE": [
        {
            "def_file": "fpp.asm",
            "def_line": 106,
            "def_content": "DTABLE:\t\t\tDW24  IAND            ;AND (INTEGER)"
        }
    ],
    "DYNVAR": [
        {
            "def_file": "ram.asm",
            "def_line": 68,
            "def_content": "DYNVAR:         BLKB    54*3,0            ; Dynamic Variable Pointers"
        }
    ],
    "ED": [
        {
            "def_file": "exec.asm",
            "def_line": 2785,
            "def_content": "ED:\t\t\tLD      A,0EDH\t\t\t; Write an ED prefix out"
        }
    ],
    "ELSE_EX_": [
        {
            "def_file": "exec.asm",
            "def_line": 138,
            "def_content": "ELSE_EX_:\t\t\tEQU     8BH"
        }
    ],
    "ELSE_MN_": [
        {
            "def_file": "main.asm",
            "def_line": 126,
            "def_content": "ELSE_MN_:\t\t\tEQU     8BH"
        }
    ],
    "ENCODE": [
        {
            "def_file": "main.asm",
            "def_line": 2086,
            "def_content": "ENCODE:\t\t\tSET     4,C\t\t\t; Set bit 4 of C (for lexical analysis - accept line number)"
        }
    ],
    "ENDPRO": [
        {
            "def_file": "exec.asm",
            "def_line": 1096,
            "def_content": "ENDPRO:\t\t\tPOP     BC\t\t\t; Pop the check value off the stack"
        }
    ],
    "END_": [
        {
            "def_file": "exec.asm",
            "def_line": 282,
            "def_content": "END_:\t\t\tCALL    SETLIN          ;FIND CURRENT LINE"
        }
    ],
    "ENVEL": [
        {
            "def_file": "sorry.asm",
            "def_line": 20,
            "def_content": "ENVEL:"
        }
    ],
    "EOF": [
        {
            "def_file": "eval.asm",
            "def_line": 690,
            "def_content": "EOF:\t\t\tCALL    CHANEL\t\t\t; Check for EOF"
        }
    ],
    "EORK": [
        {
            "def_file": "eval.asm",
            "def_line": 167,
            "def_content": "EORK:\t\t\tEQU     82H"
        }
    ],
    "EQUALS": [
        {
            "def_file": "exec.asm",
            "def_line": 2006,
            "def_content": "EQUALS:\t\t\tCALL    NXT\t\t\t; Skip whitespace"
        }
    ],
    "ERL": [
        {
            "def_file": "ram.asm",
            "def_line": 84,
            "def_content": "ERL:            BLKB    2,0               ; Error Line"
        }
    ],
    "ERLV": [
        {
            "def_file": "eval.asm",
            "def_line": 751,
            "def_content": "ERLV:\t\t\tLD      HL,(ERL)\t\t; Return the error line"
        }
    ],
    "ERR": [
        {
            "def_file": "ram.asm",
            "def_line": 89,
            "def_content": "ERR:            BLKB    1,0               ; Error Number"
        }
    ],
    "ERRLIN": [
        {
            "def_file": "ram.asm",
            "def_line": 85,
            "def_content": "ERRLIN:         BLKB    3,0               ; The \"ON ERROR\" Line"
        }
    ],
    "ERROR0": [
        {
            "def_file": "main.asm",
            "def_line": 944,
            "def_content": "ERROR0:\t\t\tCP      (HL)\t\t\t; Compare the character with 0 (the terminator byte)"
        }
    ],
    "ERROR0_EV": [
        {
            "def_file": "eval.asm",
            "def_line": 600,
            "def_content": "ERROR0_EV:\t\t\tJP      ERROR_           \t; Throw error \"Missing '\"'"
        }
    ],
    "ERROR0_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 388,
            "def_content": "ERROR0_EX:\t\t\tJP      ERROR_"
        }
    ],
    "ERROR1": [
        {
            "def_file": "main.asm",
            "def_line": 952,
            "def_content": "ERROR1:\t\t\tPUSH    HL\t\t\t; Stack the error string pointer and fall through to EXTERR"
        }
    ],
    "ERROR1_EV": [
        {
            "def_file": "eval.asm",
            "def_line": 1634,
            "def_content": "ERROR1_EV:\t\t\tJP      ERROR_           ;\"Missing )\""
        }
    ],
    "ERROR1_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 521,
            "def_content": "ERROR1_EX:\t\t\tJP      ERROR_"
        }
    ],
    "ERROR2": [
        {
            "def_file": "main.asm",
            "def_line": 981,
            "def_content": "ERROR2:\t\t\tLD      HL,0"
        }
    ],
    "ERROR2_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 731,
            "def_content": "ERROR2_EX:\t\t\tJP      ERROR_           ;\"ON range\""
        }
    ],
    "ERROR3": [
        {
            "def_file": "main.asm",
            "def_line": 1458,
            "def_content": "ERROR3:\t\t\tJP      ERROR_"
        }
    ],
    "ERROR3_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 944,
            "def_content": "ERROR3_EX:\t\t\tJP      ERROR_           \t; Throw the error \"Can't match FOR\""
        }
    ],
    "ERROR4": [
        {
            "def_file": "exec.asm",
            "def_line": 1311,
            "def_content": "ERROR4:\t\t\tJP      ERROR_           ;\"Out of DATA\""
        }
    ],
    "ERROR_": [
        {
            "def_file": "main.asm",
            "def_line": 932,
            "def_content": "ERROR_:\t\t\tLD      SP,(HIMEM)\t\t; Set SP to HIMEM"
        }
    ],
    "ERROR_FP_": [
        {
            "def_file": "fpp.asm",
            "def_line": 63,
            "def_content": "ERROR_FP_:\t\t\tLD      SP,IY           ;Restore SP from IY"
        }
    ],
    "ERRTRP": [
        {
            "def_file": "ram.asm",
            "def_line": 81,
            "def_content": "ERRTRP:         BLKB    3,0               ; Error Trap"
        }
    ],
    "ERRTXT": [
        {
            "def_file": "ram.asm",
            "def_line": 82,
            "def_content": "ERRTXT:         BLKB    2,0               ; Error Message Pointer"
        }
    ],
    "ERRV": [
        {
            "def_file": "eval.asm",
            "def_line": 754,
            "def_content": "ERRV:\t\t\tLD      HL,(ERR)\t\t; Return the error value"
        }
    ],
    "ERRWDS": [
        {
            "def_file": "main.asm",
            "def_line": 508,
            "def_content": "ERRWDS:\t\t\tDB    7, \"room\", 0\t\t;  0: No room"
        }
    ],
    "ESCAPE": [
        {
            "def_file": "exec.asm",
            "def_line": 387,
            "def_content": "ESCAPE:\t\t\tLD      A,17            ;\"Escape\""
        }
    ],
    "ESCDIS": [
        {
            "def_file": "patch.asm",
            "def_line": 243,
            "def_content": "ESCDIS: \t\tPOP     HL"
        }
    ],
    "ESCSET": [
        {
            "def_file": "patch.asm",
            "def_line": 238,
            "def_content": "ESCSET: \t\tPUSH    HL"
        }
    ],
    "ESCTEST": [
        {
            "def_file": "patch.asm",
            "def_line": 249,
            "def_content": "ESCTEST:\t\tCALL\tREADKEY\t\t\t; Read the keyboard"
        }
    ],
    "EVAL_": [
        {
            "def_file": "eval.asm",
            "def_line": 999,
            "def_content": "EVAL_:\t\t\tCALL    ITEMS"
        }
    ],
    "EXIT_": [
        {
            "def_file": "exec.asm",
            "def_line": 2905,
            "def_content": "EXIT_:\t\t\tLD      B,0\t\t\t; Set B to 0"
        }
    ],
    "EXIT_FP_": [
        {
            "def_file": "fpp.asm",
            "def_line": 57,
            "def_content": "EXIT_FP_:\t\t\tPOP     IY              ;Restore IY"
        }
    ],
    "EXP": [
        {
            "def_file": "eval.asm",
            "def_line": 937,
            "def_content": "EXP:\t\t\tLD      A,22"
        }
    ],
    "EXP0": [
        {
            "def_file": "fpp.asm",
            "def_line": 951,
            "def_content": "EXP0:\t\t\tCALL    LN2             ;LN(2)"
        }
    ],
    "EXP1": [
        {
            "def_file": "fpp.asm",
            "def_line": 966,
            "def_content": "EXP1:\t\t\tAND     80H"
        }
    ],
    "EXP2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1009,
            "def_content": "EXP2:\t\t\tJP      M,OFLOW         ;OVERFLOW"
        }
    ],
    "EXP3": [
        {
            "def_file": "fpp.asm",
            "def_line": 1010,
            "def_content": "EXP3:\t\t\tADD     A,80H"
        }
    ],
    "EXP3S3": [
        {
            "def_file": "eval.asm",
            "def_line": 323,
            "def_content": "EXP3S3:\t\t\tEXX"
        }
    ],
    "EXP4": [
        {
            "def_file": "fpp.asm",
            "def_line": 1004,
            "def_content": "EXP4:\t\t\tADD     A,80H"
        }
    ],
    "EXPR": [
        {
            "def_file": "eval.asm",
            "def_line": 197,
            "def_content": "EXPR:\t\t\tCALL    EXPR1\t\t\t; Get first operator by calling Level 6"
        }
    ],
    "EXPR0A": [
        {
            "def_file": "eval.asm",
            "def_line": 198,
            "def_content": "EXPR0A:\t\t\tCP      EORK            \t; Is operator EOR?"
        }
    ],
    "EXPR0B": [
        {
            "def_file": "eval.asm",
            "def_line": 203,
            "def_content": "EXPR0B:\t\t\tCALL    SAVE_EV            \t; Save first operand"
        }
    ],
    "EXPR1": [
        {
            "def_file": "eval.asm",
            "def_line": 210,
            "def_content": "EXPR1:\t\t\tCALL    EXPR2\t\t\t; Get first operator by calling Level 5"
        }
    ],
    "EXPR1A": [
        {
            "def_file": "eval.asm",
            "def_line": 211,
            "def_content": "EXPR1A:\t\t\tCP      ANDK\t\t\t; Is operator AND?"
        }
    ],
    "EXPR2": [
        {
            "def_file": "eval.asm",
            "def_line": 220,
            "def_content": "EXPR2:\t\t\tCALL    EXPR3\t\t\t; Get first operator by calling Level 4"
        }
    ],
    "EXPR2B": [
        {
            "def_file": "eval.asm",
            "def_line": 233,
            "def_content": "EXPR2B:\t\t\tLD      A,B\t\t\t; A: Code for the operator/compound operator"
        }
    ],
    "EXPR2C": [
        {
            "def_file": "eval.asm",
            "def_line": 241,
            "def_content": "EXPR2C:\t\t\tCALL    SAVE1"
        }
    ],
    "EXPR2S": [
        {
            "def_file": "eval.asm",
            "def_line": 246,
            "def_content": "EXPR2S:\t\t\tEX      AF,AF'\t\t\t; Handle string comparisons"
        }
    ],
    "EXPR3": [
        {
            "def_file": "eval.asm",
            "def_line": 280,
            "def_content": "EXPR3:\t\t\tCALL    EXPR4\t\t\t; Get first operator by calling Level 3"
        }
    ],
    "EXPR3A": [
        {
            "def_file": "eval.asm",
            "def_line": 281,
            "def_content": "EXPR3A:\t\t\tCP      '-'\t\t\t; Is it \"-\"?"
        }
    ],
    "EXPR3B": [
        {
            "def_file": "eval.asm",
            "def_line": 288,
            "def_content": "EXPR3B:\t\t\tCALL    SAVE_EV\t\t\t; Save the first operator"
        }
    ],
    "EXPR3S": [
        {
            "def_file": "eval.asm",
            "def_line": 293,
            "def_content": "EXPR3S:\t\t\tEX      AF,AF'\t\t\t; Handle string concatenation"
        }
    ],
    "EXPR4": [
        {
            "def_file": "eval.asm",
            "def_line": 334,
            "def_content": "EXPR4:\t\t\tCALL    EXPR5\t\t\t; Get first operator by calling Level 2"
        }
    ],
    "EXPR4A": [
        {
            "def_file": "eval.asm",
            "def_line": 335,
            "def_content": "EXPR4A:\t\t\tCP      '*'\t\t\t; \"*\" is valid"
        }
    ],
    "EXPR4B": [
        {
            "def_file": "eval.asm",
            "def_line": 343,
            "def_content": "EXPR4B:\t\t\tCALL    SAVE_EV"
        }
    ],
    "EXPR5": [
        {
            "def_file": "eval.asm",
            "def_line": 350,
            "def_content": "EXPR5:\t\t\tCALL    ITEM\t\t\t; Get variable"
        }
    ],
    "EXPR5A": [
        {
            "def_file": "eval.asm",
            "def_line": 353,
            "def_content": "EXPR5A:\t\t\tCALL    NXT\t\t\t; Skip spaces"
        }
    ],
    "EXPRI": [
        {
            "def_file": "eval.asm",
            "def_line": 372,
            "def_content": "EXPRI:\t\t\tCALL    EXPR\t\t\t; Evaluate the expression"
        }
    ],
    "EXPRN": [
        {
            "def_file": "eval.asm",
            "def_line": 365,
            "def_content": "EXPRN:\t\t\tCALL    EXPR\t\t\t; Evaluate expression"
        }
    ],
    "EXPRNG": [
        {
            "def_file": "fpp.asm",
            "def_line": 48,
            "def_content": "EXPRNG:\t\t\tEQU     24              ;Exp range"
        }
    ],
    "EXPRS": [
        {
            "def_file": "eval.asm",
            "def_line": 379,
            "def_content": "EXPRS:\t\t\tCALL    EXPR\t\t\t; Evaluate the expression"
        }
    ],
    "EXPRSC": [
        {
            "def_file": "eval.asm",
            "def_line": 1621,
            "def_content": "EXPRSC:\t\t\tCALL    EXPRS"
        }
    ],
    "EXPR_W2": [
        {
            "def_file": "patch.asm",
            "def_line": 970,
            "def_content": "EXPR_W2:\t\tCALL\tEXPRI\t\t\t; Get first parameter"
        }
    ],
    "EXP_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 950,
            "def_content": "EXP_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "EXT": [
        {
            "def_file": "eval.asm",
            "def_line": 801,
            "def_content": "EXT:\t\t\tCALL    CHANEL"
        }
    ],
    "EXTERR": [
        {
            "def_file": "main.asm",
            "def_line": 965,
            "def_content": "EXTERR:\t\t\tPOP     HL\t\t\t; Pop the error string pointer"
        }
    ],
    "EXT_DEFAULT": [
        {
            "def_file": "patch.asm",
            "def_line": 733,
            "def_content": "EXT_DEFAULT:\t\tPUSH\tHL\t\t\t; Stack the filename pointer"
        }
    ],
    "EXT_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 326,
            "def_content": "EXT_EX:\t\t\tPUSH    IY"
        }
    ],
    "EXT_HANDLER": [
        {
            "def_file": "patch.asm",
            "def_line": 748,
            "def_content": "EXT_HANDLER:\t\tPUSH\tHL\t\t\t; Stack the filename pointer"
        }
    ],
    "EXT_HANDLER_1": [
        {
            "def_file": "patch.asm",
            "def_line": 753,
            "def_content": "EXT_HANDLER_1:\t\tPUSH\tHL\t\t\t; Stack the pointer to the extension"
        }
    ],
    "EXT_HANDLER_2": [
        {
            "def_file": "patch.asm",
            "def_line": 772,
            "def_content": "EXT_HANDLER_2:\t\tINC\tDE\t\t\t; Skip to the file extension # byte"
        }
    ],
    "EXT_LOOKUP": [
        {
            "def_file": "patch.asm",
            "def_line": 784,
            "def_content": "EXT_LOOKUP:\t\tDB\t\".BBC\", 0, 0\t\t; First entry is the default extension"
        }
    ],
    "EZ80SFS_1": [
        {
            "def_file": "exec.asm",
            "def_line": 3922,
            "def_content": "EZ80SFS_1:"
        }
    ],
    "EZ80SFS_2": [
        {
            "def_file": "exec.asm",
            "def_line": 3932,
            "def_content": "EZ80SFS_2:"
        }
    ],
    "EZ80SFS_ADL0": [
        {
            "def_file": "exec.asm",
            "def_line": 3945,
            "def_content": "EZ80SFS_ADL0:"
        }
    ],
    "EZ80SFS_ADL1": [
        {
            "def_file": "exec.asm",
            "def_line": 3960,
            "def_content": "EZ80SFS_ADL1:"
        }
    ],
    "EZ80SF_FULL": [
        {
            "def_file": "exec.asm",
            "def_line": 2704,
            "def_content": "EZ80SF_FULL:\t\tLD\tA,(IY)\t\t\t; Check for a dot"
        }
    ],
    "EZ80SF_OK": [
        {
            "def_file": "exec.asm",
            "def_line": 2720,
            "def_content": "EZ80SF_OK:\t\tLD\tA,B\t\t\t; The operand value"
        }
    ],
    "EZ80SF_PART": [
        {
            "def_file": "exec.asm",
            "def_line": 2691,
            "def_content": "EZ80SF_PART:\t\tLD\tA,(IY)\t\t\t; Check for a dot"
        }
    ],
    "EZ80SF_TABLE": [
        {
            "def_file": "exec.asm",
            "def_line": 2731,
            "def_content": "EZ80SF_TABLE:\t\tLD\tHL,EZ80SFS_ADL0\t\t; Return with the ADL0 lookup table"
        }
    ],
    "FADD": [
        {
            "def_file": "fpp.asm",
            "def_line": 304,
            "def_content": "FADD:\t\t\tDEC     B"
        }
    ],
    "FADD3": [
        {
            "def_file": "fpp.asm",
            "def_line": 331,
            "def_content": "FADD3:\t\t\tCALL    SUB_             ;HLH'L'=HLH'L'-DED'E'"
        }
    ],
    "FADD4": [
        {
            "def_file": "fpp.asm",
            "def_line": 335,
            "def_content": "FADD4:\t\t\tEXX"
        }
    ],
    "FAND": [
        {
            "def_file": "fpp.asm",
            "def_line": 183,
            "def_content": "FAND:\t\t\tCALL    FIX2"
        }
    ],
    "FBDIV": [
        {
            "def_file": "fpp.asm",
            "def_line": 270,
            "def_content": "FBDIV:\t\t\tCALL    FIX2"
        }
    ],
    "FCOMP0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1859,
            "def_content": "FCOMP0:\t\t\tLD      A,0"
        }
    ],
    "FCOMP1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1865,
            "def_content": "FCOMP1:\t\t\tCALL    FLOAT2          ;Float both"
        }
    ],
    "FCOMP_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1855,
            "def_content": "FCOMP_FP:\t\t\tLD      A,B"
        }
    ],
    "FCP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1888,
            "def_content": "FCP:\t\t\tCALL    FCP1"
        }
    ],
    "FCP0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1891,
            "def_content": "FCP0:\t\t\tLD      A,C"
        }
    ],
    "FCP1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1904,
            "def_content": "FCP1:\t\t\tLD      A,H"
        }
    ],
    "FDIV": [
        {
            "def_file": "fpp.asm",
            "def_line": 358,
            "def_content": "FDIV:\t\t\tDEC     B               ;TEST FOR ZERO"
        }
    ],
    "FEOR": [
        {
            "def_file": "fpp.asm",
            "def_line": 203,
            "def_content": "FEOR:\t\t\tCALL    FIX2"
        }
    ],
    "FEQ": [
        {
            "def_file": "fpp.asm",
            "def_line": 637,
            "def_content": "FEQ:\t\t\tCALL    FCP"
        }
    ],
    "FETCHS": [
        {
            "def_file": "exec.asm",
            "def_line": 2077,
            "def_content": "FETCHS:\t\t\tPUSH    AF"
        }
    ],
    "FFOBJID_SIZE": [
        {
            "def_file": "mos_api.inc",
            "def_line": 247,
            "def_content": "FFOBJID_SIZE:     EQU 15   ; Total size of FFOBJID structure"
        }
    ],
    "FFOR": [
        {
            "def_file": "fpp.asm",
            "def_line": 223,
            "def_content": "FFOR:\t\t\tCALL    FIX2"
        }
    ],
    "FGE": [
        {
            "def_file": "fpp.asm",
            "def_line": 618,
            "def_content": "FGE:\t\t\tCALL    FCP"
        }
    ],
    "FGT": [
        {
            "def_file": "fpp.asm",
            "def_line": 611,
            "def_content": "FGT:\t\t\tCALL    FCP"
        }
    ],
    "FILINFO_SIZE": [
        {
            "def_file": "mos_api.inc",
            "def_line": 277,
            "def_content": "FILINFO_SIZE:     EQU 278  ; Total size of FILINFO structure"
        }
    ],
    "FILL": [
        {
            "def_file": "exec.asm",
            "def_line": 2057,
            "def_content": "FILL:\t\t\tOR      A"
        }
    ],
    "FILL1": [
        {
            "def_file": "exec.asm",
            "def_line": 2061,
            "def_content": "FILL1:\t\t\tLD      A,' '"
        }
    ],
    "FIL_SIZE": [
        {
            "def_file": "mos_api.inc",
            "def_line": 258,
            "def_content": "FIL_SIZE:         EQU FFOBJID_SIZE + 21  ; Total size of FIL structure"
        }
    ],
    "FIND": [
        {
            "def_file": "exec.asm",
            "def_line": 2903,
            "def_content": "FIND:\t\t\tCALL    SKIP\t\t\t; Skip delimiters"
        }
    ],
    "FIND0": [
        {
            "def_file": "exec.asm",
            "def_line": 2914,
            "def_content": "FIND0:\t\t\tLD      A,(HL)\t\t\t; Check for the end of the table (0 byte marker)"
        }
    ],
    "FIND1": [
        {
            "def_file": "exec.asm",
            "def_line": 2920,
            "def_content": "FIND1:\t\t\tBIT     7,(HL)"
        }
    ],
    "FIND2": [
        {
            "def_file": "exec.asm",
            "def_line": 2927,
            "def_content": "FIND2:\t\t\tPUSH    IY"
        }
    ],
    "FIND3": [
        {
            "def_file": "exec.asm",
            "def_line": 2928,
            "def_content": "FIND3:\t\t\tBIT     7,(HL)\t\t\t; Is this the end of token marker?"
        }
    ],
    "FIND4": [
        {
            "def_file": "exec.asm",
            "def_line": 2938,
            "def_content": "FIND4:\t\t\tPOP     IY"
        }
    ],
    "FIND5": [
        {
            "def_file": "exec.asm",
            "def_line": 2941,
            "def_content": "FIND5:\t\t\tCALL    DELIM\t\t\t; Is it a delimiter?"
        }
    ],
    "FIND6": [
        {
            "def_file": "exec.asm",
            "def_line": 2946,
            "def_content": "FIND6:\t\t\tLD      A,B\t\t\t; At this point we have a token"
        }
    ],
    "FINDL": [
        {
            "def_file": "main.asm",
            "def_line": 1342,
            "def_content": "FINDL:\t\t\tEX      DE,HL\t\t\t; DE: Line number (binary)"
        }
    ],
    "FINDL1": [
        {
            "def_file": "main.asm",
            "def_line": 1352,
            "def_content": "FINDL1:\t\t\tLD      C,(HL)\t\t\t;  C: The line length"
        }
    ],
    "FIX": [
        {
            "def_file": "fpp.asm",
            "def_line": 1584,
            "def_content": "FIX:\t\t\tEX      AF,AF'"
        }
    ],
    "FIX1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1588,
            "def_content": "FIX1:\t\t\tCALL    DIV2"
        }
    ],
    "FIX2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1602,
            "def_content": "FIX2:\t\t\tCALL    SWAP_FP"
        }
    ],
    "FLAGS": [
        {
            "def_file": "ram.asm",
            "def_line": 116,
            "def_content": "FLAGS:          BLKB    1,0       ; Miscellaneous flags"
        }
    ],
    "FLE": [
        {
            "def_file": "fpp.asm",
            "def_line": 624,
            "def_content": "FLE:\t\t\tCALL    FCP"
        }
    ],
    "FLO48": [
        {
            "def_file": "fpp.asm",
            "def_line": 1719,
            "def_content": "FLO48:\t\t\tBIT     7,H"
        }
    ],
    "FLOAT2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1754,
            "def_content": "FLOAT2:\t\t\tCALL    SWAP_FP"
        }
    ],
    "FLOATA": [
        {
            "def_file": "fpp.asm",
            "def_line": 1750,
            "def_content": "FLOATA:\t\t\tEX      AF,AF'"
        }
    ],
    "FLOAT_": [
        {
            "def_file": "fpp.asm",
            "def_line": 1735,
            "def_content": "FLOAT_:\t\t\tBIT     7,H"
        }
    ],
    "FLT": [
        {
            "def_file": "fpp.asm",
            "def_line": 605,
            "def_content": "FLT:\t\t\tCALL    FCP"
        }
    ],
    "FMOD": [
        {
            "def_file": "fpp.asm",
            "def_line": 243,
            "def_content": "FMOD:\t\t\tCALL    FIX2"
        }
    ],
    "FMUL": [
        {
            "def_file": "fpp.asm",
            "def_line": 452,
            "def_content": "FMUL:\t\t\tDEC     B               ;TEST FOR ZERO"
        }
    ],
    "FN": [
        {
            "def_file": "main.asm",
            "def_line": 129,
            "def_content": "FN:\t\t\tEQU     A4H"
        }
    ],
    "FNCHK": [
        {
            "def_file": "exec.asm",
            "def_line": 951,
            "def_content": "FNCHK:\t\t\tEQU     $\t\t\t; This will never fall through as PROC1 will do a JP XEQ"
        }
    ],
    "FNE": [
        {
            "def_file": "fpp.asm",
            "def_line": 631,
            "def_content": "FNE:\t\t\tCALL    FCP"
        }
    ],
    "FNEND": [
        {
            "def_file": "exec.asm",
            "def_line": 392,
            "def_content": "FNEND:\t\t\tCALL    EXPR            ;FUNCTION RESULT"
        }
    ],
    "FNEND0": [
        {
            "def_file": "exec.asm",
            "def_line": 417,
            "def_content": "FNEND0:\t\t\tPOP     IX"
        }
    ],
    "FNEND1": [
        {
            "def_file": "exec.asm",
            "def_line": 428,
            "def_content": "FNEND1:\t\t\tLD      HL,0"
        }
    ],
    "FNEND5": [
        {
            "def_file": "exec.asm",
            "def_line": 397,
            "def_content": "FNEND5:\t\t\tPOP     BC"
        }
    ],
    "FNPTR": [
        {
            "def_file": "ram.asm",
            "def_line": 69,
            "def_content": "FNPTR:          BLKB    3,0               ; Dynamic Function Pointers"
        }
    ],
    "FN_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 949,
            "def_content": "FN_EX:\t\t\tPUSH    AF              \t; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5"
        }
    ],
    "FONE_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 926,
            "def_content": "FONE_FP:\t\t\tLD      HL,0"
        }
    ],
    "FOR": [
        {
            "def_file": "main.asm",
            "def_line": 134,
            "def_content": "FOR:\t\t\tEQU     E3H"
        }
    ],
    "FOR1": [
        {
            "def_file": "exec.asm",
            "def_line": 851,
            "def_content": "FOR1:\t\t\tPUSH    BC\t\t\t; Stack the STEP value"
        }
    ],
    "FORCHK": [
        {
            "def_file": "exec.asm",
            "def_line": 861,
            "def_content": "FORCHK:\t\t\tEQU     $"
        }
    ],
    "FORMAT": [
        {
            "def_file": "exec.asm",
            "def_line": 2013,
            "def_content": "FORMAT:\t\t\tCP      TAB"
        }
    ],
    "FORVAR": [
        {
            "def_file": "exec.asm",
            "def_line": 816,
            "def_content": "FORVAR:\t\t\tLD      A,34"
        }
    ],
    "FOR_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 819,
            "def_content": "FOR_EX:\t\t\tCALL    ASSIGN\t\t\t; Assign the START expression value to a variable"
        }
    ],
    "FPI180": [
        {
            "def_file": "fpp.asm",
            "def_line": 716,
            "def_content": "FPI180:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "FPOW": [
        {
            "def_file": "fpp.asm",
            "def_line": 581,
            "def_content": "FPOW:\t\t\tBIT     7,D"
        }
    ],
    "FPOW0": [
        {
            "def_file": "fpp.asm",
            "def_line": 574,
            "def_content": "FPOW0:\t\t\tPOP     AF"
        }
    ],
    "FPOW1": [
        {
            "def_file": "fpp.asm",
            "def_line": 595,
            "def_content": "FPOW1:\t\t\tCALL    SWAP_FP"
        }
    ],
    "FPP": [
        {
            "def_file": "fpp.asm",
            "def_line": 52,
            "def_content": "FPP:\t\t\tPUSH    IY              ;Save IY"
        }
    ],
    "FPP1": [
        {
            "def_file": "eval.asm",
            "def_line": 971,
            "def_content": "FPP1:\t\t\tCALL    FPP"
        }
    ],
    "FPPN": [
        {
            "def_file": "eval.asm",
            "def_line": 968,
            "def_content": "FPPN:\t\t\tPUSH    AF"
        }
    ],
    "FREE": [
        {
            "def_file": "ram.asm",
            "def_line": 75,
            "def_content": "FREE:           BLKB    3,0               ; First Free Space Byte"
        }
    ],
    "FSUB": [
        {
            "def_file": "fpp.asm",
            "def_line": 285,
            "def_content": "FSUB:\t\t\tLD      A,D"
        }
    ],
    "FTABLE": [
        {
            "def_file": "fpp.asm",
            "def_line": 123,
            "def_content": "FTABLE:"
        }
    ],
    "FTEST_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1833,
            "def_content": "FTEST_FP:\t\t\tCALL    TEST_FP"
        }
    ],
    "FUNTBL": [
        {
            "def_file": "eval.asm",
            "def_line": 103,
            "def_content": "FUNTBL:\t\t\tDW24\tDECODE\t\t\t; Line number"
        }
    ],
    "FUNTBL_END": [
        {
            "def_file": "eval.asm",
            "def_line": 161,
            "def_content": "FUNTBL_END:\t\tEQU\t$"
        }
    ],
    "FUNTOK": [
        {
            "def_file": "eval.asm",
            "def_line": 101,
            "def_content": "FUNTOK:\t\t\tEQU\t8DH\t\t\t; First token number"
        }
    ],
    "G9": [
        {
            "def_file": "eval.asm",
            "def_line": 1504,
            "def_content": "G9:\t\t\tDW    9"
        }
    ],
    "GCOL": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 188,
            "def_content": "GCOL:\t\t\tCALL\tEXPRI\t\t\t; Parse MODE"
        }
    ],
    "GET": [
        {
            "def_file": "eval.asm",
            "def_line": 707,
            "def_content": "GET:\t\t\tCALL    NXT\t\t\t; Skip whitespace"
        }
    ],
    "GET0": [
        {
            "def_file": "eval.asm",
            "def_line": 717,
            "def_content": "GET0:\t\t\tCALL    GETS\t\t\t; Read the keyboard character"
        }
    ],
    "GET1": [
        {
            "def_file": "eval.asm",
            "def_line": 1206,
            "def_content": "GET1:\t\t\tSCF"
        }
    ],
    "GETCSR": [
        {
            "def_file": "patch.asm",
            "def_line": 154,
            "def_content": "GETCSR:\t\t\tPUSH\tIX\t\t\t; Get the system vars in IX"
        }
    ],
    "GETDAT": [
        {
            "def_file": "exec.asm",
            "def_line": 1306,
            "def_content": "GETDAT:\t\t\tLD      A,DATA_EX_"
        }
    ],
    "GETDEF": [
        {
            "def_file": "main.asm",
            "def_line": 1604,
            "def_content": "GETDEF:\t\t\tLD      A,(IY+1)\t\t; Get the next character from the tokenised line (the start of the procedure name)"
        }
    ],
    "GETEX1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1515,
            "def_content": "GETEX1:\t\t\tCALL    DIGITQ"
        }
    ],
    "GETEX2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1532,
            "def_content": "GETEX2:\t\t\tEX      AF,AF'          ;RESTORE SIGN"
        }
    ],
    "GETEXP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1509,
            "def_content": "GETEXP:\t\t\tPUSH    BC              ;SAVE REGISTERS"
        }
    ],
    "GETEXT": [
        {
            "def_file": "patch.asm",
            "def_line": 940,
            "def_content": "GETEXT:         PUSH    IY"
        }
    ],
    "GETIME": [
        {
            "def_file": "patch.asm",
            "def_line": 133,
            "def_content": "GETIME:\t\t\tPUSH \tIX"
        }
    ],
    "GETIMS": [
        {
            "def_file": "patch.asm",
            "def_line": 956,
            "def_content": "GETIMS:\t\t\tPUSH\tIY"
        }
    ],
    "GETPTR": [
        {
            "def_file": "patch.asm",
            "def_line": 905,
            "def_content": "GETPTR:\t\t\tPUSH\t\tIY"
        }
    ],
    "GETS": [
        {
            "def_file": "eval.asm",
            "def_line": 1202,
            "def_content": "GETS:\t\t\tCALL\tNXT\t\t;NEW CODE FOR GET$(X,Y)"
        }
    ],
    "GETSCHR": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 73,
            "def_content": "GETSCHR:\t\tINC\tIY"
        }
    ],
    "GETV0": [
        {
            "def_file": "main.asm",
            "def_line": 1580,
            "def_content": "GETV0:\t\t\tPUSH    HL\t\t\t; HL will be 0 for a unary indirection, or the address of the variable for a binary indirection"
        }
    ],
    "GETV2": [
        {
            "def_file": "main.asm",
            "def_line": 1502,
            "def_content": "GETV2:\t\t\tPUSH    AF"
        }
    ],
    "GETV3": [
        {
            "def_file": "main.asm",
            "def_line": 1504,
            "def_content": "GETV3:\t\t\tPUSH    HL"
        }
    ],
    "GETV4": [
        {
            "def_file": "main.asm",
            "def_line": 1549,
            "def_content": "GETV4:\t\t\tLD      A,128           \t; Static strings"
        }
    ],
    "GETV5": [
        {
            "def_file": "main.asm",
            "def_line": 1552,
            "def_content": "GETV5:\t\t\tLD      A,4             \t; Unary 32-bit indirection"
        }
    ],
    "GETV6": [
        {
            "def_file": "main.asm",
            "def_line": 1555,
            "def_content": "GETV6:\t\t\tXOR     A               \t; Unary 8-bit indirection"
        }
    ],
    "GETV7": [
        {
            "def_file": "main.asm",
            "def_line": 1557,
            "def_content": "GETV7:\t\t\tLD      HL,0"
        }
    ],
    "GETV8": [
        {
            "def_file": "main.asm",
            "def_line": 1561,
            "def_content": "GETV8:\t\t\tLD      B,4             \t; Binary 32-bt indirection"
        }
    ],
    "GETV9": [
        {
            "def_file": "main.asm",
            "def_line": 1564,
            "def_content": "GETV9:\t\t\tLD      B,0             \t; Binary 8-bit indirection"
        }
    ],
    "GETVA": [
        {
            "def_file": "main.asm",
            "def_line": 1566,
            "def_content": "GETVA:\t\t\tPUSH    HL"
        }
    ],
    "GETVAR": [
        {
            "def_file": "main.asm",
            "def_line": 1471,
            "def_content": "GETVAR:\t\t\tLD      A,(IY)\t\t\t; Get the first character"
        }
    ],
    "GETVX": [
        {
            "def_file": "main.asm",
            "def_line": 1537,
            "def_content": "GETVX:\t\t\tCP      '?'"
        }
    ],
    "GETVZ": [
        {
            "def_file": "main.asm",
            "def_line": 1541,
            "def_content": "GETVZ:\t\t\tPUSH    HL              \t; Set exit conditions"
        }
    ],
    "GOSCHK": [
        {
            "def_file": "exec.asm",
            "def_line": 758,
            "def_content": "GOSCHK:\t\t\tEQU     $"
        }
    ],
    "GOSUB": [
        {
            "def_file": "main.asm",
            "def_line": 135,
            "def_content": "GOSUB:\t\t\tEQU     E4H"
        }
    ],
    "GOSUB1": [
        {
            "def_file": "exec.asm",
            "def_line": 755,
            "def_content": "GOSUB1:\t\t\tPUSH    IY              \t; Push the current execution address onto the execution stack"
        }
    ],
    "GOSUB_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 754,
            "def_content": "GOSUB_EX:\t\t\tCALL    ITEMI\t\t\t; Fetch the line number"
        }
    ],
    "GOTO": [
        {
            "def_file": "main.asm",
            "def_line": 136,
            "def_content": "GOTO:\t\t\tEQU     E5H"
        }
    ],
    "GOTO1": [
        {
            "def_file": "exec.asm",
            "def_line": 739,
            "def_content": "GOTO1:\t\t\tCALL    TERMQ\t\t\t; Check for terminator"
        }
    ],
    "GOTO2": [
        {
            "def_file": "exec.asm",
            "def_line": 741,
            "def_content": "GOTO2:\t\t\tEXX"
        }
    ],
    "GOTO_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 738,
            "def_content": "GOTO_EX:\t\t\tCALL    ITEMI           \t; Fetch the line number"
        }
    ],
    "GPIOB_M0": [
        {
            "def_file": "gpio.asm",
            "def_line": 37,
            "def_content": "GPIOB_M0:\t\tRES_GPIO PB_DDR,  B"
        }
    ],
    "GPIOB_M1": [
        {
            "def_file": "gpio.asm",
            "def_line": 44,
            "def_content": "GPIOB_M1:\t\tSET_GPIO PB_DDR,  B"
        }
    ],
    "GPIOB_M2": [
        {
            "def_file": "gpio.asm",
            "def_line": 51,
            "def_content": "GPIOB_M2:\t\tRES_GPIO PB_DDR,  B"
        }
    ],
    "GPIOB_M3": [
        {
            "def_file": "gpio.asm",
            "def_line": 58,
            "def_content": "GPIOB_M3:\t\tSET_GPIO PB_DDR,  B"
        }
    ],
    "GPIOB_M4": [
        {
            "def_file": "gpio.asm",
            "def_line": 65,
            "def_content": "GPIOB_M4:\t\tSET_GPIO PB_DR,   B"
        }
    ],
    "GPIOB_M5": [
        {
            "def_file": "gpio.asm",
            "def_line": 73,
            "def_content": "GPIOB_M5:\t\tSET_GPIO PB_DDR,  B"
        }
    ],
    "GPIOB_M6": [
        {
            "def_file": "gpio.asm",
            "def_line": 80,
            "def_content": "GPIOB_M6:\t\tRES_GPIO PB_DR,   B"
        }
    ],
    "GPIOB_M7": [
        {
            "def_file": "gpio.asm",
            "def_line": 89,
            "def_content": "GPIOB_M7:\t\tSET_GPIO PB_DR,   B"
        }
    ],
    "GPIOB_M8": [
        {
            "def_file": "gpio.asm",
            "def_line": 98,
            "def_content": "GPIOB_M8:\t\tRES_GPIO PB_DR,   B"
        }
    ],
    "GPIOB_M9": [
        {
            "def_file": "gpio.asm",
            "def_line": 106,
            "def_content": "GPIOB_M9:\t\tSET_GPIO PB_DR,   B"
        }
    ],
    "GPIOB_SETMODE": [
        {
            "def_file": "gpio.asm",
            "def_line": 23,
            "def_content": "GPIOB_SETMODE:\t\tCALL\tSWITCH_A"
        }
    ],
    "GROUP02": [
        {
            "def_file": "exec.asm",
            "def_line": 2365,
            "def_content": "GROUP02:\t\tSUB     10\t\t\t; The number of opcodes in GROUP2 and GROUP3"
        }
    ],
    "GROUP04": [
        {
            "def_file": "exec.asm",
            "def_line": 2377,
            "def_content": "GROUP04:\t\tSUB     3\t\t\t; The number of opcodes in GROUP4"
        }
    ],
    "GROUP04_1": [
        {
            "def_file": "exec.asm",
            "def_line": 2379,
            "def_content": "GROUP04_1:\t\tCALL    PAIR_EX"
        }
    ],
    "GROUP05": [
        {
            "def_file": "exec.asm",
            "def_line": 2386,
            "def_content": "GROUP05:\t\tSUB     8+2\t\t\t; The number of opcodes in GROUP5 and GROUP6"
        }
    ],
    "GROUP05_1": [
        {
            "def_file": "exec.asm",
            "def_line": 2395,
            "def_content": "GROUP05_1:\t\tCALL    REGLO\t\t\t; Handle ADD A,?"
        }
    ],
    "GROUP05_HL": [
        {
            "def_file": "exec.asm",
            "def_line": 2403,
            "def_content": "GROUP05_HL:\t\tAND     3FH"
        }
    ],
    "GROUP07": [
        {
            "def_file": "exec.asm",
            "def_line": 2419,
            "def_content": "GROUP07:\t\tSUB     2\t\t\t; The number of opcodes in GROUP7"
        }
    ],
    "GROUP08": [
        {
            "def_file": "exec.asm",
            "def_line": 2436,
            "def_content": "GROUP08:\t\tSUB\t2\t\t\t; The number of opcodes in GROUP8"
        }
    ],
    "GROUP09": [
        {
            "def_file": "exec.asm",
            "def_line": 2467,
            "def_content": "GROUP09:\t\tSUB     2\t\t\t; The number of opcodes in GROUP09 amd GROUP10"
        }
    ],
    "GROUP11": [
        {
            "def_file": "exec.asm",
            "def_line": 2494,
            "def_content": "GROUP11:\t\tSUB     2\t\t\t; The number of opcodes in GROUP11"
        }
    ],
    "GROUP12": [
        {
            "def_file": "exec.asm",
            "def_line": 2518,
            "def_content": "GROUP12:\t\tSUB\t1\t\t\t; The number of opcodes in GROUP12"
        }
    ],
    "GROUP12_1": [
        {
            "def_file": "exec.asm",
            "def_line": 2531,
            "def_content": "GROUP12_1:\t\tCALL    BYTE_\t\t\t; Output the opcode (with conditions)"
        }
    ],
    "GROUP13": [
        {
            "def_file": "exec.asm",
            "def_line": 2536,
            "def_content": "GROUP13:\t\tSUB\t1\t\t\t; The number of opcodes in GROUP13"
        }
    ],
    "GROUP13_1": [
        {
            "def_file": "exec.asm",
            "def_line": 2538,
            "def_content": "GROUP13_1:\t\tCALL\tEZ80SF_FULL\t\t; Evaluate the suffix"
        }
    ],
    "GROUP14": [
        {
            "def_file": "exec.asm",
            "def_line": 2544,
            "def_content": "GROUP14:\t\tSUB\t1\t\t\t; The number of opcodes in GROUP14"
        }
    ],
    "GROUP15": [
        {
            "def_file": "exec.asm",
            "def_line": 2558,
            "def_content": "GROUP15:\t\tSUB\t1\t\t\t; The number of opcodes in GROUP15"
        }
    ],
    "GROUP15_1": [
        {
            "def_file": "exec.asm",
            "def_line": 2560,
            "def_content": "GROUP15_1:\t\tCALL    COND_"
        }
    ],
    "GROUP16": [
        {
            "def_file": "exec.asm",
            "def_line": 2568,
            "def_content": "GROUP16:\t\tSUB\t1\t\t\t; The number of opcodes in GROUP16"
        }
    ],
    "GROUP17": [
        {
            "def_file": "exec.asm",
            "def_line": 2617,
            "def_content": "GROUP17:\t\tSUB\t1\t\t\t; The number of opcodes in GROUP17"
        }
    ],
    "GROUP17_1": [
        {
            "def_file": "exec.asm",
            "def_line": 2628,
            "def_content": "GROUP17_1:\t\tLD\tA,B\t\t\t; Check the register rangs"
        }
    ],
    "HEX": [
        {
            "def_file": "eval.asm",
            "def_line": 419,
            "def_content": "HEX:\t\t\tCALL    ZERO\t\t\t; Set result to 0"
        }
    ],
    "HEX1": [
        {
            "def_file": "eval.asm",
            "def_line": 422,
            "def_content": "HEX1:\t\t\tINC     IY\t\t\t; Move pointer to next character"
        }
    ],
    "HEX2": [
        {
            "def_file": "eval.asm",
            "def_line": 426,
            "def_content": "HEX2:\t\t\tEXX\t\t\t\t; Shift the result left B (4) times. This makes"
        }
    ],
    "HEXDIG": [
        {
            "def_file": "eval.asm",
            "def_line": 1594,
            "def_content": "HEXDIG:\t\t\tLD      A,(IY)"
        }
    ],
    "HEXOUT": [
        {
            "def_file": "exec.asm",
            "def_line": 2301,
            "def_content": "HEXOUT:\t\t\tAND     0FH"
        }
    ],
    "HEXSP": [
        {
            "def_file": "exec.asm",
            "def_line": 2291,
            "def_content": "HEXSP:\t\t\tCALL    HEX_EX"
        }
    ],
    "HEXST1": [
        {
            "def_file": "eval.asm",
            "def_line": 1443,
            "def_content": "HEXST1:\t\t\tPUSH    BC"
        }
    ],
    "HEXST2": [
        {
            "def_file": "eval.asm",
            "def_line": 1446,
            "def_content": "HEXST2:\t\t\tEXX"
        }
    ],
    "HEXST3": [
        {
            "def_file": "eval.asm",
            "def_line": 1460,
            "def_content": "HEXST3:\t\t\tADD     A,90H"
        }
    ],
    "HEXSTR": [
        {
            "def_file": "eval.asm",
            "def_line": 1440,
            "def_content": "HEXSTR:\t\t\tCALL    SFIX"
        }
    ],
    "HEXSTS": [
        {
            "def_file": "eval.asm",
            "def_line": 1434,
            "def_content": "HEXSTS:\t\t\tINC     IY              ;SKIP TILDE"
        }
    ],
    "HEX_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2294,
            "def_content": "HEX_EX:\t\t\tPUSH    AF"
        }
    ],
    "HIMEM": [
        {
            "def_file": "ram.asm",
            "def_line": 76,
            "def_content": "HIMEM:          BLKB    3,0               ; First Protected Byte"
        }
    ],
    "HIMEMV": [
        {
            "def_file": "eval.asm",
            "def_line": 735,
            "def_content": "HIMEMV:\t\t\tLD      HL,(HIMEM)\t\t; Return the HIMEM system variable"
        }
    ],
    "HIMEMV_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1430,
            "def_content": "HIMEMV_EX:\t\t\tCALL    EQUALS\t\t\t; Check for '=' and throw an error if not found"
        }
    ],
    "HUH": [
        {
            "def_file": "patch.asm",
            "def_line": 353,
            "def_content": "HUH:    \t\tLD      A,254\t\t\t; Bad command error"
        }
    ],
    "IADD": [
        {
            "def_file": "fpp.asm",
            "def_line": 300,
            "def_content": "IADD:\t\t\tCALL    ADD_"
        }
    ],
    "IAND": [
        {
            "def_file": "fpp.asm",
            "def_line": 184,
            "def_content": "IAND:\t\t\tLD      A,H"
        }
    ],
    "IBDIV": [
        {
            "def_file": "fpp.asm",
            "def_line": 271,
            "def_content": "IBDIV:\t\t\tCALL    IMOD"
        }
    ],
    "ICP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1877,
            "def_content": "ICP:\t\t\tCALL    ICP1"
        }
    ],
    "ICP0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1894,
            "def_content": "ICP0:"
        }
    ],
    "ICP1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1915,
            "def_content": "ICP1:\t\t\tLD      A,H"
        }
    ],
    "IDIV": [
        {
            "def_file": "fpp.asm",
            "def_line": 357,
            "def_content": "IDIV:\t\t\tCALL    FLOAT2"
        }
    ],
    "IEOR": [
        {
            "def_file": "fpp.asm",
            "def_line": 204,
            "def_content": "IEOR:\t\t\tLD      A,H"
        }
    ],
    "IEQ": [
        {
            "def_file": "fpp.asm",
            "def_line": 639,
            "def_content": "IEQ:\t\t\tCALL    ICP"
        }
    ],
    "IEQ1": [
        {
            "def_file": "fpp.asm",
            "def_line": 640,
            "def_content": "IEQ1:\t\t\tRET     NZ"
        }
    ],
    "IF1": [
        {
            "def_file": "exec.asm",
            "def_line": 1324,
            "def_content": "IF1:\t\t\tCALL    NXT"
        }
    ],
    "IFNOT": [
        {
            "def_file": "exec.asm",
            "def_line": 1328,
            "def_content": "IFNOT:\t\t\tLD      A,(IY)"
        }
    ],
    "IF_": [
        {
            "def_file": "exec.asm",
            "def_line": 1317,
            "def_content": "IF_:\t\t\tCALL    EXPRI"
        }
    ],
    "IGE": [
        {
            "def_file": "fpp.asm",
            "def_line": 620,
            "def_content": "IGE:\t\t\tCALL    ICP"
        }
    ],
    "IGE1": [
        {
            "def_file": "fpp.asm",
            "def_line": 621,
            "def_content": "IGE1:\t\t\tRET     C"
        }
    ],
    "IGT": [
        {
            "def_file": "fpp.asm",
            "def_line": 613,
            "def_content": "IGT:\t\t\tCALL    ICP"
        }
    ],
    "IGT1": [
        {
            "def_file": "fpp.asm",
            "def_line": 614,
            "def_content": "IGT1:\t\t\tRET     Z"
        }
    ],
    "ILE": [
        {
            "def_file": "fpp.asm",
            "def_line": 626,
            "def_content": "ILE:\t\t\tCALL    ICP"
        }
    ],
    "ILE1": [
        {
            "def_file": "fpp.asm",
            "def_line": 627,
            "def_content": "ILE1:\t\t\tJR      Z,TRUE_FP"
        }
    ],
    "ILT": [
        {
            "def_file": "fpp.asm",
            "def_line": 607,
            "def_content": "ILT:\t\t\tCALL    ICP"
        }
    ],
    "ILT1": [
        {
            "def_file": "fpp.asm",
            "def_line": 608,
            "def_content": "ILT1:\t\t\tRET     NC"
        }
    ],
    "IMOD": [
        {
            "def_file": "fpp.asm",
            "def_line": 244,
            "def_content": "IMOD:\t\t\tLD      A,H"
        }
    ],
    "IMUL": [
        {
            "def_file": "fpp.asm",
            "def_line": 404,
            "def_content": "IMUL:\t\t\tLD      A,H"
        }
    ],
    "IMUL1": [
        {
            "def_file": "fpp.asm",
            "def_line": 433,
            "def_content": "IMUL1:\t\t\tDEC     C"
        }
    ],
    "INCC": [
        {
            "def_file": "fpp.asm",
            "def_line": 1825,
            "def_content": "INCC:\t\t\tINC     C"
        }
    ],
    "INCREM": [
        {
            "def_file": "ram.asm",
            "def_line": 100,
            "def_content": "INCREM:         BLKB    1,0               ; Auto-Increment Value"
        }
    ],
    "IND1": [
        {
            "def_file": "main.asm",
            "def_line": 1258,
            "def_content": "IND1:\t\t\tINC     B\t\t\t; Increment back to 0"
        }
    ],
    "IND2_": [
        {
            "def_file": "main.asm",
            "def_line": 1260,
            "def_content": "IND2_:\t\t\tCP      REPEAT\t\t\t; If the token is REPEAT"
        }
    ],
    "IND3": [
        {
            "def_file": "main.asm",
            "def_line": 1266,
            "def_content": "IND3:\t\t\tINC     C\t\t\t; Incremet back to 0"
        }
    ],
    "IND4": [
        {
            "def_file": "main.asm",
            "def_line": 1267,
            "def_content": "IND4:\t\t\tEXX"
        }
    ],
    "INDENT": [
        {
            "def_file": "main.asm",
            "def_line": 1251,
            "def_content": "INDENT:\t\t\tEXX"
        }
    ],
    "INE": [
        {
            "def_file": "fpp.asm",
            "def_line": 633,
            "def_content": "INE:\t\t\tCALL    ICP"
        }
    ],
    "INE1": [
        {
            "def_file": "fpp.asm",
            "def_line": 634,
            "def_content": "INE1:\t\t\tRET     Z"
        }
    ],
    "INKEY": [
        {
            "def_file": "eval.asm",
            "def_line": 700,
            "def_content": "INKEY:\t\t\tCALL    ITEMI\t\t\t; Get the argument"
        }
    ],
    "INKEY0": [
        {
            "def_file": "eval.asm",
            "def_line": 1216,
            "def_content": "INKEY0:\t\t\tCALL    OSKEY\t\t\t; This is the entry point for INKEY(n)"
        }
    ],
    "INKEY1": [
        {
            "def_file": "eval.asm",
            "def_line": 1217,
            "def_content": "INKEY1:\t\t\tLD      DE,ACCS\t\t\t; Store the result in the string accumulator"
        }
    ],
    "INKEYM": [
        {
            "def_file": "eval.asm",
            "def_line": 1227,
            "def_content": "INKEYM:\t\t\tMOSCALL\tmos_getkbmap\t\t; Get the base address of the keyboard"
        }
    ],
    "INKEYS": [
        {
            "def_file": "eval.asm",
            "def_line": 1214,
            "def_content": "INKEYS:\t\t\tCALL    ITEMI\t\t\t; Fetch the argument"
        }
    ],
    "INPN1": [
        {
            "def_file": "exec.asm",
            "def_line": 1132,
            "def_content": "INPN1:\t\t\tCALL    NXT"
        }
    ],
    "INPN2": [
        {
            "def_file": "exec.asm",
            "def_line": 1164,
            "def_content": "INPN2:\t\t\tLD      HL,ACCS"
        }
    ],
    "INPN3": [
        {
            "def_file": "exec.asm",
            "def_line": 1165,
            "def_content": "INPN3:\t\t\tCALL    OSBGET"
        }
    ],
    "INPN4": [
        {
            "def_file": "exec.asm",
            "def_line": 1171,
            "def_content": "INPN4:\t\t\tPOP     IX"
        }
    ],
    "INPUT": [
        {
            "def_file": "exec.asm",
            "def_line": 1182,
            "def_content": "INPUT:\t\t\tCP      '#'"
        }
    ],
    "INPUT0": [
        {
            "def_file": "exec.asm",
            "def_line": 1189,
            "def_content": "INPUT0:\t\t\tLD      HL,BUFFER"
        }
    ],
    "INPUT1": [
        {
            "def_file": "exec.asm",
            "def_line": 1191,
            "def_content": "INPUT1:\t\t\tCALL    TERMQ"
        }
    ],
    "INPUT2": [
        {
            "def_file": "exec.asm",
            "def_line": 1211,
            "def_content": "INPUT2:\t\t\tDEC     IY"
        }
    ],
    "INPUT3": [
        {
            "def_file": "exec.asm",
            "def_line": 1241,
            "def_content": "INPUT3:\t\t\tRES     0,C"
        }
    ],
    "INPUT4": [
        {
            "def_file": "exec.asm",
            "def_line": 1238,
            "def_content": "INPUT4:\t\t\tCALL    STACCS"
        }
    ],
    "INPUT5": [
        {
            "def_file": "exec.asm",
            "def_line": 1239,
            "def_content": "INPUT5:\t\t\tPOP     HL"
        }
    ],
    "INPUT6": [
        {
            "def_file": "exec.asm",
            "def_line": 1206,
            "def_content": "INPUT6:\t\t\tCALL    FORMAT          ;SPC, TAB, '"
        }
    ],
    "INPUT9": [
        {
            "def_file": "exec.asm",
            "def_line": 1208,
            "def_content": "INPUT9:\t\t\tPOP     HL"
        }
    ],
    "INPUTN": [
        {
            "def_file": "exec.asm",
            "def_line": 1131,
            "def_content": "INPUTN:\t\t\tCALL    CHNL            ;E = CHANNEL NUMBER"
        }
    ],
    "INSTR": [
        {
            "def_file": "eval.asm",
            "def_line": 1090,
            "def_content": "INSTR:\t\t\tCALL    EXPRSC\t\t\t; Get the first string expression"
        }
    ],
    "INSTR1": [
        {
            "def_file": "eval.asm",
            "def_line": 1117,
            "def_content": "INSTR1:\t\t\tLD      DE,ACCS         \t; DE: Pointer to the sub string"
        }
    ],
    "INSTR2": [
        {
            "def_file": "eval.asm",
            "def_line": 1123,
            "def_content": "INSTR2:\t\t\tSBC     HL,SP"
        }
    ],
    "INT_": [
        {
            "def_file": "eval.asm",
            "def_line": 907,
            "def_content": "INT_:\t\t\tLD      A,23"
        }
    ],
    "INT_FP_": [
        {
            "def_file": "fpp.asm",
            "def_line": 758,
            "def_content": "INT_FP_:\t\t\tDEC     C"
        }
    ],
    "IOR": [
        {
            "def_file": "fpp.asm",
            "def_line": 224,
            "def_content": "IOR:\t\t\tLD      A,H"
        }
    ],
    "IPOW": [
        {
            "def_file": "fpp.asm",
            "def_line": 502,
            "def_content": "IPOW:\t\t\tCALL    SWAP_FP"
        }
    ],
    "IPOW0": [
        {
            "def_file": "fpp.asm",
            "def_line": 506,
            "def_content": "IPOW0:\t\t\tLD      C,B"
        }
    ],
    "IPOW1": [
        {
            "def_file": "fpp.asm",
            "def_line": 508,
            "def_content": "IPOW1:\t\t\tCALL    X2"
        }
    ],
    "IPOW2": [
        {
            "def_file": "fpp.asm",
            "def_line": 518,
            "def_content": "IPOW2:\t\t\tPOP     AF"
        }
    ],
    "IPOW3": [
        {
            "def_file": "fpp.asm",
            "def_line": 545,
            "def_content": "IPOW3:\t\t\tPUSH    BC"
        }
    ],
    "IPOW4": [
        {
            "def_file": "fpp.asm",
            "def_line": 568,
            "def_content": "IPOW4:\t\t\tDJNZ    IPOW3"
        }
    ],
    "IPOW5": [
        {
            "def_file": "fpp.asm",
            "def_line": 561,
            "def_content": "IPOW5:\t\t\tPOP     DE"
        }
    ],
    "ISUB": [
        {
            "def_file": "fpp.asm",
            "def_line": 281,
            "def_content": "ISUB:\t\t\tCALL    SUB_"
        }
    ],
    "ITEM": [
        {
            "def_file": "eval.asm",
            "def_line": 514,
            "def_content": "ITEM:\t\t\tCALL    CHECK\t\t\t; Check there's at least a page of free memory left and Error: \"No room\" if not"
        }
    ],
    "ITEM1": [
        {
            "def_file": "eval.asm",
            "def_line": 409,
            "def_content": "ITEM1:\t\t\tCALL    EXPR            \t; Evaluate the expression"
        }
    ],
    "ITEM2": [
        {
            "def_file": "eval.asm",
            "def_line": 540,
            "def_content": "ITEM2:\t\t\tCALL    GETVAR\t\t\t; VARIABLE"
        }
    ],
    "ITEMI": [
        {
            "def_file": "eval.asm",
            "def_line": 393,
            "def_content": "ITEMI:\t\t\tCALL    ITEM\t\t\t; Get the variable"
        }
    ],
    "ITEMN": [
        {
            "def_file": "eval.asm",
            "def_line": 386,
            "def_content": "ITEMN:\t\t\tCALL    ITEM\t\t\t; Get the variable"
        }
    ],
    "ITEMS": [
        {
            "def_file": "eval.asm",
            "def_line": 400,
            "def_content": "ITEMS:\t\t\tCALL    ITEM\t\t\t; Get the variable"
        }
    ],
    "KEYASCII": [
        {
            "def_file": "ram.asm",
            "def_line": 125,
            "def_content": "KEYASCII:       BLKB    1,0       ; ASCII code of pressed key"
        }
    ],
    "KEYCOUNT": [
        {
            "def_file": "ram.asm",
            "def_line": 126,
            "def_content": "KEYCOUNT:       BLKB    1,0       ; Counts every time a key is pressed"
        }
    ],
    "KEYDOWN": [
        {
            "def_file": "ram.asm",
            "def_line": 124,
            "def_content": "KEYDOWN:        BLKB    1,0       ; Keydown flag"
        }
    ],
    "KEYWDL": [
        {
            "def_file": "main.asm",
            "def_line": 503,
            "def_content": "KEYWDL:\t\t\tEQU     $-KEYWDS"
        }
    ],
    "KEYWDS": [
        {
            "def_file": "main.asm",
            "def_line": 363,
            "def_content": "KEYWDS:\t\t\tDB    80H, \"AND\""
        }
    ],
    "LD16": [
        {
            "def_file": "exec.asm",
            "def_line": 2757,
            "def_content": "LD16:\t\t\tLD      A,B"
        }
    ],
    "LD8": [
        {
            "def_file": "exec.asm",
            "def_line": 2769,
            "def_content": "LD8:\t\t\tCP      7"
        }
    ],
    "LDA": [
        {
            "def_file": "exec.asm",
            "def_line": 2752,
            "def_content": "LDA:\t\t\tCP      4"
        }
    ],
    "LDIN": [
        {
            "def_file": "exec.asm",
            "def_line": 2595,
            "def_content": "LDIN:\t\t\tEX      AF,AF'"
        }
    ],
    "LDOP": [
        {
            "def_file": "exec.asm",
            "def_line": 2892,
            "def_content": "LDOP:\t\t\tLD      HL,LDOPS"
        }
    ],
    "LDOPS": [
        {
            "def_file": "exec.asm",
            "def_line": 3875,
            "def_content": "LDOPS:"
        }
    ],
    "LEFT1": [
        {
            "def_file": "eval.asm",
            "def_line": 1295,
            "def_content": "LEFT1:\t\t\tCALL    PUSHS           \t; Push the string onto the stack from the string accumulator (ACCS)"
        }
    ],
    "LEFT2": [
        {
            "def_file": "eval.asm",
            "def_line": 1306,
            "def_content": "LEFT2:\t\t\tLD      E,A\t\t\t; E: The new length of string"
        }
    ],
    "LEFT3": [
        {
            "def_file": "eval.asm",
            "def_line": 1307,
            "def_content": "LEFT3:\t\t\tLD      A,80H           \t; String marker"
        }
    ],
    "LEFTS": [
        {
            "def_file": "eval.asm",
            "def_line": 1294,
            "def_content": "LEFTS:\t\t\tCALL    EXPRSC\t\t\t; Get the first string expression"
        }
    ],
    "LEN": [
        {
            "def_file": "eval.asm",
            "def_line": 727,
            "def_content": "LEN:\t\t\tCALL    ITEMS\t\t\t; Get the string argument"
        }
    ],
    "LET": [
        {
            "def_file": "exec.asm",
            "def_line": 355,
            "def_content": "LET:\t\t\tCALL    ASSIGN\t\t\t; Assign the variable"
        }
    ],
    "LET0": [
        {
            "def_file": "exec.asm",
            "def_line": 340,
            "def_content": "LET0:\t\t\tCP      ELSE_EX_-TCMD_EX"
        }
    ],
    "LEX": [
        {
            "def_file": "main.asm",
            "def_line": 1003,
            "def_content": "LEX:\t\t\tLD      HL,KEYWDS\t\t; Address of the keywords table"
        }
    ],
    "LEX0": [
        {
            "def_file": "main.asm",
            "def_line": 1005,
            "def_content": "LEX0:\t\t\tLD      A,(IY)\t\t\t; Fetch the character to match"
        }
    ],
    "LEX1": [
        {
            "def_file": "main.asm",
            "def_line": 1014,
            "def_content": "LEX1:\t\t\tINC     HL\t\t\t; Increment the pointer"
        }
    ],
    "LEX2": [
        {
            "def_file": "main.asm",
            "def_line": 1019,
            "def_content": "LEX2:\t\t\tPUSH    IY              \t; Save the input pointer"
        }
    ],
    "LEX3": [
        {
            "def_file": "main.asm",
            "def_line": 1020,
            "def_content": "LEX3:\t\t\tINC     HL\t\t\t; Increment the keyword pointer"
        }
    ],
    "LEX4": [
        {
            "def_file": "main.asm",
            "def_line": 1032,
            "def_content": "LEX4:\t\t\tPOP     IY              \t; Restore the input pointer ready for the next search"
        }
    ],
    "LEX5": [
        {
            "def_file": "main.asm",
            "def_line": 1038,
            "def_content": "LEX5:\t\t\tLD      A,(HL)\t\t\t; Fetch the byte from the keywords table"
        }
    ],
    "LEX6": [
        {
            "def_file": "main.asm",
            "def_line": 1045,
            "def_content": "LEX6:\t\t\tPOP     AF\t\t\t; Discard IY input pointer pushed on the stack"
        }
    ],
    "LEXAN1": [
        {
            "def_file": "main.asm",
            "def_line": 1943,
            "def_content": "LEXAN1:\t\t\tLD      (DE),A          \t; Transfer to buffer"
        }
    ],
    "LEXAN2": [
        {
            "def_file": "main.asm",
            "def_line": 1949,
            "def_content": "LEXAN2:\t\t\tLD      A,E             \t; Destination buffer on page boundary, so E can be used as length"
        }
    ],
    "LEXAN3": [
        {
            "def_file": "main.asm",
            "def_line": 1961,
            "def_content": "LEXAN3:\t\t\tCP      ' '\t\t\t; Ignore spaces"
        }
    ],
    "LEXAN4": [
        {
            "def_file": "main.asm",
            "def_line": 1972,
            "def_content": "LEXAN4:\t\t\tCP      34\t\t\t; Is it a quote character?"
        }
    ],
    "LEXAN5": [
        {
            "def_file": "main.asm",
            "def_line": 1978,
            "def_content": "LEXAN5:\t\t\tBIT     4,C\t\t\t; Accept line number?"
        }
    ],
    "LEXAN6": [
        {
            "def_file": "main.asm",
            "def_line": 1991,
            "def_content": "LEXAN6:\t\t\tDEC     C\t\t\t; Check for C=1 (LEFT)"
        }
    ],
    "LEXAN7": [
        {
            "def_file": "main.asm",
            "def_line": 2001,
            "def_content": "LEXAN7:\t\t\tCP      '*'\t\t\t; Is it a '*' (for star commands)"
        }
    ],
    "LEXAN8": [
        {
            "def_file": "main.asm",
            "def_line": 2018,
            "def_content": "LEXAN8:\t\t\tCP      REM\t\t\t; If the token is REM"
        }
    ],
    "LEXAN9": [
        {
            "def_file": "main.asm",
            "def_line": 2022,
            "def_content": "LEXAN9:\t\t\tSET     6,C             \t; FLAG: STOP TOKENISING"
        }
    ],
    "LEXANA": [
        {
            "def_file": "main.asm",
            "def_line": 2024,
            "def_content": "LEXANA:\t\t\tCP      FN\t\t\t; If the token is FN"
        }
    ],
    "LEXANB": [
        {
            "def_file": "main.asm",
            "def_line": 2031,
            "def_content": "LEXANB:\t\t\tSET     5,C             \t; FLAG: IN VARIABLE/FN/PROC"
        }
    ],
    "LEXANC": [
        {
            "def_file": "main.asm",
            "def_line": 2032,
            "def_content": "LEXANC:\t\t\tCP      '&'\t\t\t; Check for hex prefix"
        }
    ],
    "LEXAND": [
        {
            "def_file": "main.asm",
            "def_line": 2036,
            "def_content": "LEXAND:\t\t\tCP\t'%'\t\t\t; Check for binary prefix"
        }
    ],
    "LEXANE": [
        {
            "def_file": "main.asm",
            "def_line": 2040,
            "def_content": "LEXANE:\t\t\tLD      HL,LIST1\t\t; List of tokens that must be followed by a line number"
        }
    ],
    "LEXANF": [
        {
            "def_file": "main.asm",
            "def_line": 2048,
            "def_content": "LEXANF:\t\t\tLD      HL,LIST2\t\t; List of tokens that switch the lexical analysis back to LEFT mode"
        }
    ],
    "LEXANG": [
        {
            "def_file": "main.asm",
            "def_line": 2055,
            "def_content": "LEXANG:\t\t\tJP      LEXAN1\t\t\t; And loop"
        }
    ],
    "LINE1S": [
        {
            "def_file": "exec.asm",
            "def_line": 2090,
            "def_content": "LINE1S:\t\t\tLD      A,(HL)"
        }
    ],
    "LINENO": [
        {
            "def_file": "ram.asm",
            "def_line": 78,
            "def_content": "LINENO:         BLKB    3,0               ; Line Number"
        }
    ],
    "LINES": [
        {
            "def_file": "exec.asm",
            "def_line": 2089,
            "def_content": "LINES:\t\t\tLD      DE,ACCS"
        }
    ],
    "LINE_EX_": [
        {
            "def_file": "exec.asm",
            "def_line": 133,
            "def_content": "LINE_EX_:\t\t\tEQU     86H"
        }
    ],
    "LINE_MN_": [
        {
            "def_file": "main.asm",
            "def_line": 125,
            "def_content": "LINE_MN_:\t\t\tEQU     86H"
        }
    ],
    "LINNM1": [
        {
            "def_file": "main.asm",
            "def_line": 1811,
            "def_content": "LINNM1:\t\t\tLD      A,(IY)\t\t\t; A: Fetch the digit to add in"
        }
    ],
    "LINNUM": [
        {
            "def_file": "main.asm",
            "def_line": 1809,
            "def_content": "LINNUM:\t\t\tCALL    NXT\t\t\t; Skip whitespace to the first character"
        }
    ],
    "LINO_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 140,
            "def_content": "LINO_EX:\t\t\tEQU     8DH"
        }
    ],
    "LINO_MN": [
        {
            "def_file": "main.asm",
            "def_line": 128,
            "def_content": "LINO_MN:\t\t\tEQU     8DH"
        }
    ],
    "LIST1": [
        {
            "def_file": "main.asm",
            "def_line": 2061,
            "def_content": "LIST1:\t\t\tDB\tGOTO"
        }
    ],
    "LIST1L": [
        {
            "def_file": "main.asm",
            "def_line": 2067,
            "def_content": "LIST1L:\t\t\tEQU     $-LIST1"
        }
    ],
    "LIST2": [
        {
            "def_file": "main.asm",
            "def_line": 2065,
            "def_content": "LIST2:\t\t\tDB\tTHEN_MN_"
        }
    ],
    "LIST2L": [
        {
            "def_file": "main.asm",
            "def_line": 2071,
            "def_content": "LIST2L:\t\t\tEQU     $-LIST2"
        }
    ],
    "LIST7": [
        {
            "def_file": "main.asm",
            "def_line": 1199,
            "def_content": "LIST7:\t\t\tCALL    LOUT\t\t\t; Output the character / token"
        }
    ],
    "LIST8": [
        {
            "def_file": "main.asm",
            "def_line": 1192,
            "def_content": "LIST8:\t\t\tLD      A,(HL)\t\t\t; Fetch a character / token byte"
        }
    ],
    "LISTA": [
        {
            "def_file": "main.asm",
            "def_line": 627,
            "def_content": "LISTA:\t\t\tEXX"
        }
    ],
    "LISTB": [
        {
            "def_file": "main.asm",
            "def_line": 621,
            "def_content": "LISTB:\t\t\tLD      E,A             \t; E: IF clause string length"
        }
    ],
    "LISTC": [
        {
            "def_file": "main.asm",
            "def_line": 633,
            "def_content": "LISTC:\t\t\tPUSH    BC              \t; Save second line number"
        }
    ],
    "LISTE": [
        {
            "def_file": "main.asm",
            "def_line": 1205,
            "def_content": "LISTE:\t\t\tBIT \t3,(IX)\t\t\t; Are we printing to buffer?"
        }
    ],
    "LISTIT": [
        {
            "def_file": "main.asm",
            "def_line": 1162,
            "def_content": "LISTIT:\t\t\tPUSH    HL\t\t\t; Stack the address of the line"
        }
    ],
    "LISTO": [
        {
            "def_file": "main.asm",
            "def_line": 586,
            "def_content": "LISTO:\t\t\tINC     IY              \t; Skip \"O\" byte"
        }
    ],
    "LISTON": [
        {
            "def_file": "ram.asm",
            "def_line": 90,
            "def_content": "LISTON:         BLKB    1,0               ; LISTO (bottom nibble)"
        }
    ],
    "LIST_": [
        {
            "def_file": "main.asm",
            "def_line": 599,
            "def_content": "LIST_:\t\t\tCP      'O'\t\t\t; Check for O (LISTO)"
        }
    ],
    "LN": [
        {
            "def_file": "eval.asm",
            "def_line": 943,
            "def_content": "LN:\t\t\tLD      A,24"
        }
    ],
    "LN0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1031,
            "def_content": "LN0:\t\t\tLD      A,LOGRNG"
        }
    ],
    "LN1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1080,
            "def_content": "LN1:\t\t\tLD      H,A"
        }
    ],
    "LN2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1020,
            "def_content": "LN2:\t\t\tLD      DE,3172H        ;LN(2)"
        }
    ],
    "LN3": [
        {
            "def_file": "fpp.asm",
            "def_line": 1091,
            "def_content": "LN3:\t\t\tCALL    POP5"
        }
    ],
    "LN4": [
        {
            "def_file": "fpp.asm",
            "def_line": 1047,
            "def_content": "LN4:\t\t\tPUSH    AF              ;SAVE EXPONENT"
        }
    ],
    "LNZERO": [
        {
            "def_file": "main.asm",
            "def_line": 286,
            "def_content": "LNZERO:\t\t\tLD\tC,1\t\t\t; Left mode"
        }
    ],
    "LN_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1030,
            "def_content": "LN_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "LOAD": [
        {
            "def_file": "main.asm",
            "def_line": 902,
            "def_content": "LOAD:\t\t\tCALL    EXPRS           \t; Get the filename"
        }
    ],
    "LOAD0": [
        {
            "def_file": "main.asm",
            "def_line": 1085,
            "def_content": "LOAD0: \t\t\tLD      DE,(PAGE_)\t\t; DE: Beginning of BASIC program area"
        }
    ],
    "LOAD1": [
        {
            "def_file": "eval.asm",
            "def_line": 560,
            "def_content": "LOAD1:\t\t\tLD      HL,0"
        }
    ],
    "LOAD4": [
        {
            "def_file": "eval.asm",
            "def_line": 550,
            "def_content": "LOAD4:\t\t\tEXX"
        }
    ],
    "LOAD5": [
        {
            "def_file": "eval.asm",
            "def_line": 549,
            "def_content": "LOAD5:\t\t\tLD      C,(IX+4)"
        }
    ],
    "LOADN": [
        {
            "def_file": "eval.asm",
            "def_line": 544,
            "def_content": "LOADN:\t\t\tOR      A"
        }
    ],
    "LOADS": [
        {
            "def_file": "eval.asm",
            "def_line": 626,
            "def_content": "LOADS:\t\t\tLD      DE,ACCS\t\t\t; Where to store the string"
        }
    ],
    "LOADS2": [
        {
            "def_file": "eval.asm",
            "def_line": 646,
            "def_content": "LOADS2:\t\t\tLD      A,(HL)"
        }
    ],
    "LOC0": [
        {
            "def_file": "main.asm",
            "def_line": 1665,
            "def_content": "LOC0:\t\t\tCP      '_'-'@'\t\t\t; Check the first character is in"
        }
    ],
    "LOC1": [
        {
            "def_file": "main.asm",
            "def_line": 1676,
            "def_content": "LOC1:\t\t\tLD\tA, L\t\t\t; Fetch variable index"
        }
    ],
    "LOC2": [
        {
            "def_file": "main.asm",
            "def_line": 1687,
            "def_content": "LOC2:\t\t\tLD\tDE, (HL)\t\t; Fetch the original pointer"
        }
    ],
    "LOC3": [
        {
            "def_file": "main.asm",
            "def_line": 1702,
            "def_content": "LOC3:\t\t\tLD      A,(HL)         \t\t; Compare"
        }
    ],
    "LOC4": [
        {
            "def_file": "main.asm",
            "def_line": 1710,
            "def_content": "LOC4:\t\t\tPOP     IY\t\t\t; Restore the pointer in the program"
        }
    ],
    "LOC5": [
        {
            "def_file": "main.asm",
            "def_line": 1716,
            "def_content": "LOC5:\t\t\tDEC     IY"
        }
    ],
    "LOC5A": [
        {
            "def_file": "main.asm",
            "def_line": 1728,
            "def_content": "LOC5A:\t\t\tPOP     DE"
        }
    ],
    "LOC6": [
        {
            "def_file": "main.asm",
            "def_line": 1742,
            "def_content": "LOC6:\t\t\tINC     A               \t; Set NZ flag"
        }
    ],
    "LOC7": [
        {
            "def_file": "main.asm",
            "def_line": 1760,
            "def_content": "LOC7:\t\t\tINC     IY"
        }
    ],
    "LOC8": [
        {
            "def_file": "main.asm",
            "def_line": 1773,
            "def_content": "LOC8:\t\t\tLD      (HL),0          \t; TERMINATOR"
        }
    ],
    "LOC9": [
        {
            "def_file": "main.asm",
            "def_line": 1781,
            "def_content": "LOC9:\t\t\tLD      (HL),0          \t; Initialise the memory to zero"
        }
    ],
    "LOCAL1": [
        {
            "def_file": "exec.asm",
            "def_line": 1067,
            "def_content": "LOCAL1:\t\t\tPUSH    IY\t\t\t; IY: BASIC pointer"
        }
    ],
    "LOCAL2": [
        {
            "def_file": "exec.asm",
            "def_line": 1076,
            "def_content": "LOCAL2:\t\t\tCALL    GETVAR\t\t\t; Get the variable location"
        }
    ],
    "LOCAL_": [
        {
            "def_file": "main.asm",
            "def_line": 138,
            "def_content": "LOCAL_:\t\t\tEQU     EAH"
        }
    ],
    "LOCAL_EX_": [
        {
            "def_file": "exec.asm",
            "def_line": 1049,
            "def_content": "LOCAL_EX_:\t\t\tPOP     BC\t\t\t; BC: The current check marker (on the stack)"
        }
    ],
    "LOCATE": [
        {
            "def_file": "main.asm",
            "def_line": 1638,
            "def_content": "LOCATE:\t\t\tSUB     '@'\t\t\t; Check for valid range"
        }
    ],
    "LOCCHK": [
        {
            "def_file": "exec.asm",
            "def_line": 1970,
            "def_content": "LOCCHK:\t\t\tEQU     $"
        }
    ],
    "LOG": [
        {
            "def_file": "eval.asm",
            "def_line": 949,
            "def_content": "LOG:\t\t\tLD      A,25"
        }
    ],
    "LOGRNG": [
        {
            "def_file": "fpp.asm",
            "def_line": 46,
            "def_content": "LOGRNG:\t\t\tEQU     22              ;Log range"
        }
    ],
    "LOG_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1099,
            "def_content": "LOG_FP:\t\t\tCALL    LN_FP"
        }
    ],
    "LOMEM": [
        {
            "def_file": "ram.asm",
            "def_line": 74,
            "def_content": "LOMEM:          BLKB    3,0               ; Start of Dynamic Storage"
        }
    ],
    "LOMEMV": [
        {
            "def_file": "eval.asm",
            "def_line": 731,
            "def_content": "LOMEMV:\t\t\tLD      HL,(LOMEM)\t\t; Return the LOMEM system variable"
        }
    ],
    "LOMEMV_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1422,
            "def_content": "LOMEMV_EX:\t\t\tCALL    EQUALS"
        }
    ],
    "LOOP_": [
        {
            "def_file": "exec.asm",
            "def_line": 924,
            "def_content": "LOOP_:\t\t\tPOP     BC"
        }
    ],
    "LOUT": [
        {
            "def_file": "main.asm",
            "def_line": 1238,
            "def_content": "LOUT:\t\t\tBIT     0,E\t\t\t; If the quote counter is odd (bit 1 set) then"
        }
    ],
    "LTRAP": [
        {
            "def_file": "patch.asm",
            "def_line": 270,
            "def_content": "LTRAP:\t\t\tLD\tA,(FLAGS)\t\t; Get FLAGS"
        }
    ],
    "LTRAP1": [
        {
            "def_file": "patch.asm",
            "def_line": 273,
            "def_content": "LTRAP1:\t\t\tLD\tHL,FLAGS \t\t; Escape is pressed at this point, so"
        }
    ],
    "MIDS": [
        {
            "def_file": "eval.asm",
            "def_line": 1263,
            "def_content": "MIDS:\t\t\tCALL    EXPRSC\t\t\t; Get the first string expression"
        }
    ],
    "MIDS1": [
        {
            "def_file": "eval.asm",
            "def_line": 1281,
            "def_content": "MIDS1:\t\t\tCALL    NXT\t\t\t; Skip whitespace"
        }
    ],
    "MINUS": [
        {
            "def_file": "eval.asm",
            "def_line": 472,
            "def_content": "MINUS:\t\t\tCALL    ITEMN\t\t\t; Get the numeric argument"
        }
    ],
    "MINUS0": [
        {
            "def_file": "eval.asm",
            "def_line": 473,
            "def_content": "MINUS0:\t\t\tDEC     C\t\t\t; Check exponent (C)"
        }
    ],
    "MOD48": [
        {
            "def_file": "fpp.asm",
            "def_line": 1664,
            "def_content": "MOD48:\t\t\tSET     7,D             ;IMPLIED 1"
        }
    ],
    "MOD481": [
        {
            "def_file": "fpp.asm",
            "def_line": 1672,
            "def_content": "MOD481:\t\t\tEXX                     ;CARRY=0 HERE"
        }
    ],
    "MOD482": [
        {
            "def_file": "fpp.asm",
            "def_line": 1687,
            "def_content": "MOD482:\t\t\tCCF"
        }
    ],
    "MOD483": [
        {
            "def_file": "fpp.asm",
            "def_line": 1691,
            "def_content": "MOD483:\t\t\tDEC     A"
        }
    ],
    "MOD484": [
        {
            "def_file": "fpp.asm",
            "def_line": 1713,
            "def_content": "MOD484:\t\t\tINC     A"
        }
    ],
    "MOD485": [
        {
            "def_file": "fpp.asm",
            "def_line": 1714,
            "def_content": "MOD485:\t\t\tLD      E,C             ;QUOTIENT"
        }
    ],
    "MODE": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 58,
            "def_content": "MODE:\t\t\tPUSH\tIX\t\t\t; Get the system vars in IX"
        }
    ],
    "MODK": [
        {
            "def_file": "eval.asm",
            "def_line": 168,
            "def_content": "MODK:\t\t\tEQU     83H"
        }
    ],
    "MOVE": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 222,
            "def_content": "MOVE:\t\t\tCALL\tEXPR_W2\t\t; Parse X and Y"
        }
    ],
    "MUL0": [
        {
            "def_file": "fpp.asm",
            "def_line": 2161,
            "def_content": "MUL0:\t\t\tEXX"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 48,
            "def_content": "MUL0:\t\t\tEXX"
        }
    ],
    "MUL1": [
        {
            "def_file": "fpp.asm",
            "def_line": 2172,
            "def_content": "MUL1:\t\t\tINC     A"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 59,
            "def_content": "MUL1:\t\t\tINC     A"
        }
    ],
    "MUL16": [
        {
            "def_file": "exec.asm",
            "def_line": 2176,
            "def_content": "MUL16:\t\t\tPUSH\tBC"
        }
    ],
    "MULA": [
        {
            "def_file": "fpp.asm",
            "def_line": 2160,
            "def_content": "MULA:\t\t\tOR      A               ;CLEAR CARRY"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 47,
            "def_content": "MULA:\t\t\tOR      A               ;CLEAR CARRY"
        }
    ],
    "MULB": [
        {
            "def_file": "fpp.asm",
            "def_line": 2174,
            "def_content": "MULB:\t\t\tEXX"
        },
        {
            "def_file": "tmp.asm",
            "def_line": 61,
            "def_content": "MULB:\t\t\tEXX"
        }
    ],
    "NEG0": [
        {
            "def_file": "fpp.asm",
            "def_line": 1617,
            "def_content": "NEG0:\t\t\tPUSH    DE"
        }
    ],
    "NEGATE": [
        {
            "def_file": "fpp.asm",
            "def_line": 1615,
            "def_content": "NEGATE:\t\t\tOR      A               ;CLEAR CARRY"
        }
    ],
    "NEGATE_EV": [
        {
            "def_file": "eval.asm",
            "def_line": 483,
            "def_content": "NEGATE_EV:\t\t\tEXX\t\t\t\t; This section does a two's complement negation on H'L'HLC"
        }
    ],
    "NEG_": [
        {
            "def_file": "fpp.asm",
            "def_line": 1634,
            "def_content": "NEG_:\t\t\tEXX"
        }
    ],
    "NEW": [
        {
            "def_file": "main.asm",
            "def_line": 880,
            "def_content": "NEW:\t\t\tCALL    NEWIT\t\t\t; Call NEWIT (clears program area and variables)"
        }
    ],
    "NEWIT": [
        {
            "def_file": "main.asm",
            "def_line": 1135,
            "def_content": "NEWIT:\t\t\tLD      HL,(PAGE_)\t\t; HL: First byte of BASIC program area"
        }
    ],
    "NEWLIN": [
        {
            "def_file": "exec.asm",
            "def_line": 290,
            "def_content": "NEWLIN:\t\t\tLD      A,(IY+0)        ;A=LINE LENGTH"
        }
    ],
    "NEXT": [
        {
            "def_file": "main.asm",
            "def_line": 139,
            "def_content": "NEXT:\t\t\tEQU     EDH"
        }
    ],
    "NEXT0": [
        {
            "def_file": "exec.asm",
            "def_line": 887,
            "def_content": "NEXT0:\t\t\tSBC     HL,DE\t\t\t; Compare to make sure that the variables match"
        }
    ],
    "NEXT1": [
        {
            "def_file": "exec.asm",
            "def_line": 932,
            "def_content": "NEXT1:\t\t\tLD      HL,27\t\t\t; TODO: What does this do?"
        }
    ],
    "NEXT_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 872,
            "def_content": "NEXT_EX:\t\t\tPOP     BC              \t; Pop the marker off the execution stack"
        }
    ],
    "NGROOT": [
        {
            "def_file": "fpp.asm",
            "def_line": 45,
            "def_content": "NGROOT:\t\t\tEQU     21              ;Negative root"
        }
    ],
    "NOAUTO": [
        {
            "def_file": "main.asm",
            "def_line": 263,
            "def_content": "NOAUTO:\t\t\tLD      HL,ACCS\t\t\t; Storage for the line editor (256 bytes)"
        }
    ],
    "NOROOM": [
        {
            "def_file": "exec.asm",
            "def_line": 520,
            "def_content": "NOROOM:\t\t\tLD      A,11            \t; Throw a \"DIM space\" error"
        }
    ],
    "NOS1": [
        {
            "def_file": "eval.asm",
            "def_line": 573,
            "def_content": "NOS1:\t\t\tINC     IY"
        }
    ],
    "NOSUCH": [
        {
            "def_file": "eval.asm",
            "def_line": 568,
            "def_content": "NOSUCH:\t\t\tJP      C,SYNTAX"
        }
    ],
    "NOTICE": [
        {
            "def_file": "main.asm",
            "def_line": 220,
            "def_content": "NOTICE:\t\t\tDB    \t\"(C) Copyright R.T.Russell 1987\\n\\r\""
        }
    ],
    "NOTK": [
        {
            "def_file": "eval.asm",
            "def_line": 883,
            "def_content": "NOTK:\t\t\tLD      A,26"
        }
    ],
    "NOTK_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 669,
            "def_content": "NOTK_FP:\t\t\tCALL    SFIX_FP"
        }
    ],
    "NULLTOCR": [
        {
            "def_file": "misc.asm",
            "def_line": 127,
            "def_content": "NULLTOCR:\t\tPUSH \tBC"
        }
    ],
    "NUMB1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1572,
            "def_content": "NUMB1:\t\t\tINC     C               ;TRUNCATION COUNTER"
        }
    ],
    "NUMBER": [
        {
            "def_file": "exec.asm",
            "def_line": 2832,
            "def_content": "NUMBER:\t\t\tCALL    SKIP"
        }
    ],
    "NUMBIX": [
        {
            "def_file": "fpp.asm",
            "def_line": 1551,
            "def_content": "NUMBIX:\t\t\tINC     IX"
        }
    ],
    "NXT": [
        {
            "def_file": "eval.asm",
            "def_line": 1680,
            "def_content": "NXT:\t\t\tLD      A,(IY)\t\t\t; Fetch the character"
        }
    ],
    "OC": [
        {
            "def_file": "ram.asm",
            "def_line": 107,
            "def_content": "OC:\t\t\tEQU     15*4+STAVAR     ; CODE ORIGIN (O%)"
        }
    ],
    "ODD": [
        {
            "def_file": "fpp.asm",
            "def_line": 1792,
            "def_content": "ODD:\t\t\tOR      A               ;CLEAR CARRY"
        }
    ],
    "OFFSET": [
        {
            "def_file": "main.asm",
            "def_line": 165,
            "def_content": "OFFSET:\t\t\tEQU     CFH-TOKLO\t\t; Offset to the parameterised SET versions"
        }
    ],
    "OFFSET_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2828,
            "def_content": "OFFSET_EX:\t\t\tLD      A,(IY)"
        }
    ],
    "OFF_": [
        {
            "def_file": "exec.asm",
            "def_line": 134,
            "def_content": "OFF_:\t\t\tEQU     87H"
        }
    ],
    "OFLOW": [
        {
            "def_file": "fpp.asm",
            "def_line": 1827,
            "def_content": "OFLOW:\t\t\tLD      A,TOOBIG_FP"
        }
    ],
    "OLD": [
        {
            "def_file": "main.asm",
            "def_line": 885,
            "def_content": "OLD:\t\t\tLD      HL,(PAGE_)\t\t; HL: The start of the BASIC program area"
        }
    ],
    "ON1": [
        {
            "def_file": "exec.asm",
            "def_line": 692,
            "def_content": "ON1:\t\t\tLD      D,A"
        }
    ],
    "ON2": [
        {
            "def_file": "exec.asm",
            "def_line": 705,
            "def_content": "ON2:\t\t\tCALL    TERMQ"
        }
    ],
    "ON3": [
        {
            "def_file": "exec.asm",
            "def_line": 712,
            "def_content": "ON3:\t\t\tLD      A,E"
        }
    ],
    "ON4": [
        {
            "def_file": "exec.asm",
            "def_line": 724,
            "def_content": "ON4:\t\t\tLD      A,(IY)"
        }
    ],
    "ONEDIT": [
        {
            "def_file": "main.asm",
            "def_line": 265,
            "def_content": "ONEDIT:\t\t\tCALL\tONEDIT1\t\t\t; Enter the line into memory"
        }
    ],
    "ONEDIT1": [
        {
            "def_file": "main.asm",
            "def_line": 274,
            "def_content": "ONEDIT1:\t\tXOR     A\t\t\t; Entry point after *EDIT"
        }
    ],
    "ONERR": [
        {
            "def_file": "exec.asm",
            "def_line": 661,
            "def_content": "ONERR:\t\t\tINC     IY              ;SKIP \"ERROR\""
        }
    ],
    "ONPROC": [
        {
            "def_file": "exec.asm",
            "def_line": 733,
            "def_content": "ONPROC:\t\t\tLD      A,TON"
        }
    ],
    "ON_": [
        {
            "def_file": "main.asm",
            "def_line": 140,
            "def_content": "ON_:\t\t\tEQU     EEH"
        }
    ],
    "ON_EX_": [
        {
            "def_file": "exec.asm",
            "def_line": 678,
            "def_content": "ON_EX_:\t\t\tCP      TERROR_EX"
        }
    ],
    "OP": [
        {
            "def_file": "fpp.asm",
            "def_line": 71,
            "def_content": "OP:\t\t\t\tCP      RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions"
        }
    ],
    "OPCODS": [
        {
            "def_file": "exec.asm",
            "def_line": 3222,
            "def_content": "OPCODS:"
        }
    ],
    "OPENIN": [
        {
            "def_file": "eval.asm",
            "def_line": 784,
            "def_content": "OPENIN:\t\t\tLD      A,1\t\t\t; Open for reading"
        }
    ],
    "OPENIN_1": [
        {
            "def_file": "eval.asm",
            "def_line": 786,
            "def_content": "OPENIN_1:\t\tPUSH    AF              \t; Save OPEN type"
        }
    ],
    "OPENOT": [
        {
            "def_file": "eval.asm",
            "def_line": 778,
            "def_content": "OPENOT:\t\t\tXOR     A\t\t\t; Open for writing"
        }
    ],
    "OPENUP": [
        {
            "def_file": "eval.asm",
            "def_line": 781,
            "def_content": "OPENUP:\t\t\tLD      A,2\t\t\t; Open for reading / writing"
        }
    ],
    "OPND": [
        {
            "def_file": "exec.asm",
            "def_line": 2805,
            "def_content": "OPND:\t\t\tPUSH    HL\t\t\t; Preserve HL"
        }
    ],
    "OPRNDS": [
        {
            "def_file": "exec.asm",
            "def_line": 3802,
            "def_content": "OPRNDS:"
        }
    ],
    "OPT": [
        {
            "def_file": "exec.asm",
            "def_line": 2646,
            "def_content": "OPT:\t\t\tCALL    NUMBER\t\t\t; Fetch the OPT value"
        }
    ],
    "OPTS": [
        {
            "def_file": "exec.asm",
            "def_line": 2641,
            "def_content": "OPTS:\t\t\tSUB\t2"
        }
    ],
    "ORC": [
        {
            "def_file": "exec.asm",
            "def_line": 2888,
            "def_content": "ORC:\t\t\tOR      C"
        }
    ],
    "ORK": [
        {
            "def_file": "eval.asm",
            "def_line": 169,
            "def_content": "ORK:\t\t\tEQU     84H"
        }
    ],
    "OSBGET": [
        {
            "def_file": "patch.asm",
            "def_line": 867,
            "def_content": "OSBGET:\t\t\tPUSH\tBC"
        }
    ],
    "OSBPUT": [
        {
            "def_file": "patch.asm",
            "def_line": 878,
            "def_content": "OSBPUT:\t\t\tPUSH\tBC"
        }
    ],
    "OSBYTE": [
        {
            "def_file": "patch.asm",
            "def_line": 493,
            "def_content": "OSBYTE:\t\t\tCP\t0BH\t\t\t; *FX 11, n: Keyboard auto-repeat delay"
        }
    ],
    "OSBYTE_0B": [
        {
            "def_file": "patch.asm",
            "def_line": 509,
            "def_content": "OSBYTE_0B:\t\tVDU\t23"
        }
    ],
    "OSBYTE_0C": [
        {
            "def_file": "patch.asm",
            "def_line": 523,
            "def_content": "OSBYTE_0C:\t\tVDU\t23"
        }
    ],
    "OSBYTE_13": [
        {
            "def_file": "patch.asm",
            "def_line": 535,
            "def_content": "OSBYTE_13:\t\tCALL\tWAIT_VBLANK"
        }
    ],
    "OSBYTE_76": [
        {
            "def_file": "patch.asm",
            "def_line": 551,
            "def_content": "OSBYTE_76:\t\tVDU\t23"
        }
    ],
    "OSBYTE_A0": [
        {
            "def_file": "patch.asm",
            "def_line": 565,
            "def_content": "OSBYTE_A0:\t\tPUSH\tIX"
        }
    ],
    "OSCALL": [
        {
            "def_file": "patch.asm",
            "def_line": 806,
            "def_content": "OSCALL:\t\t\tLD\tHL, OSCALL_TABLE"
        }
    ],
    "OSCALL_1": [
        {
            "def_file": "patch.asm",
            "def_line": 807,
            "def_content": "OSCALL_1:\t\tLD\tA, (HL)"
        }
    ],
    "OSCALL_2": [
        {
            "def_file": "patch.asm",
            "def_line": 818,
            "def_content": "OSCALL_2:\t\tLD\tIY,(HL)"
        }
    ],
    "OSCALL_TABLE": [
        {
            "def_file": "patch.asm",
            "def_line": 820,
            "def_content": "OSCALL_TABLE:\t\tDB \tD4h"
        }
    ],
    "OSCLI": [
        {
            "def_file": "patch.asm",
            "def_line": 295,
            "def_content": "OSCLI: \t\t\tCALL    SKIPSP"
        }
    ],
    "OSCLI0": [
        {
            "def_file": "patch.asm",
            "def_line": 302,
            "def_content": "OSCLI0:\t\t\tLD      A,(DE)"
        }
    ],
    "OSCLI1": [
        {
            "def_file": "patch.asm",
            "def_line": 307,
            "def_content": "OSCLI1:\t\t\tBIT     7,(HL)"
        }
    ],
    "OSCLI2": [
        {
            "def_file": "patch.asm",
            "def_line": 314,
            "def_content": "OSCLI2:\t\t\tPUSH    DE"
        }
    ],
    "OSCLI3": [
        {
            "def_file": "patch.asm",
            "def_line": 315,
            "def_content": "OSCLI3:\t\t\tINC     DE"
        }
    ],
    "OSCLI4": [
        {
            "def_file": "patch.asm",
            "def_line": 328,
            "def_content": "OSCLI4:\t\t\tPOP     AF"
        }
    ],
    "OSCLI5": [
        {
            "def_file": "patch.asm",
            "def_line": 330,
            "def_content": "OSCLI5:\t\t\tBIT     7,(HL)"
        }
    ],
    "OSCLI6": [
        {
            "def_file": "patch.asm",
            "def_line": 341,
            "def_content": "OSCLI6:\t\t\tEX\tDE, HL\t\t\t; HL: Buffer for command"
        }
    ],
    "OSERROR": [
        {
            "def_file": "patch.asm",
            "def_line": 662,
            "def_content": "OSERROR:\t\tPUSH\tAF\t\t\t; Handle the MOS error"
        }
    ],
    "OSINIT": [
        {
            "def_file": "patch.asm",
            "def_line": 285,
            "def_content": "OSINIT:\t\t\tCALL\tVBLANK_INIT"
        }
    ],
    "OSKEY": [
        {
            "def_file": "patch.asm",
            "def_line": 220,
            "def_content": "OSKEY:\t\t\tCALL\tREADKEY\t\t\t; Read the keyboard"
        }
    ],
    "OSLINE": [
        {
            "def_file": "patch.asm",
            "def_line": 95,
            "def_content": "OSLINE:\t\t\tLD \tE, 1\t\t\t; Default is to clear the buffer"
        }
    ],
    "OSLINE1": [
        {
            "def_file": "patch.asm",
            "def_line": 99,
            "def_content": "OSLINE1:\t\tPUSH\tIY"
        }
    ],
    "OSLOAD": [
        {
            "def_file": "patch.asm",
            "def_line": 581,
            "def_content": "OSLOAD:\t\t\tPUSH\tBC\t\t\t; Stack the size"
        }
    ],
    "OSLOAD_BBC": [
        {
            "def_file": "patch.asm",
            "def_line": 656,
            "def_content": "OSLOAD_BBC:\t\tMOSCALL\tmos_load\t\t; Call LOAD in MOS"
        }
    ],
    "OSLOAD_TXT": [
        {
            "def_file": "patch.asm",
            "def_line": 595,
            "def_content": "OSLOAD_TXT:\t\tXOR\tA\t\t\t; Set file attributes to read"
        }
    ],
    "OSLOAD_TXT1": [
        {
            "def_file": "patch.asm",
            "def_line": 603,
            "def_content": "OSLOAD_TXT1:\t\tLD\tHL, ACCS \t\t; Where the input is going to be stored"
        }
    ],
    "OSLOAD_TXT2": [
        {
            "def_file": "patch.asm",
            "def_line": 618,
            "def_content": "OSLOAD_TXT2:\t\tCALL\tOSBGET\t\t\t; Read the byte into A"
        }
    ],
    "OSLOAD_TXT3": [
        {
            "def_file": "patch.asm",
            "def_line": 630,
            "def_content": "OSLOAD_TXT3:\t\tLD\t(HL), CR\t\t; Store a CR for BBC BASIC"
        }
    ],
    "OSLOAD_TXT4": [
        {
            "def_file": "patch.asm",
            "def_line": 646,
            "def_content": "OSLOAD_TXT4:\t\tCP\t20h\t\t\t; Skip if not an ASCII character"
        }
    ],
    "OSOPEN": [
        {
            "def_file": "patch.asm",
            "def_line": 841,
            "def_content": "OSOPEN:\t\t\tLD\tC, fa_read"
        }
    ],
    "OSRDCH": [
        {
            "def_file": "patch.asm",
            "def_line": 207,
            "def_content": "OSRDCH:\t\t\tMOSCALL\tmos_getkey\t\t; Read keyboard"
        }
    ],
    "OSSAVE": [
        {
            "def_file": "patch.asm",
            "def_line": 678,
            "def_content": "OSSAVE:\t\t\tPUSH\tBC\t\t\t; Stack the size"
        }
    ],
    "OSSAVE_BBC": [
        {
            "def_file": "patch.asm",
            "def_line": 724,
            "def_content": "OSSAVE_BBC:\t\tMOSCALL\tmos_save\t\t; Call SAVE in MOS"
        }
    ],
    "OSSAVE_TXT": [
        {
            "def_file": "patch.asm",
            "def_line": 692,
            "def_content": "OSSAVE_TXT:\t\tLD \tA, (OSWRCHCH)\t\t; Stack the current channel"
        }
    ],
    "OSSAVE_TXT1": [
        {
            "def_file": "patch.asm",
            "def_line": 704,
            "def_content": "OSSAVE_TXT1:\t\tLD\tA, (HL)\t\t\t; Check for end of program marker"
        }
    ],
    "OSSAVE_TXT2": [
        {
            "def_file": "patch.asm",
            "def_line": 715,
            "def_content": "OSSAVE_TXT2:\t\tLD\tA, (OSWRCHFH)\t\t; Get the file handle"
        }
    ],
    "OSSHUT": [
        {
            "def_file": "patch.asm",
            "def_line": 854,
            "def_content": "OSSHUT:\t\t\tPUSH\tBC"
        }
    ],
    "OSSTAT": [
        {
            "def_file": "patch.asm",
            "def_line": 892,
            "def_content": "OSSTAT:\t\t\tPUSH\tBC"
        }
    ],
    "OSWRCH": [
        {
            "def_file": "patch.asm",
            "def_line": 177,
            "def_content": "OSWRCH:\t\t\tPUSH\tHL"
        }
    ],
    "OSWRCHCH": [
        {
            "def_file": "ram.asm",
            "def_line": 120,
            "def_content": "OSWRCHCH:       BLKB    1,0       ; Channel of OSWRCH"
        }
    ],
    "OSWRCHFH": [
        {
            "def_file": "ram.asm",
            "def_line": 123,
            "def_content": "OSWRCHFH:       BLKB    1,0       ; File handle for OSWRCHCHN"
        }
    ],
    "OSWRCHPT": [
        {
            "def_file": "ram.asm",
            "def_line": 119,
            "def_content": "OSWRCHPT:       BLKB    2,0       ; Pointer for *EDIT"
        }
    ],
    "OSWRCH_BUFFER": [
        {
            "def_file": "patch.asm",
            "def_line": 190,
            "def_content": "OSWRCH_BUFFER:\t\tLD\tHL, (OSWRCHPT)\t\t; Fetch the pointer buffer"
        }
    ],
    "OSWRCH_FILE": [
        {
            "def_file": "patch.asm",
            "def_line": 197,
            "def_content": "OSWRCH_FILE:\t\tPUSH\tDE"
        }
    ],
    "OUTCH1": [
        {
            "def_file": "exec.asm",
            "def_line": 2306,
            "def_content": "OUTCH1:\t\t\tJP      OUT_"
        }
    ],
    "OUTCHR": [
        {
            "def_file": "main.asm",
            "def_line": 1280,
            "def_content": "OUTCHR:\t\t\tCALL    OSWRCH\t\t\t; Output the character in A"
        }
    ],
    "OUT_": [
        {
            "def_file": "main.asm",
            "def_line": 1301,
            "def_content": "OUT_:\t\t\tCP      138\t\t\t; Neat trick to do condition: If A >= 10 or < 128 then PE flag is set"
        }
    ],
    "PAGEV": [
        {
            "def_file": "eval.asm",
            "def_line": 739,
            "def_content": "PAGEV:\t\t\tLD    \tHL,(PAGE_)\t\t; Return the PAGE system variable"
        }
    ],
    "PAGEV_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1399,
            "def_content": "PAGEV_EX:\t\t\tCALL    EQUALS"
        }
    ],
    "PAGE_": [
        {
            "def_file": "ram.asm",
            "def_line": 72,
            "def_content": "PAGE_:          BLKB    3,0               ; Start of User Program"
        }
    ],
    "PAIR": [
        {
            "def_file": "main.asm",
            "def_line": 1841,
            "def_content": "PAIR:\t\t\tCALL    LINNUM          \t; Parse the first line number"
        }
    ],
    "PAIR1": [
        {
            "def_file": "main.asm",
            "def_line": 1847,
            "def_content": "PAIR1:\t\t\tCALL    TERMQ\t\t\t; Check for ELSE, : or CR"
        }
    ],
    "PAIR1_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2875,
            "def_content": "PAIR1_EX:\t\t\tLD      A,B"
        }
    ],
    "PAIR_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2873,
            "def_content": "PAIR_EX:\t\t\tCALL    OPND"
        }
    ],
    "PBCD": [
        {
            "def_file": "main.asm",
            "def_line": 1420,
            "def_content": "PBCD:\t\t\tLD      C,' '\t\t\t; C: Leading character (\" \")"
        }
    ],
    "PBCD0": [
        {
            "def_file": "main.asm",
            "def_line": 1421,
            "def_content": "PBCD0:\t\t\tLD      B,5\t\t\t; Number of digits in result"
        }
    ],
    "PBCD1": [
        {
            "def_file": "main.asm",
            "def_line": 1423,
            "def_content": "PBCD1:\t\t\tXOR     A\t\t\t; Counter"
        }
    ],
    "PBCD2": [
        {
            "def_file": "main.asm",
            "def_line": 1424,
            "def_content": "PBCD2:\t\t\tSBC     HL,DE\t\t\t; Loop and count how many 10,000s we have"
        }
    ],
    "PBCD3": [
        {
            "def_file": "main.asm",
            "def_line": 1432,
            "def_content": "PBCD3:\t\t\tOR      C\t\t\t; A is then an ASCII character, or 00h if we've not processed any non-zero digits yet"
        }
    ],
    "PBCD4": [
        {
            "def_file": "main.asm",
            "def_line": 1443,
            "def_content": "PBCD4:\t\t\tLD      DE,1000\t\t\t; Set the column heading to 1,000s for subsequent runs"
        }
    ],
    "PBCDL": [
        {
            "def_file": "main.asm",
            "def_line": 1412,
            "def_content": "PBCDL:\t\t\tLD      C,0\t\t\t; C: Leading character (NUL)"
        }
    ],
    "PC": [
        {
            "def_file": "ram.asm",
            "def_line": 108,
            "def_content": "PC:\t\t\tEQU     16*4+STAVAR     ; PROGRAM COUNTER (P%)"
        }
    ],
    "PI": [
        {
            "def_file": "eval.asm",
            "def_line": 871,
            "def_content": "PI:\t\t\tLD      A,35"
        }
    ],
    "PIBY4": [
        {
            "def_file": "fpp.asm",
            "def_line": 940,
            "def_content": "PIBY4:\t\t\tLD      DE,490FH"
        }
    ],
    "PI_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 690,
            "def_content": "PI_FP:\t\t\tLD      HL,490FH"
        }
    ],
    "PLOT": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 206,
            "def_content": "PLOT:\t\t\tCALL\tEXPRI\t\t; Parse mode"
        }
    ],
    "PLOT_1": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 212,
            "def_content": "PLOT_1:\t\t\tVDU\t19H\t\t; VDU code for PLOT"
        }
    ],
    "POINT": [
        {
            "def_file": "agon_graphics.asm",
            "def_line": 106,
            "def_content": "POINT:\t\t\tCALL    EXPRI      \t\t; Get X coordinate"
        }
    ],
    "POLY": [
        {
            "def_file": "fpp.asm",
            "def_line": 2051,
            "def_content": "POLY:\t\t\tLD      IX, 3\t\t\t\t; Advance the SP to the return address"
        }
    ],
    "POLY1": [
        {
            "def_file": "fpp.asm",
            "def_line": 2056,
            "def_content": "POLY1:\t\t\tCALL    FMUL"
        }
    ],
    "POP5": [
        {
            "def_file": "fpp.asm",
            "def_line": 2015,
            "def_content": "POP5:\t\t\tPOP     IX              ;RETURN ADDRESS"
        }
    ],
    "POPS": [
        {
            "def_file": "eval.asm",
            "def_line": 1580,
            "def_content": "POPS:\t\t\tPOP     IX              \t; IX: Return address"
        }
    ],
    "POPS1": [
        {
            "def_file": "eval.asm",
            "def_line": 1591,
            "def_content": "POPS1:\t\t\tLD      SP,HL\t\t\t; Shrink the stack"
        }
    ],
    "POS": [
        {
            "def_file": "eval.asm",
            "def_line": 683,
            "def_content": "POS:\t\t\tCALL    GETCSR\t\t\t; Return the horizontal cursor position"
        }
    ],
    "POWR10": [
        {
            "def_file": "fpp.asm",
            "def_line": 2076,
            "def_content": "POWR10:\t\t\tINC     A"
        }
    ],
    "POWR11": [
        {
            "def_file": "fpp.asm",
            "def_line": 2085,
            "def_content": "POWR11:\t\t\tEX      AF,AF'"
        }
    ],
    "POWR12": [
        {
            "def_file": "fpp.asm",
            "def_line": 2100,
            "def_content": "POWR12:\t\t\tEX      AF,AF'"
        }
    ],
    "POWR13": [
        {
            "def_file": "fpp.asm",
            "def_line": 2092,
            "def_content": "POWR13:\t\t\tEX      AF,AF'"
        }
    ],
    "POWR14": [
        {
            "def_file": "fpp.asm",
            "def_line": 2105,
            "def_content": "POWR14:\t\t\tCALL    SWAP_FP"
        }
    ],
    "PRINT0": [
        {
            "def_file": "exec.asm",
            "def_line": 619,
            "def_content": "PRINT0:\t\t\tLD      A,(STAVAR)"
        }
    ],
    "PRINT3": [
        {
            "def_file": "exec.asm",
            "def_line": 651,
            "def_content": "PRINT3:\t\t\tPOP     BC"
        }
    ],
    "PRINT4": [
        {
            "def_file": "exec.asm",
            "def_line": 654,
            "def_content": "PRINT4:\t\t\tBIT     0,B"
        }
    ],
    "PRINT6": [
        {
            "def_file": "exec.asm",
            "def_line": 603,
            "def_content": "PRINT6:\t\t\tLD      B,2"
        }
    ],
    "PRINT8": [
        {
            "def_file": "exec.asm",
            "def_line": 605,
            "def_content": "PRINT8:\t\t\tLD      BC,100H"
        }
    ],
    "PRINT9": [
        {
            "def_file": "exec.asm",
            "def_line": 607,
            "def_content": "PRINT9:\t\t\tLD      HL,STAVAR"
        }
    ],
    "PRINTA": [
        {
            "def_file": "exec.asm",
            "def_line": 614,
            "def_content": "PRINTA:\t\t\tSUB     (HL)"
        }
    ],
    "PRINTC": [
        {
            "def_file": "exec.asm",
            "def_line": 622,
            "def_content": "PRINTC:\t\t\tCALL    TERMQ"
        }
    ],
    "PRINT_": [
        {
            "def_file": "exec.asm",
            "def_line": 558,
            "def_content": "PRINT_:\t\t\tCP      '#'"
        }
    ],
    "PRLINO": [
        {
            "def_file": "main.asm",
            "def_line": 1212,
            "def_content": "PRLINO:\t\t\tPUSH    HL\t\t\t; Swap HL and IY"
        }
    ],
    "PRNTN1": [
        {
            "def_file": "exec.asm",
            "def_line": 561,
            "def_content": "PRNTN1:\t\t\tCALL    NXT"
        }
    ],
    "PRNTN2": [
        {
            "def_file": "exec.asm",
            "def_line": 587,
            "def_content": "PRNTN2:\t\t\tLD      C,E"
        }
    ],
    "PRNTN3": [
        {
            "def_file": "exec.asm",
            "def_line": 591,
            "def_content": "PRNTN3:\t\t\tDEC     C"
        }
    ],
    "PRNTN4": [
        {
            "def_file": "exec.asm",
            "def_line": 599,
            "def_content": "PRNTN4:\t\t\tLD      A,CR"
        }
    ],
    "PROC": [
        {
            "def_file": "main.asm",
            "def_line": 141,
            "def_content": "PROC:\t\t\tEQU     F2H"
        }
    ],
    "PROC1": [
        {
            "def_file": "exec.asm",
            "def_line": 963,
            "def_content": "PROC1:\t\t\tCALL    CHECK\t\t\t; Check there is space for this"
        }
    ],
    "PROC2": [
        {
            "def_file": "exec.asm",
            "def_line": 978,
            "def_content": "PROC2:\t\t\tLD      A,DEF_\t\t\t;  A: The token to search for"
        }
    ],
    "PROC3": [
        {
            "def_file": "exec.asm",
            "def_line": 1002,
            "def_content": "PROC3:\t\t\tPOP     IY              \t; Restore the execution address"
        }
    ],
    "PROC4": [
        {
            "def_file": "exec.asm",
            "def_line": 1009,
            "def_content": "PROC4:\t\t\tLD\tDE,(HL)\t\t\t; HL: Address of pointer; fetch entity address in DE"
        }
    ],
    "PROC5": [
        {
            "def_file": "exec.asm",
            "def_line": 1033,
            "def_content": "PROC5:\t\t\tINC\tHL\t\t\t; Increment to the ON PROC flag address"
        }
    ],
    "PROC6": [
        {
            "def_file": "exec.asm",
            "def_line": 994,
            "def_content": "PROC6:\t\t\tEX      DE,HL\t\t\t; HL: Address of the procedure"
        }
    ],
    "PROCHK": [
        {
            "def_file": "exec.asm",
            "def_line": 961,
            "def_content": "PROCHK:\t\t\tEQU     $\t\t\t; This will never fall through as PROC1 will do a JP XEQ"
        }
    ],
    "PROC_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 959,
            "def_content": "PROC_EX:\t\t\tPUSH    AF\t\t\t; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5,"
        }
    ],
    "PROMPT": [
        {
            "def_file": "patch.asm",
            "def_line": 171,
            "def_content": "PROMPT: \t\tLD\tA,'>'"
        }
    ],
    "PROPTR": [
        {
            "def_file": "ram.asm",
            "def_line": 70,
            "def_content": "PROPTR:         BLKB    3,0               ; Dynamic Procedure Pointers"
        }
    ],
    "PRREM": [
        {
            "def_file": "main.asm",
            "def_line": 1228,
            "def_content": "PRREM:\t\t\tCALL\tOUT_\t\t\t; Output the REM token"
        }
    ],
    "PTEXT": [
        {
            "def_file": "exec.asm",
            "def_line": 2068,
            "def_content": "PTEXT:\t\t\tLD      HL,ACCS"
        }
    ],
    "PTEXT1": [
        {
            "def_file": "exec.asm",
            "def_line": 2070,
            "def_content": "PTEXT1:\t\t\tDEC     E"
        }
    ],
    "PTR_EV": [
        {
            "def_file": "eval.asm",
            "def_line": 805,
            "def_content": "PTR_EV:\t\t\tCALL    CHANEL"
        }
    ],
    "PTR_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1387,
            "def_content": "PTR_EX:\t\t\tCALL    CHANEL"
        }
    ],
    "PUSH5": [
        {
            "def_file": "fpp.asm",
            "def_line": 2004,
            "def_content": "PUSH5:\t\t\tPOP     IX              ;RETURN ADDRESS"
        }
    ],
    "PUSHS": [
        {
            "def_file": "eval.asm",
            "def_line": 1549,
            "def_content": "PUSHS:\t\t\tCALL    CHECK\t\t\t; Check if there is sufficient space on the stack"
        }
    ],
    "PUSHS1": [
        {
            "def_file": "eval.asm",
            "def_line": 1572,
            "def_content": "PUSHS1:\t\t\tJP      (IX)            \t; Effectively \"RET\" (IX contains the return address)"
        }
    ],
    "PUT": [
        {
            "def_file": "exec.asm",
            "def_line": 1656,
            "def_content": "PUT:\t\t\tCALL    EXPRI           ;PORT ADDRESS"
        }
    ],
    "PUTCSR": [
        {
            "def_file": "patch.asm",
            "def_line": 144,
            "def_content": "PUTCSR:\t\t\tLD\tA, 1Fh\t\t\t; TAB"
        }
    ],
    "PUTIME": [
        {
            "def_file": "patch.asm",
            "def_line": 122,
            "def_content": "PUTIME:\t\t\tPUSH \tIX"
        }
    ],
    "PUTIMS": [
        {
            "def_file": "sorry.asm",
            "def_line": 22,
            "def_content": "PUTIMS:"
        }
    ],
    "PUTPTR": [
        {
            "def_file": "patch.asm",
            "def_line": 922,
            "def_content": "PUTPTR:\t\t\tPUSH\t\tIY"
        }
    ],
    "PUTVAR": [
        {
            "def_file": "main.asm",
            "def_line": 1453,
            "def_content": "PUTVAR:\t\t\tCALL    CREATE\t\t\t; Create the variable"
        }
    ],
    "R0": [
        {
            "def_file": "ram.asm",
            "def_line": 127,
            "def_content": "R0:             BLKB    3,0       ; General purpose storage for 8/16 to 24 bit operations"
        }
    ],
    "R1": [
        {
            "def_file": "ram.asm",
            "def_line": 128,
            "def_content": "R1:             BLKB    3,0"
        }
    ],
    "RAD": [
        {
            "def_file": "eval.asm",
            "def_line": 895,
            "def_content": "RAD:\t\t\tLD      A,27"
        }
    ],
    "RAD_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 709,
            "def_content": "RAD_FP:\t\t\tCALL    FPI180"
        }
    ],
    "RAM_END": [
        {
            "def_file": "ram.asm",
            "def_line": 133,
            "def_content": "RAM_END:"
        }
    ],
    "RAM_START": [
        {
            "def_file": "ram.asm",
            "def_line": 63,
            "def_content": "RAM_START:"
        }
    ],
    "RANDOM": [
        {
            "def_file": "ram.asm",
            "def_line": 86,
            "def_content": "RANDOM:         BLKB    5,0               ; Random Number"
        }
    ],
    "RANGE": [
        {
            "def_file": "main.asm",
            "def_line": 1888,
            "def_content": "RANGE:\t\t\tLD      A,(IY)\t\t\t; Fetch the character"
        }
    ],
    "RANGE1": [
        {
            "def_file": "main.asm",
            "def_line": 1900,
            "def_content": "RANGE1:\t\t\tCP      '0'\t\t\t; If it is between '0'..."
        }
    ],
    "RANGE2": [
        {
            "def_file": "main.asm",
            "def_line": 1911,
            "def_content": "RANGE2:\t\t\tCP      'A'\t\t\t; If it is between 'A'..."
        }
    ],
    "RATIO": [
        {
            "def_file": "fpp.asm",
            "def_line": 2031,
            "def_content": "RATIO:\t\t\tCALL    PUSH5           ;SAVE X"
        }
    ],
    "RDIV": [
        {
            "def_file": "fpp.asm",
            "def_line": 1017,
            "def_content": "RDIV:\t\t\tCALL    SWAP_FP"
        }
    ],
    "READ": [
        {
            "def_file": "exec.asm",
            "def_line": 1272,
            "def_content": "READ:\t\t\tCP      '#'"
        }
    ],
    "READ0": [
        {
            "def_file": "exec.asm",
            "def_line": 1275,
            "def_content": "READ0:\t\t\tLD      A,(HL)"
        }
    ],
    "READ1": [
        {
            "def_file": "exec.asm",
            "def_line": 1294,
            "def_content": "READ1:\t\t\tCALL    FETCHS"
        }
    ],
    "READ2": [
        {
            "def_file": "exec.asm",
            "def_line": 1297,
            "def_content": "READ2:\t\t\tPOP     HL"
        }
    ],
    "READKEY": [
        {
            "def_file": "patch.asm",
            "def_line": 260,
            "def_content": "READKEY:\t\tLD\tA, (KEYDOWN)\t\t; Get key down"
        }
    ],
    "RECIP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1016,
            "def_content": "RECIP:\t\t\tCALL    DONE"
        }
    ],
    "REFIL0": [
        {
            "def_file": "exec.asm",
            "def_line": 1250,
            "def_content": "REFIL0:\t\t\tLD      HL,BUFFER"
        }
    ],
    "REFIL1": [
        {
            "def_file": "exec.asm",
            "def_line": 1263,
            "def_content": "REFIL1:\t\t\tLD      A,(HL)"
        }
    ],
    "REFILL": [
        {
            "def_file": "exec.asm",
            "def_line": 1244,
            "def_content": "REFILL:\t\t\tBIT     0,C"
        }
    ],
    "REG": [
        {
            "def_file": "exec.asm",
            "def_line": 2845,
            "def_content": "REG:\t\t\tCALL    OPND"
        }
    ],
    "REGHI": [
        {
            "def_file": "exec.asm",
            "def_line": 2857,
            "def_content": "REGHI:\t\t\tCALL    REG"
        }
    ],
    "REGLO": [
        {
            "def_file": "exec.asm",
            "def_line": 2853,
            "def_content": "REGLO:\t\t\tCALL    REG"
        }
    ],
    "REM": [
        {
            "def_file": "main.asm",
            "def_line": 142,
            "def_content": "REM:\t\t\tEQU     F4H"
        }
    ],
    "REM_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 329,
            "def_content": "REM_EX:\t\t\tPUSH    IY"
        }
    ],
    "REN": [
        {
            "def_file": "main.asm",
            "def_line": 131,
            "def_content": "REN:\t\t\tEQU     CCH"
        }
    ],
    "RENUM": [
        {
            "def_file": "main.asm",
            "def_line": 713,
            "def_content": "RENUM:\t\t\tCALL    CLEAR           \t; Uses the heap so clear all dynamic variables and function/procedure pointers"
        }
    ],
    "RENUM1": [
        {
            "def_file": "main.asm",
            "def_line": 721,
            "def_content": "RENUM1:\t\t\tLD      A,(HL)          \t; Fetch the line length byte"
        }
    ],
    "RENUM2": [
        {
            "def_file": "main.asm",
            "def_line": 769,
            "def_content": "RENUM2:\t\t\tEX      DE,HL\t\t\t; HL: Pointer to the end of the heap"
        }
    ],
    "RENUM3": [
        {
            "def_file": "main.asm",
            "def_line": 776,
            "def_content": "RENUM3:\t\t\tLD      C,(HL)\t\t\t; Fetch the first line length byte"
        }
    ],
    "RENUM4": [
        {
            "def_file": "main.asm",
            "def_line": 825,
            "def_content": "RENUM4:\t\t\tLD      E,(HL)          \t; DE: The OLD line number"
        }
    ],
    "RENUM5": [
        {
            "def_file": "main.asm",
            "def_line": 851,
            "def_content": "RENUM5:\t\t\tPOP     DE\t\t\t; DE: Pointer to the encoded line number in the listing"
        }
    ],
    "RENUM6": [
        {
            "def_file": "main.asm",
            "def_line": 855,
            "def_content": "RENUM6:\t\t\tPOP     HL\t\t\t; HL: Pointer to the encoded line number in the listing"
        }
    ],
    "RENUM7": [
        {
            "def_file": "main.asm",
            "def_line": 805,
            "def_content": "RENUM7:\t\t\tLD      A,LINO_MN\t\t\t; A: The token code that precedes any line number encoded in BASIC (i.e. GOTO/GOSUB)"
        }
    ],
    "REPCHK": [
        {
            "def_file": "exec.asm",
            "def_line": 782,
            "def_content": "REPCHK:\t\t\tEQU     $"
        }
    ],
    "REPEAT": [
        {
            "def_file": "main.asm",
            "def_line": 143,
            "def_content": "REPEAT:\t\t\tEQU     F5H"
        }
    ],
    "REPEAT_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 779,
            "def_content": "REPEAT_EX:\t\t\tPUSH    IY\t\t\t; Push the current execution address onto the execution stack"
        }
    ],
    "REPOR": [
        {
            "def_file": "exec.asm",
            "def_line": 1357,
            "def_content": "REPOR:\t\t\tCALL    REPORT"
        }
    ],
    "REPORT": [
        {
            "def_file": "main.asm",
            "def_line": 2121,
            "def_content": "REPORT:\t\t\tLD      HL, (ERRTXT)\t\t; Output an error message pointed to by ERRTXT"
        }
    ],
    "RESET": [
        {
            "def_file": "patch.asm",
            "def_line": 981,
            "def_content": "RESET:\t\t\tRET"
        }
    ],
    "RESTOR": [
        {
            "def_file": "main.asm",
            "def_line": 144,
            "def_content": "RESTOR:\t\t\tEQU     F7H"
        }
    ],
    "RESTOR_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1368,
            "def_content": "RESTOR_EX:\t\t\tLD      HL,(PAGE_)"
        }
    ],
    "RESTR1": [
        {
            "def_file": "exec.asm",
            "def_line": 1376,
            "def_content": "RESTR1:\t\t\tLD      A,DATA_EX_"
        }
    ],
    "RETURN": [
        {
            "def_file": "exec.asm",
            "def_line": 765,
            "def_content": "RETURN:\t\t\tPOP     DE\t\t\t; Pop the marker off the execution stack"
        }
    ],
    "RIGHT1": [
        {
            "def_file": "eval.asm",
            "def_line": 1322,
            "def_content": "RIGHT1:\t\t\tLD\tA,C"
        }
    ],
    "RIGHTS": [
        {
            "def_file": "eval.asm",
            "def_line": 1313,
            "def_content": "RIGHTS:\t\t\tCALL    LEFTS\t\t\t; Call LEFTS to get the string"
        }
    ],
    "RND": [
        {
            "def_file": "eval.asm",
            "def_line": 1028,
            "def_content": "RND:\t\t\tLD      IX,RANDOM"
        }
    ],
    "RND1": [
        {
            "def_file": "eval.asm",
            "def_line": 1033,
            "def_content": "RND1:\t\t\tRR      C"
        }
    ],
    "RND2": [
        {
            "def_file": "eval.asm",
            "def_line": 1035,
            "def_content": "RND2:\t\t\tEXX                     ;CALCULATE NEXT"
        }
    ],
    "RND3": [
        {
            "def_file": "eval.asm",
            "def_line": 1042,
            "def_content": "RND3:\t\t\tDJNZ    RND2"
        }
    ],
    "RND4": [
        {
            "def_file": "eval.asm",
            "def_line": 1043,
            "def_content": "RND4:\t\t\tRL      C               ;SAVE CARRY"
        }
    ],
    "RND5": [
        {
            "def_file": "eval.asm",
            "def_line": 1048,
            "def_content": "RND5:\t\t\tCALL    ITEMI"
        }
    ],
    "RND6": [
        {
            "def_file": "eval.asm",
            "def_line": 1061,
            "def_content": "RND6:\t\t\tBIT     7,H             ;FLOAT"
        }
    ],
    "RND7": [
        {
            "def_file": "eval.asm",
            "def_line": 1069,
            "def_content": "RND7:\t\t\tRES     7,H             ;POSITIVE 0-0.999999"
        }
    ],
    "RSUB": [
        {
            "def_file": "fpp.asm",
            "def_line": 292,
            "def_content": "RSUB:\t\t\tLD      A,H"
        }
    ],
    "RTABLE": [
        {
            "def_file": "fpp.asm",
            "def_line": 155,
            "def_content": "RTABLE:\t\t\tDW24  FAND            ;AND (FLOATING-POINT)"
        }
    ],
    "RUN": [
        {
            "def_file": "exec.asm",
            "def_line": 219,
            "def_content": "RUN:\t\t\tCALL    TERMQ\t\t\t; Standalone RUN command?"
        }
    ],
    "RUN0": [
        {
            "def_file": "exec.asm",
            "def_line": 230,
            "def_content": "RUN0:\t\t\tLD      SP,(HIMEM)      \t; Prepare for RUN"
        }
    ],
    "SAVE": [
        {
            "def_file": "main.asm",
            "def_line": 911,
            "def_content": "SAVE:\t\t\tCALL    SETTOP          \t; Set TOP sysvar"
        }
    ],
    "SAVE1": [
        {
            "def_file": "eval.asm",
            "def_line": 1637,
            "def_content": "SAVE1:\t\t\tEX      AF,AF'"
        }
    ],
    "SAVE_EV": [
        {
            "def_file": "eval.asm",
            "def_line": 1636,
            "def_content": "SAVE_EV:\t\t\tINC     IY"
        }
    ],
    "SAVLO1": [
        {
            "def_file": "exec.asm",
            "def_line": 1911,
            "def_content": "SAVLO1:\t\t\tINC     IY              \t; Bump past '(' or ','"
        }
    ],
    "SAVLO2": [
        {
            "def_file": "exec.asm",
            "def_line": 1940,
            "def_content": "SAVLO2:\t\t\tPUSH    AF              \t; Save the type (string)"
        }
    ],
    "SAVLO4": [
        {
            "def_file": "exec.asm",
            "def_line": 1968,
            "def_content": "SAVLO4:\t\t\tPUSH    IX\t\t\t; VARPTR"
        }
    ],
    "SAVLO5": [
        {
            "def_file": "exec.asm",
            "def_line": 1971,
            "def_content": "SAVLO5:\t\t\tCALL    CHECK"
        }
    ],
    "SAVLOC": [
        {
            "def_file": "exec.asm",
            "def_line": 1909,
            "def_content": "SAVLOC:\t\t\tPOP     DE              \t; DE: Return address (from the CALL)"
        }
    ],
    "SAYLN": [
        {
            "def_file": "main.asm",
            "def_line": 1406,
            "def_content": "SAYLN:\t\t\tLD      HL,(LINENO)\t\t; Get the LINENO sysvar"
        }
    ],
    "SCALE": [
        {
            "def_file": "fpp.asm",
            "def_line": 1656,
            "def_content": "SCALE:\t\t\tLD      A,150"
        }
    ],
    "SCP": [
        {
            "def_file": "eval.asm",
            "def_line": 1510,
            "def_content": "SCP:\t\t\tCALL\tSCP0"
        }
    ],
    "SCP0": [
        {
            "def_file": "eval.asm",
            "def_line": 1522,
            "def_content": "SCP0:\t\t\tINC     B"
        }
    ],
    "SCP1": [
        {
            "def_file": "eval.asm",
            "def_line": 1524,
            "def_content": "SCP1:\t\t\tDEC     B"
        }
    ],
    "SCP2": [
        {
            "def_file": "eval.asm",
            "def_line": 1534,
            "def_content": "SCP2:\t\t\tOR      A"
        }
    ],
    "SCP3": [
        {
            "def_file": "eval.asm",
            "def_line": 1539,
            "def_content": "SCP3:\t\t\tOR      A"
        }
    ],
    "SEARCH": [
        {
            "def_file": "eval.asm",
            "def_line": 1142,
            "def_content": "SEARCH:\t\t\tPUSH    BC\t\t\t; Add the starting offset to HL"
        }
    ],
    "SEARCH_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2122,
            "def_content": "SEARCH_EX:\t\t\tLD      BC,0\t\t\t; Clear BC"
        }
    ],
    "SEQ": [
        {
            "def_file": "eval.asm",
            "def_line": 855,
            "def_content": "SEQ:\t\t\tCALL    SCP"
        }
    ],
    "SET1": [
        {
            "def_file": "main.asm",
            "def_line": 1380,
            "def_content": "SET1:\t\t\tLD      C, (HL)\t\t\t; Get the length of the line; zero indicates the end of the BASIC program"
        }
    ],
    "SET2": [
        {
            "def_file": "main.asm",
            "def_line": 1395,
            "def_content": "SET2:\t\t\tLD      (LINENO), HL\t\t; Store in the variable LINENO"
        }
    ],
    "SET3": [
        {
            "def_file": "main.asm",
            "def_line": 1398,
            "def_content": "SET3:\t\t\tLD      HL, 0\t\t\t; We've not found the line at this point so"
        }
    ],
    "SETLIN": [
        {
            "def_file": "main.asm",
            "def_line": 1371,
            "def_content": "SETLIN:\t\t\tLD\tBC, 0\t\t\t; Zero BC for later"
        }
    ],
    "SETOP1": [
        {
            "def_file": "main.asm",
            "def_line": 1111,
            "def_content": "SETOP1:\t\t\tLD      C,(HL)\t\t\t; BC: Get first byte of program line (line length)"
        }
    ],
    "SETOP2": [
        {
            "def_file": "main.asm",
            "def_line": 1122,
            "def_content": "SETOP2:\t\t\tINC     HL             \t\t; Skip the 3 byte end of program marker (&00, &FF, &FF)"
        }
    ],
    "SETTOP": [
        {
            "def_file": "main.asm",
            "def_line": 1108,
            "def_content": "SETTOP:\t\t\tLD      HL,(PAGE_)\t\t; Start at beginning of BASIC program area"
        }
    ],
    "SFIX": [
        {
            "def_file": "eval.asm",
            "def_line": 978,
            "def_content": "SFIX:\t\t\tLD      A,38"
        }
    ],
    "SFIX_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1605,
            "def_content": "SFIX_FP:\t\t\tDEC     C"
        }
    ],
    "SFLOAT": [
        {
            "def_file": "eval.asm",
            "def_line": 983,
            "def_content": "SFLOAT:\t\t\tLD      A,39"
        }
    ],
    "SFLOAT_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1757,
            "def_content": "SFLOAT_FP:\t\t\tDEC     C"
        }
    ],
    "SGE": [
        {
            "def_file": "eval.asm",
            "def_line": 842,
            "def_content": "SGE:\t\t\tCALL    SCP"
        }
    ],
    "SGN": [
        {
            "def_file": "eval.asm",
            "def_line": 901,
            "def_content": "SGN:\t\t\tLD      A,28"
        }
    ],
    "SGN_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 727,
            "def_content": "SGN_FP:\t\t\tCALL    TEST_FP"
        }
    ],
    "SGT": [
        {
            "def_file": "eval.asm",
            "def_line": 837,
            "def_content": "SGT:\t\t\tCALL    SCP"
        }
    ],
    "SHL3": [
        {
            "def_file": "exec.asm",
            "def_line": 2885,
            "def_content": "SHL3:\t\t\tRLCA"
        }
    ],
    "SIGN": [
        {
            "def_file": "exec.asm",
            "def_line": 2959,
            "def_content": "SIGN:\t\t\tCP      '+'\t\t\t; Check whether the character is a sign symbol"
        }
    ],
    "SIGNQ": [
        {
            "def_file": "fpp.asm",
            "def_line": 2266,
            "def_content": "SIGNQ:\t\t\tLD      A,(IX)"
        }
    ],
    "SIN": [
        {
            "def_file": "eval.asm",
            "def_line": 931,
            "def_content": "SIN:\t\t\tLD      A,29"
        }
    ],
    "SIN0": [
        {
            "def_file": "fpp.asm",
            "def_line": 857,
            "def_content": "SIN0:\t\t\tPUSH    HL              ;H7=SIGN"
        }
    ],
    "SIN1": [
        {
            "def_file": "fpp.asm",
            "def_line": 865,
            "def_content": "SIN1:\t\t\tPUSH    AF              ;OCTANT"
        }
    ],
    "SIN2": [
        {
            "def_file": "fpp.asm",
            "def_line": 897,
            "def_content": "SIN2:\t\t\tCALL    SQUARE          ;PUSH X*X"
        }
    ],
    "SIN3": [
        {
            "def_file": "fpp.asm",
            "def_line": 915,
            "def_content": "SIN3:\t\t\tPOP     AF"
        }
    ],
    "SIN_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 856,
            "def_content": "SIN_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "SKIP": [
        {
            "def_file": "exec.asm",
            "def_line": 2952,
            "def_content": "SKIP:\t\t\tCALL    DELIM\t\t\t; Is it a delimiter?"
        }
    ],
    "SKIP0": [
        {
            "def_file": "exec.asm",
            "def_line": 2951,
            "def_content": "SKIP0:\t\t\tINC     HL"
        }
    ],
    "SKIPNOTSP": [
        {
            "def_file": "misc.asm",
            "def_line": 96,
            "def_content": "SKIPNOTSP:\t\tLD\tA, (HL)"
        }
    ],
    "SKIPSP": [
        {
            "def_file": "patch.asm",
            "def_line": 358,
            "def_content": "SKIPSP:\t\t\tLD      A,(HL)"
        }
    ],
    "SKIPSPC": [
        {
            "def_file": "misc.asm",
            "def_line": 87,
            "def_content": "SKIPSPC:\t\t\tLD      A, (HL)"
        }
    ],
    "SLE": [
        {
            "def_file": "eval.asm",
            "def_line": 846,
            "def_content": "SLE:\t\t\tCALL    SCP"
        }
    ],
    "SLT": [
        {
            "def_file": "eval.asm",
            "def_line": 833,
            "def_content": "SLT:\t\t\tCALL    SCP"
        }
    ],
    "SNE": [
        {
            "def_file": "eval.asm",
            "def_line": 851,
            "def_content": "SNE:\t\t\tCALL    SCP"
        }
    ],
    "SOPTBL": [
        {
            "def_file": "eval.asm",
            "def_line": 171,
            "def_content": "SOPTBL:\t\t\tDW24\tSLE\t\t\t; <= (STRING)"
        }
    ],
    "SOUND": [
        {
            "def_file": "agon_sound.asm",
            "def_line": 32,
            "def_content": "SOUND:\t\t\tCALL\tEXPR_W2\t\t\t; DE: Channel/Control, HL: Volume"
        }
    ],
    "SOUND0": [
        {
            "def_file": "agon_sound.asm",
            "def_line": 83,
            "def_content": "SOUND0:\t\t\tRES.LIL\t3, (IX+sysvar_vpd_pflags)"
        }
    ],
    "SOUND_FREQ_LOOKUP": [
        {
            "def_file": "agon_sound.asm",
            "def_line": 130,
            "def_content": "SOUND_FREQ_LOOKUP:\tDW\t 117,  118,  120,  122,  123,  131,  133,  135"
        }
    ],
    "SPACE_": [
        {
            "def_file": "main.asm",
            "def_line": 1925,
            "def_content": "SPACE_: \t\tXOR     A"
        }
    ],
    "SPAN": [
        {
            "def_file": "exec.asm",
            "def_line": 1999,
            "def_content": "SPAN:\t\t\tCALL    TERMQ"
        }
    ],
    "SPC": [
        {
            "def_file": "exec.asm",
            "def_line": 136,
            "def_content": "SPC:\t\t\tEQU     89H"
        }
    ],
    "SQR": [
        {
            "def_file": "eval.asm",
            "def_line": 913,
            "def_content": "SQR:\t\t\tLD      A,30"
        }
    ],
    "SQR0": [
        {
            "def_file": "fpp.asm",
            "def_line": 778,
            "def_content": "SQR0:\t\t\tBIT     7,H"
        }
    ],
    "SQR1": [
        {
            "def_file": "fpp.asm",
            "def_line": 2188,
            "def_content": "SQR1:"
        }
    ],
    "SQR2": [
        {
            "def_file": "fpp.asm",
            "def_line": 2201,
            "def_content": "SQR2:\t\t\tINC     A"
        }
    ],
    "SQR3": [
        {
            "def_file": "fpp.asm",
            "def_line": 2231,
            "def_content": "SQR3:\t\t\tOR      A"
        }
    ],
    "SQRA": [
        {
            "def_file": "fpp.asm",
            "def_line": 2203,
            "def_content": "SQRA:\t\t\tSLA     C"
        }
    ],
    "SQRB": [
        {
            "def_file": "fpp.asm",
            "def_line": 2239,
            "def_content": "SQRB:"
        }
    ],
    "SQR_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 777,
            "def_content": "SQR_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "SQUARE": [
        {
            "def_file": "fpp.asm",
            "def_line": 2002,
            "def_content": "SQUARE:\t\t\tCALL    COPY_"
        }
    ],
    "SRCH1": [
        {
            "def_file": "eval.asm",
            "def_line": 1152,
            "def_content": "SRCH1:\t\t\tPUSH    BC"
        }
    ],
    "SRCH1_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2124,
            "def_content": "SRCH1_EX:\t\t\tLD      C,(HL)\t\t\t;  C: Fetch the line length"
        }
    ],
    "SRCH2": [
        {
            "def_file": "eval.asm",
            "def_line": 1175,
            "def_content": "SRCH2:\t\t\tINC     DE"
        }
    ],
    "SRCH2_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 2139,
            "def_content": "SRCH2_EX:\t\t\tDEC     HL              \t; Token not found, so back up to the CR at the end of the last line"
        }
    ],
    "SRCH3": [
        {
            "def_file": "eval.asm",
            "def_line": 1181,
            "def_content": "SRCH3:\t\t\tPOP     HL"
        }
    ],
    "SRCH4": [
        {
            "def_file": "eval.asm",
            "def_line": 1188,
            "def_content": "SRCH4:\t\t\tOR      0FFH            \t; Flags: NZ, NC"
        }
    ],
    "STACCS": [
        {
            "def_file": "exec.asm",
            "def_line": 1713,
            "def_content": "STACCS:\t\t\tLD      HL,ACCS\t\t\t; HL: Pointer to the string accumulator"
        }
    ],
    "STAR_BYE": [
        {
            "def_file": "patch.asm",
            "def_line": 431,
            "def_content": "STAR_BYE:\t\tCALL\tVBLANK_STOP\t\t; Restore MOS interrupts"
        }
    ],
    "STAR_EDIT": [
        {
            "def_file": "patch.asm",
            "def_line": 443,
            "def_content": "STAR_EDIT:\t\tCALL\tASC_TO_NUMBER\t\t; DE: Line number to edit"
        }
    ],
    "STAR_FX": [
        {
            "def_file": "patch.asm",
            "def_line": 472,
            "def_content": "STAR_FX:\t\tCALL\tASC_TO_NUMBER"
        }
    ],
    "STAR_FX1": [
        {
            "def_file": "patch.asm",
            "def_line": 481,
            "def_content": "STAR_FX1:\t\tLD\tB, E \t\t\t; B: Save First parameter"
        }
    ],
    "STAR_FX2": [
        {
            "def_file": "patch.asm",
            "def_line": 486,
            "def_content": "STAR_FX2:\t\tLD\tA, C \t\t\t; A: FX #, and fall through to OSBYTE"
        }
    ],
    "STAR_VERSION": [
        {
            "def_file": "patch.asm",
            "def_line": 437,
            "def_content": "STAR_VERSION:\t\tCALL    TELL\t\t\t; Output the welcome message"
        }
    ],
    "STAVAR": [
        {
            "def_file": "ram.asm",
            "def_line": 67,
            "def_content": "STAVAR:         BLKB    27*4,0            ; Static Variables"
        }
    ],
    "STEP": [
        {
            "def_file": "exec.asm",
            "def_line": 135,
            "def_content": "STEP:\t\t\tEQU     88H"
        }
    ],
    "STOP": [
        {
            "def_file": "exec.asm",
            "def_line": 1345,
            "def_content": "STOP:\t\t\tCALL    TELL"
        }
    ],
    "STORE": [
        {
            "def_file": "exec.asm",
            "def_line": 1684,
            "def_content": "STORE:\t\t\tBIT     0,A"
        }
    ],
    "STORE1": [
        {
            "def_file": "exec.asm",
            "def_line": 1703,
            "def_content": "STORE1:\t\t\tEXX"
        }
    ],
    "STORE4": [
        {
            "def_file": "exec.asm",
            "def_line": 1688,
            "def_content": "STORE4:\t\t\tEXX"
        }
    ],
    "STORE5": [
        {
            "def_file": "exec.asm",
            "def_line": 1687,
            "def_content": "STORE5:\t\t\tLD      (IX+4),C"
        }
    ],
    "STOREI": [
        {
            "def_file": "exec.asm",
            "def_line": 1695,
            "def_content": "STOREI:\t\t\tPUSH    AF"
        }
    ],
    "STORES": [
        {
            "def_file": "exec.asm",
            "def_line": 1729,
            "def_content": "STORES:\t\t\tRRA\t\t\t\t; Rotate right to shift bit 0 into carry"
        }
    ],
    "STORS1": [
        {
            "def_file": "exec.asm",
            "def_line": 1774,
            "def_content": "STORS1:\t\t\tEXX\t\t\t\t; This block was a call to STORE4"
        }
    ],
    "STORS3": [
        {
            "def_file": "exec.asm",
            "def_line": 1805,
            "def_content": "STORS3:\t\t\tLD\tBC,0"
        }
    ],
    "STORS5": [
        {
            "def_file": "exec.asm",
            "def_line": 1813,
            "def_content": "STORS5:\t\t\tLD      A,CR\t\t\t; Finally add the terminator"
        }
    ],
    "STR": [
        {
            "def_file": "eval.asm",
            "def_line": 1486,
            "def_content": "STR:\t\t\tLD      IX,STAVAR"
        }
    ],
    "STR0": [
        {
            "def_file": "eval.asm",
            "def_line": 1487,
            "def_content": "STR0:\t\t\tLD      DE,ACCS"
        }
    ],
    "STR02": [
        {
            "def_file": "fpp.asm",
            "def_line": 1275,
            "def_content": "STR02:\t\t\tINC     C"
        }
    ],
    "STR1": [
        {
            "def_file": "eval.asm",
            "def_line": 1492,
            "def_content": "STR1:\t\t\tLD      A,80H           ;STRING MARKER"
        }
    ],
    "STR10": [
        {
            "def_file": "fpp.asm",
            "def_line": 1223,
            "def_content": "STR10:\t\t\tXOR     A               ;CLEAR A"
        }
    ],
    "STR11": [
        {
            "def_file": "fpp.asm",
            "def_line": 1228,
            "def_content": "STR11:\t\t\tPUSH    AF              ;SAVE DECIMAL COUNTER"
        }
    ],
    "STR13": [
        {
            "def_file": "fpp.asm",
            "def_line": 1238,
            "def_content": "STR13:\t\t\tADD     A,28"
        }
    ],
    "STR14": [
        {
            "def_file": "fpp.asm",
            "def_line": 1247,
            "def_content": "STR14:\t\t\tSUB     32"
        }
    ],
    "STR15": [
        {
            "def_file": "fpp.asm",
            "def_line": 1256,
            "def_content": "STR15:\t\t\tLD      A,9"
        }
    ],
    "STR2": [
        {
            "def_file": "eval.asm",
            "def_line": 1496,
            "def_content": "STR2:\t\t\tCP      E"
        }
    ],
    "STR20": [
        {
            "def_file": "fpp.asm",
            "def_line": 1284,
            "def_content": "STR20:\t\t\tADD     A,(IX+1)        ;SIG. FIG. COUNT"
        }
    ],
    "STR21": [
        {
            "def_file": "fpp.asm",
            "def_line": 1288,
            "def_content": "STR21:\t\t\tPUSH    AF"
        }
    ],
    "STR22": [
        {
            "def_file": "fpp.asm",
            "def_line": 1290,
            "def_content": "STR22:\t\t\tCALL    X2              ;RL AHLH'L'"
        }
    ],
    "STR23": [
        {
            "def_file": "fpp.asm",
            "def_line": 1298,
            "def_content": "STR23:\t\t\tDEC     C"
        }
    ],
    "STR24": [
        {
            "def_file": "fpp.asm",
            "def_line": 1312,
            "def_content": "STR24:\t\t\tPUSH    AF"
        }
    ],
    "STR25": [
        {
            "def_file": "fpp.asm",
            "def_line": 1320,
            "def_content": "STR25:\t\t\tEX      (SP),HL"
        }
    ],
    "STR26": [
        {
            "def_file": "fpp.asm",
            "def_line": 1325,
            "def_content": "STR26:\t\t\tINC     A               ;SET +VE"
        }
    ],
    "STR27": [
        {
            "def_file": "fpp.asm",
            "def_line": 1328,
            "def_content": "STR27:\t\t\tINC     B"
        }
    ],
    "STR3": [
        {
            "def_file": "fpp.asm",
            "def_line": 1344,
            "def_content": "STR3:\t\t\tEX      DE,HL           ;STRING POINTER"
        }
    ],
    "STR30": [
        {
            "def_file": "fpp.asm",
            "def_line": 1357,
            "def_content": "STR30:\t\t\tLD      A,D"
        }
    ],
    "STR31": [
        {
            "def_file": "fpp.asm",
            "def_line": 1362,
            "def_content": "STR31:\t\t\tLD      A,B             ;G MODE"
        }
    ],
    "STR32": [
        {
            "def_file": "fpp.asm",
            "def_line": 1375,
            "def_content": "STR32:\t\t\tLD      A,B"
        }
    ],
    "STR33": [
        {
            "def_file": "fpp.asm",
            "def_line": 1390,
            "def_content": "STR33:\t\t\tLD      A,'0'"
        }
    ],
    "STR34": [
        {
            "def_file": "fpp.asm",
            "def_line": 1378,
            "def_content": "STR34:\t\t\tSET     7,D"
        }
    ],
    "STR35": [
        {
            "def_file": "fpp.asm",
            "def_line": 1380,
            "def_content": "STR35:\t\t\tLD      A,D"
        }
    ],
    "STR36": [
        {
            "def_file": "fpp.asm",
            "def_line": 1383,
            "def_content": "STR36:\t\t\tPOP     AF"
        }
    ],
    "STR37": [
        {
            "def_file": "fpp.asm",
            "def_line": 1386,
            "def_content": "STR37:\t\t\tPUSH    AF"
        }
    ],
    "STR38": [
        {
            "def_file": "fpp.asm",
            "def_line": 1391,
            "def_content": "STR38:\t\t\tDEC     D"
        }
    ],
    "STR39": [
        {
            "def_file": "fpp.asm",
            "def_line": 1395,
            "def_content": "STR39:\t\t\tLD      (HL),A"
        }
    ],
    "STR3A": [
        {
            "def_file": "fpp.asm",
            "def_line": 1371,
            "def_content": "STR3A:\t\t\tCP      B"
        }
    ],
    "STR4": [
        {
            "def_file": "fpp.asm",
            "def_line": 1401,
            "def_content": "STR4:\t\t\tPOP     AF"
        }
    ],
    "STR40": [
        {
            "def_file": "fpp.asm",
            "def_line": 1402,
            "def_content": "STR40:\t\t\tINC     C"
        }
    ],
    "STR41": [
        {
            "def_file": "fpp.asm",
            "def_line": 1413,
            "def_content": "STR41:\t\t\tLD      (HL),'0'"
        }
    ],
    "STR42": [
        {
            "def_file": "fpp.asm",
            "def_line": 1421,
            "def_content": "STR42:\t\t\tINC     (HL)"
        }
    ],
    "STR43": [
        {
            "def_file": "fpp.asm",
            "def_line": 1428,
            "def_content": "STR43:\t\t\tDJNZ    STR42"
        }
    ],
    "STR44": [
        {
            "def_file": "fpp.asm",
            "def_line": 1430,
            "def_content": "STR44:\t\t\tEX      DE,HL"
        }
    ],
    "STR47": [
        {
            "def_file": "fpp.asm",
            "def_line": 1429,
            "def_content": "STR47:\t\t\tINC     HL"
        }
    ],
    "STRIN1": [
        {
            "def_file": "eval.asm",
            "def_line": 1356,
            "def_content": "STRIN1:\t\t\tPUSH    BC"
        }
    ],
    "STRIN2": [
        {
            "def_file": "eval.asm",
            "def_line": 1357,
            "def_content": "STRIN2:\t\t\tLD      A,(HL)"
        }
    ],
    "STRING_": [
        {
            "def_file": "eval.asm",
            "def_line": 1336,
            "def_content": "STRING_:\t\tCALL    EXPRI\t\t\t; Get number of times to replicate"
        }
    ],
    "STRS": [
        {
            "def_file": "eval.asm",
            "def_line": 1477,
            "def_content": "STRS:\t\t\tCALL    NXT"
        }
    ],
    "STR_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1215,
            "def_content": "STR_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "SUB_": [
        {
            "def_file": "fpp.asm",
            "def_line": 1942,
            "def_content": "SUB_:\t\t\tEXX"
        }
    ],
    "SWAP": [
        {
            "def_file": "eval.asm",
            "def_line": 1376,
            "def_content": "SWAP:\t\t\tLD      A,C"
        }
    ],
    "SWAP1": [
        {
            "def_file": "fpp.asm",
            "def_line": 1807,
            "def_content": "SWAP1:\t\t\tEX      DE,HL"
        }
    ],
    "SWAP_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1804,
            "def_content": "SWAP_FP:\t\t\tLD      A,C"
        }
    ],
    "SWITCH_A": [
        {
            "def_file": "misc.asm",
            "def_line": 114,
            "def_content": "SWITCH_A:\t\tEX\t(SP), HL\t\t; Swap HL with the contents of the top of the stack"
        }
    ],
    "SYNTAX": [
        {
            "def_file": "exec.asm",
            "def_line": 385,
            "def_content": "SYNTAX:\t\t\tLD      A,16            ;\"Syntax error\""
        }
    ],
    "TAB": [
        {
            "def_file": "exec.asm",
            "def_line": 137,
            "def_content": "TAB:\t\t\tEQU     8AH"
        }
    ],
    "TABIT": [
        {
            "def_file": "exec.asm",
            "def_line": 2032,
            "def_content": "TABIT:\t\t\tLD      HL,COUNT"
        }
    ],
    "TAN": [
        {
            "def_file": "eval.asm",
            "def_line": 919,
            "def_content": "TAN:\t\t\tLD      A,31"
        }
    ],
    "TAND": [
        {
            "def_file": "exec.asm",
            "def_line": 130,
            "def_content": "TAND:\t\t\tEQU     80H"
        }
    ],
    "TAN_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 831,
            "def_content": "TAN_FP:\t\t\tCALL    SFLOAT_FP"
        }
    ],
    "TCALL": [
        {
            "def_file": "exec.asm",
            "def_line": 143,
            "def_content": "TCALL:\t\t\tEQU     D6H"
        }
    ],
    "TCMD_EV": [
        {
            "def_file": "eval.asm",
            "def_line": 163,
            "def_content": "TCMD_EV:\t\t\tEQU     FUNTBL_END-FUNTBL/3+FUNTOK ; reorder because ez80asm doesn't do order of operations"
        }
    ],
    "TCMD_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 142,
            "def_content": "TCMD_EX:\t\t\tEQU     C6H"
        }
    ],
    "TELL": [
        {
            "def_file": "main.asm",
            "def_line": 2140,
            "def_content": "TELL:\t\t\tEX      (SP), HL\t\t; Get the return address off the stack into HL, this is the"
        }
    ],
    "TERM": [
        {
            "def_file": "exec.asm",
            "def_line": 1985,
            "def_content": "TERM:\t\t\tCP      ';'             \t; Assembler terminator"
        }
    ],
    "TERM0": [
        {
            "def_file": "exec.asm",
            "def_line": 1994,
            "def_content": "TERM0:\t\t\tCP      ':'             \t; Assembler seperator"
        }
    ],
    "TERMQ": [
        {
            "def_file": "exec.asm",
            "def_line": 1991,
            "def_content": "TERMQ:\t\t\tCALL    NXT"
        }
    ],
    "TERROR_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 132,
            "def_content": "TERROR_EX:\t\t\tEQU     85H"
        }
    ],
    "TERROR_MN": [
        {
            "def_file": "main.asm",
            "def_line": 124,
            "def_content": "TERROR_MN:\t\t\tEQU     85H"
        }
    ],
    "TEST": [
        {
            "def_file": "eval.asm",
            "def_line": 1389,
            "def_content": "TEST:\t\t\tLD      A,H"
        }
    ],
    "TEST_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1844,
            "def_content": "TEST_FP:\t\t\tLD      A,H"
        }
    ],
    "TEXT_": [
        {
            "def_file": "main.asm",
            "def_line": 2123,
            "def_content": "TEXT_:\t\t\tLD      A, (HL)\t\t\t; Fetch the character"
        }
    ],
    "TGOSUB": [
        {
            "def_file": "exec.asm",
            "def_line": 146,
            "def_content": "TGOSUB:\t\t\tEQU     E4H"
        }
    ],
    "TGOTO": [
        {
            "def_file": "exec.asm",
            "def_line": 147,
            "def_content": "TGOTO:\t\t\tEQU     E5H"
        }
    ],
    "THEN_EX_": [
        {
            "def_file": "exec.asm",
            "def_line": 139,
            "def_content": "THEN_EX_:\t\t\tEQU     8CH"
        }
    ],
    "THEN_MN_": [
        {
            "def_file": "main.asm",
            "def_line": 127,
            "def_content": "THEN_MN_:\t\t\tEQU     8CH"
        }
    ],
    "TIF": [
        {
            "def_file": "main.asm",
            "def_line": 137,
            "def_content": "TIF:\t\t\tEQU     E7H"
        }
    ],
    "TIME0": [
        {
            "def_file": "eval.asm",
            "def_line": 816,
            "def_content": "TIME0:\t\t\tPUSH    DE"
        }
    ],
    "TIMEV": [
        {
            "def_file": "eval.asm",
            "def_line": 812,
            "def_content": "TIMEV:\t\t\tLD      A,(IY)"
        }
    ],
    "TIMEVS": [
        {
            "def_file": "eval.asm",
            "def_line": 826,
            "def_content": "TIMEVS:\t\t\tINC     IY              ;SKIP $"
        }
    ],
    "TIMEVS_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1416,
            "def_content": "TIMEVS_EX:\t\t\tINC     IY              ;SKIP '$'"
        }
    ],
    "TIMEV_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1406,
            "def_content": "TIMEV_EX:\t\t\tCP      '$'"
        }
    ],
    "TOKEN1": [
        {
            "def_file": "main.asm",
            "def_line": 1324,
            "def_content": "TOKEN1:\t\t\tLD      A,(HL)\t\t\t; Fetch the character"
        }
    ],
    "TOKHI": [
        {
            "def_file": "main.asm",
            "def_line": 164,
            "def_content": "TOKHI:\t\t\tEQU     93H\t\t\t; PTR, PAGE, TIME, LOMEM, HIMEM"
        }
    ],
    "TOKLO": [
        {
            "def_file": "main.asm",
            "def_line": 163,
            "def_content": "TOKLO:\t\t\tEQU     8FH\t\t\t; This defines the block of tokens that are pseudo-variables"
        }
    ],
    "TON": [
        {
            "def_file": "exec.asm",
            "def_line": 148,
            "def_content": "TON:\t\t\tEQU     EEH"
        }
    ],
    "TOOBIG": [
        {
            "def_file": "main.asm",
            "def_line": 1832,
            "def_content": "TOOBIG:\t\t\tLD      A,20"
        }
    ],
    "TOOBIG_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 44,
            "def_content": "TOOBIG_FP:\t\t\tEQU     20              ;Too big"
        }
    ],
    "TOOFAR": [
        {
            "def_file": "exec.asm",
            "def_line": 2511,
            "def_content": "TOOFAR:\t\t\tLD      A,1"
        }
    ],
    "TOP": [
        {
            "def_file": "ram.asm",
            "def_line": 73,
            "def_content": "TOP:            BLKB    3,0               ; First Location after User Program"
        }
    ],
    "TOPV": [
        {
            "def_file": "eval.asm",
            "def_line": 743,
            "def_content": "TOPV:\t\t\tLD      A,(IY)\t\t\t; Return the TOP system variable"
        }
    ],
    "TOR": [
        {
            "def_file": "exec.asm",
            "def_line": 131,
            "def_content": "TOR:\t\t\tEQU     84H"
        }
    ],
    "TO_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 141,
            "def_content": "TO_EX:\t\t\tEQU     B8H"
        }
    ],
    "TO_MN": [
        {
            "def_file": "main.asm",
            "def_line": 130,
            "def_content": "TO_MN:\t\t\tEQU     B8H"
        }
    ],
    "TPROC": [
        {
            "def_file": "exec.asm",
            "def_line": 149,
            "def_content": "TPROC:\t\t\tEQU     F2H"
        }
    ],
    "TRACE": [
        {
            "def_file": "main.asm",
            "def_line": 145,
            "def_content": "TRACE:\t\t\tEQU     FCH"
        }
    ],
    "TRACE0": [
        {
            "def_file": "exec.asm",
            "def_line": 1482,
            "def_content": "TRACE0:\t\t\tDEC     HL"
        }
    ],
    "TRACE1": [
        {
            "def_file": "exec.asm",
            "def_line": 1483,
            "def_content": "TRACE1:\t\t\tLD      (TRACEN),HL"
        }
    ],
    "TRACEN": [
        {
            "def_file": "ram.asm",
            "def_line": 79,
            "def_content": "TRACEN:         BLKB    3,0               ; Trace Flag"
        }
    ],
    "TRACE_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 1473,
            "def_content": "TRACE_EX:\t\t\tINC     IY"
        }
    ],
    "TRAP": [
        {
            "def_file": "patch.asm",
            "def_line": 268,
            "def_content": "TRAP:\t\t\tCALL\tESCTEST\t\t\t; Read keyboard, test for ESC, set FLAGS"
        }
    ],
    "TRUE": [
        {
            "def_file": "eval.asm",
            "def_line": 857,
            "def_content": "TRUE:\t\t\tLD      A,-1"
        }
    ],
    "TRUE_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 641,
            "def_content": "TRUE_FP:\t\t\tLD      HL,-1"
        }
    ],
    "TSTOP": [
        {
            "def_file": "exec.asm",
            "def_line": 150,
            "def_content": "TSTOP:\t\t\tEQU     FAH"
        }
    ],
    "TYPE_": [
        {
            "def_file": "main.asm",
            "def_line": 1729,
            "def_content": "TYPE_:\t\t\tLD      A,(IY-1)\t\t; Check the string type postfix"
        }
    ],
    "TYPE_EV_": [
        {
            "def_file": "eval.asm",
            "def_line": 404,
            "def_content": "TYPE_EV_:\t\t\tLD      A,6\t\t\t; Error: \"Type mismatch\""
        }
    ],
    "UINT": [
        {
            "def_file": "fpp.asm",
            "def_line": 1552,
            "def_content": "UINT:\t\t\tCALL    DIGITQ"
        }
    ],
    "UNSTK": [
        {
            "def_file": "exec.asm",
            "def_line": 1110,
            "def_content": "UNSTK:\t\t\tPOP     IX\t\t\t; Unstack a single local variable"
        }
    ],
    "UNSTK1": [
        {
            "def_file": "exec.asm",
            "def_line": 1122,
            "def_content": "UNSTK1:\t\t\tLD      HL,0\t\t\t; Unstack a string"
        }
    ],
    "UNTIL": [
        {
            "def_file": "main.asm",
            "def_line": 146,
            "def_content": "UNTIL:\t\t\tEQU     FDH"
        }
    ],
    "UNTIL_EX": [
        {
            "def_file": "exec.asm",
            "def_line": 790,
            "def_content": "UNTIL_EX:\t\t\tPOP     BC\t\t\t; Fetch the marker"
        }
    ],
    "UPPERC": [
        {
            "def_file": "misc.asm",
            "def_line": 105,
            "def_content": "UPPERC:  \t\tAND     7FH"
        }
    ],
    "UPPRC": [
        {
            "def_file": "patch.asm",
            "def_line": 364,
            "def_content": "UPPRC:  \t\tAND     7FH"
        }
    ],
    "USER": [
        {
            "def_file": "ram.asm",
            "def_line": 135,
            "def_content": "USER:\t\t\t\t\t\t\t; Must be aligned on a page boundary"
        }
    ],
    "USR": [
        {
            "def_file": "exec.asm",
            "def_line": 1600,
            "def_content": "USR:\t\t\tCALL    ITEMI\t\t\t; Evaluate the expression"
        }
    ],
    "USR1": [
        {
            "def_file": "exec.asm",
            "def_line": 1607,
            "def_content": "USR1:\t\t\tPUSH    HL              \t; Address on stack"
        }
    ],
    "USR2": [
        {
            "def_file": "exec.asm",
            "def_line": 1649,
            "def_content": "USR2:\t\t\tPOP     IY"
        }
    ],
    "VAL": [
        {
            "def_file": "eval.asm",
            "def_line": 989,
            "def_content": "VAL:\t\t\tCALL    ITEMS"
        }
    ],
    "VAL0": [
        {
            "def_file": "eval.asm",
            "def_line": 990,
            "def_content": "VAL0:\t\t\tXOR     A"
        }
    ],
    "VAL16": [
        {
            "def_file": "exec.asm",
            "def_line": 2741,
            "def_content": "VAL16:\t\t\tCALL    VAL8\t\t\t; Write out a 16-bit value (HL)"
        }
    ],
    "VAL24": [
        {
            "def_file": "exec.asm",
            "def_line": 2746,
            "def_content": "VAL24:\t\t\tCALL\tVAL16\t\t\t; Lower 16-bits are in HL"
        }
    ],
    "VAL8": [
        {
            "def_file": "exec.asm",
            "def_line": 2513,
            "def_content": "VAL8:\t\t\tLD      A,L"
        }
    ],
    "VAL_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 739,
            "def_content": "VAL_FP:\t\t\tCALL    SIGNQ"
        }
    ],
    "VAR_": [
        {
            "def_file": "exec.asm",
            "def_line": 382,
            "def_content": "VAR_:\t\t\tCALL    GETVAR"
        }
    ],
    "VBLANK_HANDLER": [
        {
            "def_file": "interrupts.asm",
            "def_line": 76,
            "def_content": "VBLANK_HANDLER:\t\tDI"
        }
    ],
    "VBLANK_HANDLER_JP": [
        {
            "def_file": "interrupts.asm",
            "def_line": 87,
            "def_content": "VBLANK_HANDLER_JP:\tJP\t\t0\t\t\t\t; This is self-modified by VBLANK_INIT"
        }
    ],
    "VBLANK_INIT": [
        {
            "def_file": "interrupts.asm",
            "def_line": 29,
            "def_content": "VBLANK_INIT:\t\tDI"
        }
    ],
    "VBLANK_STOP": [
        {
            "def_file": "interrupts.asm",
            "def_line": 42,
            "def_content": "VBLANK_STOP:\t\tDI"
        }
    ],
    "VDU": [
        {
            "def_file": "exec.asm",
            "def_line": 1515,
            "def_content": "VDU:"
        }
    ],
    "VDU4": [
        {
            "def_file": "exec.asm",
            "def_line": 1531,
            "def_content": "VDU4:\t\t\tJP      XEQ"
        }
    ],
    "VDU_BUFFER": [
        {
            "def_file": "ram.asm",
            "def_line": 109,
            "def_content": "VDU_BUFFER:\t\tEQU\tACCS\t\t; Storage for VDU commands"
        }
    ],
    "VPOS": [
        {
            "def_file": "eval.asm",
            "def_line": 687,
            "def_content": "VPOS:\t\t\tCALL    GETCSR\t\t\t; Return the vertical cursor position"
        }
    ],
    "WAIT_VBLANK": [
        {
            "def_file": "patch.asm",
            "def_line": 539,
            "def_content": "WAIT_VBLANK:\t\tPUSH \tIX\t\t\t; Wait for VBLANK interrupt"
        }
    ],
    "WARM": [
        {
            "def_file": "main.asm",
            "def_line": 223,
            "def_content": "WARM:\t\t\tDB \tF6H\t\t\t; Opcode for OR? Maybe to CCF (the following SCF will be the operand)"
        }
    ],
    "WARM0": [
        {
            "def_file": "main.asm",
            "def_line": 923,
            "def_content": "WARM0:\t\t\tJP      WARM\t\t\t; Jump back to the command loop"
        }
    ],
    "WARMNC": [
        {
            "def_file": "main.asm",
            "def_line": 665,
            "def_content": "WARMNC:\t\t\tJP      NC,WARM\t\t\t; If exceeded the terminating line number then jump to WARM"
        }
    ],
    "WIDTH": [
        {
            "def_file": "ram.asm",
            "def_line": 88,
            "def_content": "WIDTH:          BLKB    1,0               ; Print Width"
        }
    ],
    "WIDTHV": [
        {
            "def_file": "exec.asm",
            "def_line": 1463,
            "def_content": "WIDTHV:\t\t\tCALL    EXPRI"
        }
    ],
    "X10": [
        {
            "def_file": "fpp.asm",
            "def_line": 1960,
            "def_content": "X10:\t\t\tCALL    COPY0           ;DED'E'=HLH'L'"
        }
    ],
    "X10B": [
        {
            "def_file": "fpp.asm",
            "def_line": 1926,
            "def_content": "X10B:\t\t\tDEC     B"
        }
    ],
    "X2": [
        {
            "def_file": "fpp.asm",
            "def_line": 1967,
            "def_content": "X2:\t\t\tEXX"
        }
    ],
    "X4OR5": [
        {
            "def_file": "exec.asm",
            "def_line": 2155,
            "def_content": "X4OR5:\t\t\tCP      4\t\t\t; Check A = 4 (Z flag is used later)"
        }
    ],
    "X5": [
        {
            "def_file": "fpp.asm",
            "def_line": 1928,
            "def_content": "X5:\t\t\tCALL    COPY0"
        }
    ],
    "XEQ": [
        {
            "def_file": "exec.asm",
            "def_line": 249,
            "def_content": "XEQ:\t\t\tLD      (ERRLIN),IY     \t; Error pointer"
        }
    ],
    "XEQ0": [
        {
            "def_file": "exec.asm",
            "def_line": 248,
            "def_content": "XEQ0:\t\t\tCALL    NEWLIN"
        }
    ],
    "XEQ1": [
        {
            "def_file": "exec.asm",
            "def_line": 251,
            "def_content": "XEQ1:\t\t\tCALL    NXT"
        }
    ],
    "XEQ2": [
        {
            "def_file": "exec.asm",
            "def_line": 806,
            "def_content": "XEQ2:\t\t\tJP      XEQ\t\t\t; Continue execution"
        }
    ],
    "XEQR": [
        {
            "def_file": "exec.asm",
            "def_line": 366,
            "def_content": "XEQR:\t\t\tJP      XEQ"
        }
    ],
    "XTRAC1": [
        {
            "def_file": "exec.asm",
            "def_line": 2104,
            "def_content": "XTRAC1:\t\t\tLD      A,(IY)"
        }
    ],
    "XTRACT": [
        {
            "def_file": "exec.asm",
            "def_line": 2098,
            "def_content": "XTRACT:\t\t\tCALL    NXT"
        }
    ],
    "ZERO": [
        {
            "def_file": "eval.asm",
            "def_line": 1512,
            "def_content": "ZERO:\t\t\tLD      A,0"
        }
    ],
    "ZERO_FP": [
        {
            "def_file": "fpp.asm",
            "def_line": 1878,
            "def_content": "ZERO_FP:\t\t\tLD      A,0"
        }
    ],
    "_argv_ptrs": [
        {
            "def_file": "init.asm",
            "def_line": 160,
            "def_content": "_argv_ptrs:\t\tBLKP\targv_ptrs_max, 0\t; Storage for the argv array pointers"
        }
    ],
    "_basic_main": [
        {
            "def_file": "main.asm",
            "def_line": 173,
            "def_content": "_basic_main:\t\t\tLD\tHL, ACCS\t\t; Clear the ACCS"
        }
    ],
    "_clear_ram": [
        {
            "def_file": "init.asm",
            "def_line": 73,
            "def_content": "_clear_ram:\t\tPUSH\t\tBC"
        }
    ],
    "_end": [
        {
            "def_file": "init.asm",
            "def_line": 62,
            "def_content": "_end:\t\t\tLD\t\tSP, (_sps)\t\t; Restore the stack pointer"
        }
    ],
    "_exec_name": [
        {
            "def_file": "init.asm",
            "def_line": 34,
            "def_content": "_exec_name:\t\tDB\t\"BBCBASIC.BIN\", 0\t\t; The executable name, only used in argv"
        }
    ],
    "_get_token": [
        {
            "def_file": "init.asm",
            "def_line": 132,
            "def_content": "_get_token:\t\tLD\tC, 0\t\t\t; Initialise length"
        }
    ],
    "_parse_params": [
        {
            "def_file": "init.asm",
            "def_line": 90,
            "def_content": "_parse_params:\t\tLD\tBC, _exec_name"
        }
    ],
    "_parse_params_1": [
        {
            "def_file": "init.asm",
            "def_line": 100,
            "def_content": "_parse_params_1:"
        }
    ],
    "_skip_spaces": [
        {
            "def_file": "init.asm",
            "def_line": 151,
            "def_content": "_skip_spaces:\t\tLD\tA, (HL)\t\t\t; Get the character from the parameter string"
        }
    ],
    "_sps": [
        {
            "def_file": "init.asm",
            "def_line": 159,
            "def_content": "_sps:\t\t\tDS\t3\t\t\t; Storage for the stack pointer"
        }
    ],
    "_start": [
        {
            "def_file": "init.asm",
            "def_line": 44,
            "def_content": "_start:\t\t\tPUSH\t\tAF\t\t\t; Preserve the rest of the registers"
        }
    ],
    "argv_ptrs_max": [
        {
            "def_file": "init.asm",
            "def_line": 25,
            "def_content": "argv_ptrs_max:\t\tEQU\t16\t\t\t\t; Maximum number of arguments allowed in argv"
        }
    ],
    "end_binary": [
        {
            "def_file": "ram.asm",
            "def_line": 61,
            "def_content": "end_binary: ;  for assemble.py to know where to truncate the binary file"
        }
    ],
    "fa_create_always": [
        {
            "def_file": "mos_api.inc",
            "def_line": 138,
            "def_content": "fa_create_always:\tEQU\t08h"
        }
    ],
    "fa_create_new": [
        {
            "def_file": "mos_api.inc",
            "def_line": 137,
            "def_content": "fa_create_new:\t\tEQU\t04h"
        }
    ],
    "fa_open_always": [
        {
            "def_file": "mos_api.inc",
            "def_line": 139,
            "def_content": "fa_open_always:\t\tEQU\t10h"
        }
    ],
    "fa_open_append": [
        {
            "def_file": "mos_api.inc",
            "def_line": 140,
            "def_content": "fa_open_append:\t\tEQU\t30h"
        }
    ],
    "fa_open_existing": [
        {
            "def_file": "mos_api.inc",
            "def_line": 136,
            "def_content": "fa_open_existing:\tEQU\t00h"
        }
    ],
    "fa_read": [
        {
            "def_file": "mos_api.inc",
            "def_line": 134,
            "def_content": "fa_read:\t\tEQU\t01h"
        }
    ],
    "fa_write": [
        {
            "def_file": "mos_api.inc",
            "def_line": 135,
            "def_content": "fa_write:\t\tEQU\t02h"
        }
    ],
    "ffs_chdir": [
        {
            "def_file": "mos_api.inc",
            "def_line": 118,
            "def_content": "ffs_chdir:\t\tEQU\t9Ch"
        }
    ],
    "ffs_chdrive": [
        {
            "def_file": "mos_api.inc",
            "def_line": 119,
            "def_content": "ffs_chdrive:\t\tEQU\t9Dh"
        }
    ],
    "ffs_chmod": [
        {
            "def_file": "mos_api.inc",
            "def_line": 115,
            "def_content": "ffs_chmod:\t\tEQU\t99h"
        }
    ],
    "ffs_dclose": [
        {
            "def_file": "mos_api.inc",
            "def_line": 105,
            "def_content": "ffs_dclose:\t\tEQU\t92h"
        }
    ],
    "ffs_dfindfirst": [
        {
            "def_file": "mos_api.inc",
            "def_line": 107,
            "def_content": "ffs_dfindfirst:\t\tEQU\t94h"
        }
    ],
    "ffs_dfindnext": [
        {
            "def_file": "mos_api.inc",
            "def_line": 108,
            "def_content": "ffs_dfindnext:\t\tEQU\t95h"
        }
    ],
    "ffs_dopen": [
        {
            "def_file": "mos_api.inc",
            "def_line": 104,
            "def_content": "ffs_dopen:\t\tEQU\t91h"
        }
    ],
    "ffs_dread": [
        {
            "def_file": "mos_api.inc",
            "def_line": 106,
            "def_content": "ffs_dread:\t\tEQU\t93h"
        }
    ],
    "ffs_fclose": [
        {
            "def_file": "mos_api.inc",
            "def_line": 85,
            "def_content": "ffs_fclose:\t\tEQU\t81h"
        }
    ],
    "ffs_fdisk": [
        {
            "def_file": "mos_api.inc",
            "def_line": 126,
            "def_content": "ffs_fdisk:\t\tEQU\tA1h"
        }
    ],
    "ffs_feof": [
        {
            "def_file": "mos_api.inc",
            "def_line": 98,
            "def_content": "ffs_feof:\t\tEQU\t8Eh"
        }
    ],
    "ffs_ferror": [
        {
            "def_file": "mos_api.inc",
            "def_line": 100,
            "def_content": "ffs_ferror:\t\tEQU\t90h"
        }
    ],
    "ffs_fexpand": [
        {
            "def_file": "mos_api.inc",
            "def_line": 92,
            "def_content": "ffs_fexpand:\t\tEQU\t88h"
        }
    ],
    "ffs_fforward": [
        {
            "def_file": "mos_api.inc",
            "def_line": 91,
            "def_content": "ffs_fforward:\t\tEQU\t87h"
        }
    ],
    "ffs_fgets": [
        {
            "def_file": "mos_api.inc",
            "def_line": 93,
            "def_content": "ffs_fgets:\t\tEQU\t89h"
        }
    ],
    "ffs_flseek": [
        {
            "def_file": "mos_api.inc",
            "def_line": 88,
            "def_content": "ffs_flseek:\t\tEQU\t84h"
        }
    ],
    "ffs_fopen": [
        {
            "def_file": "mos_api.inc",
            "def_line": 84,
            "def_content": "ffs_fopen:\t\tEQU\t80h"
        }
    ],
    "ffs_fprintf": [
        {
            "def_file": "mos_api.inc",
            "def_line": 96,
            "def_content": "ffs_fprintf:\t\tEQU\t8Ch"
        }
    ],
    "ffs_fputc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 94,
            "def_content": "ffs_fputc:\t\tEQU\t8Ah"
        }
    ],
    "ffs_fputs": [
        {
            "def_file": "mos_api.inc",
            "def_line": 95,
            "def_content": "ffs_fputs:\t\tEQU\t8Bh"
        }
    ],
    "ffs_fread": [
        {
            "def_file": "mos_api.inc",
            "def_line": 86,
            "def_content": "ffs_fread:\t\tEQU\t82h"
        }
    ],
    "ffs_fsize": [
        {
            "def_file": "mos_api.inc",
            "def_line": 99,
            "def_content": "ffs_fsize:\t\tEQU\t8Fh"
        }
    ],
    "ffs_fsync": [
        {
            "def_file": "mos_api.inc",
            "def_line": 90,
            "def_content": "ffs_fsync:\t\tEQU\t86h"
        }
    ],
    "ffs_ftell": [
        {
            "def_file": "mos_api.inc",
            "def_line": 97,
            "def_content": "ffs_ftell:\t\tEQU\t8Dh"
        }
    ],
    "ffs_ftruncate": [
        {
            "def_file": "mos_api.inc",
            "def_line": 89,
            "def_content": "ffs_ftruncate:\t\tEQU\t85h"
        }
    ],
    "ffs_fwrite": [
        {
            "def_file": "mos_api.inc",
            "def_line": 87,
            "def_content": "ffs_fwrite:\t\tEQU\t83h"
        }
    ],
    "ffs_getcwd": [
        {
            "def_file": "mos_api.inc",
            "def_line": 120,
            "def_content": "ffs_getcwd:\t\tEQU\t9Eh"
        }
    ],
    "ffs_getfree": [
        {
            "def_file": "mos_api.inc",
            "def_line": 127,
            "def_content": "ffs_getfree:\t\tEQU\tA2h"
        }
    ],
    "ffs_getlabel": [
        {
            "def_file": "mos_api.inc",
            "def_line": 128,
            "def_content": "ffs_getlabel:\t\tEQU\tA3h"
        }
    ],
    "ffs_mkdir": [
        {
            "def_file": "mos_api.inc",
            "def_line": 117,
            "def_content": "ffs_mkdir:\t\tEQU\t9Bh"
        }
    ],
    "ffs_mkfs": [
        {
            "def_file": "mos_api.inc",
            "def_line": 125,
            "def_content": "ffs_mkfs:\t\tEQU\tA0h"
        }
    ],
    "ffs_mount": [
        {
            "def_file": "mos_api.inc",
            "def_line": 124,
            "def_content": "ffs_mount:\t\tEQU\t9Fh"
        }
    ],
    "ffs_rename": [
        {
            "def_file": "mos_api.inc",
            "def_line": 114,
            "def_content": "ffs_rename:\t\tEQU\t98h"
        }
    ],
    "ffs_setcp": [
        {
            "def_file": "mos_api.inc",
            "def_line": 130,
            "def_content": "ffs_setcp:\t\tEQU\tA5h"
        }
    ],
    "ffs_setlabel": [
        {
            "def_file": "mos_api.inc",
            "def_line": 129,
            "def_content": "ffs_setlabel:\t\tEQU\tA4h"
        }
    ],
    "ffs_stat": [
        {
            "def_file": "mos_api.inc",
            "def_line": 112,
            "def_content": "ffs_stat:\t\tEQU\t96h"
        }
    ],
    "ffs_unlink": [
        {
            "def_file": "mos_api.inc",
            "def_line": 113,
            "def_content": "ffs_unlink:\t\tEQU\t97h"
        }
    ],
    "ffs_utime": [
        {
            "def_file": "mos_api.inc",
            "def_line": 116,
            "def_content": "ffs_utime:\t\tEQU\t9Ah"
        }
    ],
    "lbl1": [
        {
            "def_file": "tmp1.asm",
            "def_line": 1,
            "def_content": "lbl1:"
        }
    ],
    "lbl2": [
        {
            "def_file": "tmp2.asm",
            "def_line": 1,
            "def_content": "lbl2:"
        }
    ],
    "lbl3": [
        {
            "def_file": "tmp3.asm",
            "def_line": 1,
            "def_content": "lbl3:"
        }
    ],
    "mos_cd": [
        {
            "def_file": "mos_api.inc",
            "def_line": 48,
            "def_content": "mos_cd:\t\t\tEQU\t03h"
        }
    ],
    "mos_copy": [
        {
            "def_file": "mos_api.inc",
            "def_line": 62,
            "def_content": "mos_copy:\t\tEQU\t11h"
        }
    ],
    "mos_del": [
        {
            "def_file": "mos_api.inc",
            "def_line": 50,
            "def_content": "mos_del:\t\tEQU\t05h"
        }
    ],
    "mos_dir": [
        {
            "def_file": "mos_api.inc",
            "def_line": 49,
            "def_content": "mos_dir:\t\tEQU\t04h"
        }
    ],
    "mos_editline": [
        {
            "def_file": "mos_api.inc",
            "def_line": 54,
            "def_content": "mos_editline:\t\tEQU\t09h"
        }
    ],
    "mos_fclose": [
        {
            "def_file": "mos_api.inc",
            "def_line": 56,
            "def_content": "mos_fclose:\t\tEQU\t0Bh"
        }
    ],
    "mos_feof": [
        {
            "def_file": "mos_api.inc",
            "def_line": 59,
            "def_content": "mos_feof:\t\tEQU\t0Eh"
        }
    ],
    "mos_fgetc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 57,
            "def_content": "mos_fgetc:\t\tEQU\t0Ch"
        }
    ],
    "mos_flseek": [
        {
            "def_file": "mos_api.inc",
            "def_line": 73,
            "def_content": "mos_flseek:\t\tEQU\t1Ch"
        }
    ],
    "mos_fopen": [
        {
            "def_file": "mos_api.inc",
            "def_line": 55,
            "def_content": "mos_fopen:\t\tEQU\t0Ah"
        }
    ],
    "mos_fputc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 58,
            "def_content": "mos_fputc:\t\tEQU\t0Dh"
        }
    ],
    "mos_fread": [
        {
            "def_file": "mos_api.inc",
            "def_line": 71,
            "def_content": "mos_fread:\t\tEQU\t1Ah"
        }
    ],
    "mos_fwrite": [
        {
            "def_file": "mos_api.inc",
            "def_line": 72,
            "def_content": "mos_fwrite:\t\tEQU\t1Bh"
        }
    ],
    "mos_getError": [
        {
            "def_file": "mos_api.inc",
            "def_line": 60,
            "def_content": "mos_getError:\t\tEQU\t0Fh"
        }
    ],
    "mos_getfil": [
        {
            "def_file": "mos_api.inc",
            "def_line": 70,
            "def_content": "mos_getfil:\t\tEQU\t19h"
        }
    ],
    "mos_getkbmap": [
        {
            "def_file": "mos_api.inc",
            "def_line": 75,
            "def_content": "mos_getkbmap:\t\tEQU\t1Eh"
        }
    ],
    "mos_getkey": [
        {
            "def_file": "mos_api.inc",
            "def_line": 45,
            "def_content": "mos_getkey:\t\tEQU\t00h"
        }
    ],
    "mos_getrtc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 63,
            "def_content": "mos_getrtc:\t\tEQU\t12h"
        }
    ],
    "mos_i2c_close": [
        {
            "def_file": "mos_api.inc",
            "def_line": 77,
            "def_content": "mos_i2c_close:\t\tEQU\t20h"
        }
    ],
    "mos_i2c_open": [
        {
            "def_file": "mos_api.inc",
            "def_line": 76,
            "def_content": "mos_i2c_open:\t\tEQU\t1Fh"
        }
    ],
    "mos_i2c_read": [
        {
            "def_file": "mos_api.inc",
            "def_line": 79,
            "def_content": "mos_i2c_read:\t\tEQU\t22h"
        }
    ],
    "mos_i2c_write": [
        {
            "def_file": "mos_api.inc",
            "def_line": 78,
            "def_content": "mos_i2c_write:\t\tEQU\t21h"
        }
    ],
    "mos_load": [
        {
            "def_file": "mos_api.inc",
            "def_line": 46,
            "def_content": "mos_load:\t\tEQU\t01h"
        }
    ],
    "mos_mkdir": [
        {
            "def_file": "mos_api.inc",
            "def_line": 52,
            "def_content": "mos_mkdir:\t\tEQU\t07h"
        }
    ],
    "mos_oscli": [
        {
            "def_file": "mos_api.inc",
            "def_line": 61,
            "def_content": "mos_oscli:\t\tEQU\t10h"
        }
    ],
    "mos_ren": [
        {
            "def_file": "mos_api.inc",
            "def_line": 51,
            "def_content": "mos_ren:\t\tEQU\t06h"
        }
    ],
    "mos_save": [
        {
            "def_file": "mos_api.inc",
            "def_line": 47,
            "def_content": "mos_save:\t\tEQU\t02h"
        }
    ],
    "mos_setintvector": [
        {
            "def_file": "mos_api.inc",
            "def_line": 65,
            "def_content": "mos_setintvector:\tEQU\t14h"
        }
    ],
    "mos_setkbvector": [
        {
            "def_file": "mos_api.inc",
            "def_line": 74,
            "def_content": "mos_setkbvector:\tEQU\t1Dh"
        }
    ],
    "mos_setrtc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 64,
            "def_content": "mos_setrtc:\t\tEQU\t13h"
        }
    ],
    "mos_sysvars": [
        {
            "def_file": "mos_api.inc",
            "def_line": 53,
            "def_content": "mos_sysvars:\t\tEQU\t08h"
        }
    ],
    "mos_uclose": [
        {
            "def_file": "mos_api.inc",
            "def_line": 67,
            "def_content": "mos_uclose:\t\tEQU\t16h"
        }
    ],
    "mos_ugetc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 68,
            "def_content": "mos_ugetc:\t\tEQU\t17h"
        }
    ],
    "mos_uopen": [
        {
            "def_file": "mos_api.inc",
            "def_line": 66,
            "def_content": "mos_uopen:\t\tEQU\t15h"
        }
    ],
    "mos_uputc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 69,
            "def_content": "mos_uputc:\t\tEQU \t18h"
        }
    ],
    "sysvar_audioChannel": [
        {
            "def_file": "mos_api.inc",
            "def_line": 153,
            "def_content": "sysvar_audioChannel:\tEQU\t0Dh\t; 1: Audio channel"
        }
    ],
    "sysvar_audioSuccess": [
        {
            "def_file": "mos_api.inc",
            "def_line": 154,
            "def_content": "sysvar_audioSuccess:\tEQU\t0Eh\t; 1: Audio channel note queued (0 = no, 1 = yes)"
        }
    ],
    "sysvar_cursorX": [
        {
            "def_file": "mos_api.inc",
            "def_line": 149,
            "def_content": "sysvar_cursorX:\t\tEQU\t07h\t; 1: Cursor X position"
        }
    ],
    "sysvar_cursorY": [
        {
            "def_file": "mos_api.inc",
            "def_line": 150,
            "def_content": "sysvar_cursorY:\t\tEQU\t08h\t; 1: Cursor Y position"
        }
    ],
    "sysvar_keyascii": [
        {
            "def_file": "mos_api.inc",
            "def_line": 147,
            "def_content": "sysvar_keyascii:\tEQU\t05h\t; 1: ASCII keycode, or 0 if no key is pressed"
        }
    ],
    "sysvar_keydelay": [
        {
            "def_file": "mos_api.inc",
            "def_line": 166,
            "def_content": "sysvar_keydelay:\tEQU\t22h\t; 2: Keyboard repeat delay"
        }
    ],
    "sysvar_keyled": [
        {
            "def_file": "mos_api.inc",
            "def_line": 168,
            "def_content": "sysvar_keyled:\t\tEQU\t26h\t; 1: Keyboard LED status"
        }
    ],
    "sysvar_keymods": [
        {
            "def_file": "mos_api.inc",
            "def_line": 148,
            "def_content": "sysvar_keymods:\t\tEQU\t06h\t; 1: Keycode modifiers"
        }
    ],
    "sysvar_keyrate": [
        {
            "def_file": "mos_api.inc",
            "def_line": 167,
            "def_content": "sysvar_keyrate:\t\tEQU\t24h\t; 2: Keyboard repeat reat"
        }
    ],
    "sysvar_mouseButtons": [
        {
            "def_file": "mos_api.inc",
            "def_line": 173,
            "def_content": "sysvar_mouseButtons:\tEQU\t2Dh\t; 1: Mouse button state"
        }
    ],
    "sysvar_mouseWheel": [
        {
            "def_file": "mos_api.inc",
            "def_line": 174,
            "def_content": "sysvar_mouseWheel:\tEQU\t2Eh\t; 1: Mouse wheel delta"
        }
    ],
    "sysvar_mouseX": [
        {
            "def_file": "mos_api.inc",
            "def_line": 171,
            "def_content": "sysvar_mouseX:\t\tEQU\t29h\t; 2: Mouse X position"
        }
    ],
    "sysvar_mouseXDelta": [
        {
            "def_file": "mos_api.inc",
            "def_line": 175,
            "def_content": "sysvar_mouseXDelta:\tEQU\t2Fh\t; 2: Mouse X delta"
        }
    ],
    "sysvar_mouseY": [
        {
            "def_file": "mos_api.inc",
            "def_line": 172,
            "def_content": "sysvar_mouseY:\t\tEQU\t2Bh\t; 2: Mouse Y position"
        }
    ],
    "sysvar_mouseYDelta": [
        {
            "def_file": "mos_api.inc",
            "def_line": 176,
            "def_content": "sysvar_mouseYDelta:\tEQU\t31h\t; 2: Mouse Y delta"
        }
    ],
    "sysvar_rtc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 164,
            "def_content": "sysvar_rtc:\t\tEQU\t1Ah\t; 6: Real time clock data"
        }
    ],
    "sysvar_rtcEnable": [
        {
            "def_file": "mos_api.inc",
            "def_line": 170,
            "def_content": "sysvar_rtcEnable:\tEQU\t28h\t; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)"
        }
    ],
    "sysvar_scrColours": [
        {
            "def_file": "mos_api.inc",
            "def_line": 159,
            "def_content": "sysvar_scrColours:\tEQU\t15h\t; 1: Number of colours displayed"
        }
    ],
    "sysvar_scrCols": [
        {
            "def_file": "mos_api.inc",
            "def_line": 157,
            "def_content": "sysvar_scrCols:\t\tEQU\t13h\t; 1: Screen columns in characters"
        }
    ],
    "sysvar_scrHeight": [
        {
            "def_file": "mos_api.inc",
            "def_line": 156,
            "def_content": "sysvar_scrHeight:\tEQU\t11h\t; 2: Screen height in pixels"
        }
    ],
    "sysvar_scrMode": [
        {
            "def_file": "mos_api.inc",
            "def_line": 169,
            "def_content": "sysvar_scrMode:\t\tEQU\t27h\t; 1: Screen mode"
        }
    ],
    "sysvar_scrRows": [
        {
            "def_file": "mos_api.inc",
            "def_line": 158,
            "def_content": "sysvar_scrRows:\t\tEQU\t14h\t; 1: Screen rows in characters"
        }
    ],
    "sysvar_scrWidth": [
        {
            "def_file": "mos_api.inc",
            "def_line": 155,
            "def_content": "sysvar_scrWidth:\tEQU\t0Fh\t; 2: Screen width in pixels"
        }
    ],
    "sysvar_scrchar": [
        {
            "def_file": "mos_api.inc",
            "def_line": 151,
            "def_content": "sysvar_scrchar:\t\tEQU\t09h\t; 1: Character read from screen"
        }
    ],
    "sysvar_scrpixel": [
        {
            "def_file": "mos_api.inc",
            "def_line": 152,
            "def_content": "sysvar_scrpixel:\tEQU\t0Ah\t; 3: Pixel data read from screen (R,B,G)"
        }
    ],
    "sysvar_scrpixelIndex": [
        {
            "def_file": "mos_api.inc",
            "def_line": 160,
            "def_content": "sysvar_scrpixelIndex:\tEQU\t16h\t; 1: Index of pixel data read from screen"
        }
    ],
    "sysvar_spare": [
        {
            "def_file": "mos_api.inc",
            "def_line": 165,
            "def_content": "sysvar_spare:\t\tEQU\t20h\t; 2: Spare, previously used by rtc"
        }
    ],
    "sysvar_time": [
        {
            "def_file": "mos_api.inc",
            "def_line": 145,
            "def_content": "sysvar_time:\t\tEQU\t00h\t; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)"
        }
    ],
    "sysvar_vkeycode": [
        {
            "def_file": "mos_api.inc",
            "def_line": 161,
            "def_content": "sysvar_vkeycode:\tEQU\t17h\t; 1: Virtual key code from FabGL"
        }
    ],
    "sysvar_vkeycount": [
        {
            "def_file": "mos_api.inc",
            "def_line": 163,
            "def_content": "sysvar_vkeycount:\tEQU\t19h\t; 1: Incremented every time a key packet is received"
        }
    ],
    "sysvar_vkeydown": [
        {
            "def_file": "mos_api.inc",
            "def_line": 162,
            "def_content": "sysvar_vkeydown:\tEQU\t18h\t; 1: Virtual key state from FabGL (0=up, 1=down)"
        }
    ],
    "sysvar_vpd_pflags": [
        {
            "def_file": "mos_api.inc",
            "def_line": 146,
            "def_content": "sysvar_vpd_pflags:\tEQU\t04h\t; 1: Flags to indicate completion of VDP commands"
        }
    ],
    "vdp_audio": [
        {
            "def_file": "mos_api.inc",
            "def_line": 36,
            "def_content": "vdp_audio:\t\tEQU\t85h"
        }
    ],
    "vdp_cursor": [
        {
            "def_file": "mos_api.inc",
            "def_line": 33,
            "def_content": "vdp_cursor:\t\tEQU\t82h"
        }
    ],
    "vdp_gp": [
        {
            "def_file": "mos_api.inc",
            "def_line": 31,
            "def_content": "vdp_gp:\t\t\tEQU \t80h"
        }
    ],
    "vdp_keycode": [
        {
            "def_file": "mos_api.inc",
            "def_line": 32,
            "def_content": "vdp_keycode:\t\tEQU \t81h"
        }
    ],
    "vdp_keystate": [
        {
            "def_file": "mos_api.inc",
            "def_line": 39,
            "def_content": "vdp_keystate:\t\tEQU\t88h"
        }
    ],
    "vdp_logicalcoords": [
        {
            "def_file": "mos_api.inc",
            "def_line": 40,
            "def_content": "vdp_logicalcoords:\tEQU\tC0h"
        }
    ],
    "vdp_mode": [
        {
            "def_file": "mos_api.inc",
            "def_line": 37,
            "def_content": "vdp_mode:\t\tEQU\t86h"
        }
    ],
    "vdp_pflag_audio": [
        {
            "def_file": "mos_api.inc",
            "def_line": 183,
            "def_content": "vdp_pflag_audio:\tEQU\t00001000b"
        }
    ],
    "vdp_pflag_cursor": [
        {
            "def_file": "mos_api.inc",
            "def_line": 180,
            "def_content": "vdp_pflag_cursor:\tEQU\t00000001b"
        }
    ],
    "vdp_pflag_mode": [
        {
            "def_file": "mos_api.inc",
            "def_line": 184,
            "def_content": "vdp_pflag_mode:\t\tEQU\t00010000b"
        }
    ],
    "vdp_pflag_mouse": [
        {
            "def_file": "mos_api.inc",
            "def_line": 186,
            "def_content": "vdp_pflag_mouse:\tEQU\t01000000b"
        }
    ],
    "vdp_pflag_point": [
        {
            "def_file": "mos_api.inc",
            "def_line": 182,
            "def_content": "vdp_pflag_point:\tEQU\t00000100b"
        }
    ],
    "vdp_pflag_rtc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 185,
            "def_content": "vdp_pflag_rtc:\t\tEQU\t00100000b"
        }
    ],
    "vdp_pflag_scrchar": [
        {
            "def_file": "mos_api.inc",
            "def_line": 181,
            "def_content": "vdp_pflag_scrchar:\tEQU\t00000010b"
        }
    ],
    "vdp_rtc": [
        {
            "def_file": "mos_api.inc",
            "def_line": 38,
            "def_content": "vdp_rtc:\t\tEQU\t87h"
        }
    ],
    "vdp_scrchar": [
        {
            "def_file": "mos_api.inc",
            "def_line": 34,
            "def_content": "vdp_scrchar:\t\tEQU\t83h"
        }
    ],
    "vdp_scrpixel": [
        {
            "def_file": "mos_api.inc",
            "def_line": 35,
            "def_content": "vdp_scrpixel:\t\tEQU\t84h"
        }
    ],
    "vdp_terminalmode": [
        {
            "def_file": "mos_api.inc",
            "def_line": 41,
            "def_content": "vdp_terminalmode:\tEQU\tFFh"
        }
    ]
}