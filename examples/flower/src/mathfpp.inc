; integer operations		
iand:	EQU 58	; AND (INTEGER)
ibdiv:	EQU 59	; DIV
ieor:	EQU 60	; EOR
imod:	EQU 61	; MOD
ior:	EQU 62	; OR
ile:	EQU 63	; <=
ine:	EQU 64	; <>
ige:	EQU 65	; >=
ilt:	EQU 66	; <
ieq:	EQU 67	; =
imul:	EQU 68	; *
iadd:	EQU 69	; +
igt:	EQU 70	; >
isub:	EQU 71	; -
ipow:	EQU 72	; ^
idiv:	EQU 73	; /
;		
; floating point functions		
absv:	EQU 16	; ABS
acs:	EQU 17	; ACS
asn:	EQU 18	; ASN
atn:	EQU 19	; ATN
cos:	EQU 20	; COS
deg:	EQU 21	; DEG
exp:	EQU 22	; EXP
int_:	EQU 23	; INT
ln:	EQU 24	; LN
log:	EQU 25	; LOG
notk:	EQU 26	; NOT
rad:	EQU 27	; RAD
sgn:	EQU 28	; SGN
sin:	EQU 29	; SIN
sqr:	EQU 30	; SQR
tan:	EQU 31	; TAN
zero:	EQU 32	; ZERO
fone:	EQU 33	; FONE
true:	EQU 34	; TRUE
pi:	EQU 35	; PI
val:	EQU 36	; VAL
str:	EQU 37	; STR$
sfix:	EQU 38	; FIX
sfloat:	EQU 39	; FLOAT
ftest:	EQU 40	; TEST
fcomp:	EQU 41	; COMPARE
;		
; floating point operations		
fand:	EQU  0	; AND (FLOATING-POINT)
fbdiv:	EQU  1	; DIV
feor:	EQU  2	; EOR
fmod:	EQU  3	; MOD
ffor:	EQU  4	; OR
fle:	EQU  5	; <=
fne:	EQU  6	; <>
fge:	EQU  7	; >=
flt:	EQU  8	; <
feq:	EQU  9	; =
fmul:	EQU 10	; *
fadd:	EQU 11	; +
fgt:	EQU 12	; >
fsub:	EQU 13	; -
fpow:	EQU 14	; ^
fdiv:	EQU 15	; /