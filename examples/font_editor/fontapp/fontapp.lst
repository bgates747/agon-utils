PC     Output      Line
040000             0001       assume adl=1
040000             0002       org 0x040000
040000             0003   
040000             0004   ; mos_api.inc
040000             0005   mos_fopen:			EQU	0Ah
040000             0006   fa_read:			EQU	01h
040000             0007   mos_fread:			EQU	1Ah
040000             0008   mos_fclose:			EQU	0Bh
040000             0009   
040000             0010   
040000             0011   ; Macro for calling the API
040000             0012   ; Parameters:
040000             0013   ; - function: One of the function numbers listed above
040000             0014   ;
040000             0015   	MACRO	MOSCALL	function
040000             0016   			LD	A, function
040000             0017   			RST.LIL	08h
040000             0018   	ENDMACRO
040000             0019   
040000 C3 45 00 04 0020       jp start
040004 FF FF FF FF 0021       align 64
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
040040 4D 4F 53    0022       db "MOS"
040043 00          0023       db 00h
040044 01          0024       db 01h
040045             0025   
040045             0026   start:
040045 F5          0027       push af
040046 C5          0028       push bc
040047 D5          0029       push de
040048 DD E5       0030       push ix
04004A FD E5       0031       push iy
04004C             0032   
04004C CD 5C 00 04 0033       call main
040050             0034   
040050             0035   exit:
040050 FD E1       0036       pop iy
040052 DD E1       0037       pop ix
040054 D1          0038       pop de
040055 C1          0039       pop bc
040056 F1          0040       pop af
040057 21 00 00 00 0041       ld hl,0
04005B             0042   
04005B C9          0043       ret
04005C             0044   
04005C             0045   ; --- MAIN PROGRAM FILE ---
04005C             0046   main:
04005C             0047   ; set screen mode
04005C 3E 12       0048       ld a,18   ; 1024  768   2     60hz single-buffered
04005E CD 31 07 04 0049       call vdu_set_screen_mode
040062             0050   ; clear the screen
040062 CD 42 07 04 0051       call vdu_cls
040066             0052   ; clear all buffers
040066 CD F7 08 04 0053       call vdu_clear_all_buffers
04006A             0054   ; load fonts
04006A CD 3F 06 04 0055   	call fonts_load
04006E             0056   ; select font
04006E 21 0F FA 00 0057       ld hl,Lat2_VGA16_8x16
040072 3E 01       0058       ld a,1 ; flags
040074 CD 7B 06 04 0059       call vdu_font_select
040078             0060   ; show selected font
040078 CD 0E 07 04 0061       call printInline
04007C 0D 0A 0D 0A 0062       db 13,10,13,10
040080 20 21 22 23 0063       db 32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,13,10
       24 25 26 27 
       28 29 2A 2B 
       2C 2D 2E 2F 
       0D 0A       
040092 30 31 32 33 0064       db 48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,13,10
       34 35 36 37 
       38 39 3A 3B 
       3C 3D 3E 3F 
       0D 0A       
0400A4 40 41 42 43 0065       db 64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,13,10
       44 45 46 47 
       48 49 4A 4B 
       4C 4D 4E 4F 
       0D 0A       
0400B6 50 51 52 53 0066       db 80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,13,10
       54 55 56 57 
       58 59 5A 5B 
       5C 5D 5E 5F 
       0D 0A       
0400C8 60 61 62 63 0067       db 96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,13,10
       64 65 66 67 
       68 69 6A 6B 
       6C 6D 6E 6F 
       0D 0A       
0400DA 70 71 72 73 0068       db 112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,13,10
       74 75 76 77 
       78 79 7A 7B 
       7C 7D 7E 7F 
       0D 0A       
0400EC 80 81 82 83 0069       db 128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,13,10
       84 85 86 87 
       88 89 8A 8B 
       8C 8D 8E 8F 
       0D 0A       
0400FE 90 91 92 93 0070       db 144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,13,10
       94 95 96 97 
       98 99 9A 9B 
       9C 9D 9E 9F 
       0D 0A       
040110 A0 A1 A2 A3 0071       db 160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,13,10
       A4 A5 A6 A7 
       A8 A9 AA AB 
       AC AD AE AF 
       0D 0A       
040122 B0 B1 B2 B3 0072       db 176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,13,10
       B4 B5 B6 B7 
       B8 B9 BA BB 
       BC BD BE BF 
       0D 0A       
040134 C0 C1 C2 C3 0073       db 192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,13,10
       C4 C5 C6 C7 
       C8 C9 CA CB 
       CC CD CE CF 
       0D 0A       
040146 D0 D1 D2 D3 0074       db 208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,13,10
       D4 D5 D6 D7 
       D8 D9 DA DB 
       DC DD DE DF 
       0D 0A       
040158 E0 E1 E2 E3 0075       db 224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,13,10
       E4 E5 E6 E7 
       E8 E9 EA EB 
       EC ED EE EF 
       0D 0A       
04016A F0 F1 F2 F3 0076       db 240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,13,10,13,10
       F4 F5 F6 F7 
       F8 F9 FA FB 
       FC FD FE FF 
       0D 0A 0D 0A 
04017E 00          0077       db 0 ; string terminator
04017F C9          0078       ret
040180             0079   ; end main
040180             0080   
040180             0081   ; fonts_list.inc
040180             0082   ; Generated by asm_config_editor.py
040180             0083   font_list_record_size: equ 12
040180             0084   font_list_width: equ 0
040180             0085   font_list_height: equ 3
040180             0086   font_list_bufferId: equ 6
040180             0087   font_list_filename: equ 9
040180             0088   
040180             0089   num_fonts: equ 29
040180             0090   
040180             0091   ; Font bufferId's list:
040180             0092   amiga_forever_16x16: equ 64000
040180             0093   amiga_forever_16x24: equ 64001
040180             0094   amiga_forever_8x16: equ 64002
040180             0095   amiga_forever_8x8: equ 64003
040180             0096   computer_pixel_7_10x15: equ 64004
040180             0097   computer_pixel_7_10x24: equ 64005
040180             0098   computer_pixel_7_8x12: equ 64006
040180             0099   computer_pixel_7_8x14: equ 64007
040180             0100   computer_pixel_7_8x16: equ 64008
040180             0101   dopecre_8x8: equ 64009
040180             0102   gamer_2_8x8: equ 64010
040180             0103   Lat15_VGA8_8x8: equ 64011
040180             0104   Lat2_Terminus12x6_6x12: equ 64012
040180             0105   Lat2_TerminusBold14_8x14: equ 64013
040180             0106   Lat2_VGA14_8x14: equ 64014
040180             0107   Lat2_VGA16_8x16: equ 64015
040180             0108   Lat2_VGA8_8x8: equ 64016
040180             0109   Lat38_VGA8_8x8: equ 64017
040180             0110   Lat7_Fixed13_8x13: equ 64018
040180             0111   Lat7_Terminus12x6_6x12: equ 64019
040180             0112   Lat7_TerminusBold16_8x16: equ 64020
040180             0113   Lat7_VGA14_8x14: equ 64021
040180             0114   Lat7_VGA16_8x16: equ 64022
040180             0115   Lat7_VGA8_8x8: equ 64023
040180             0116   planetary_contact_8x8: equ 64024
040180             0117   scriptorium_12x14: equ 64025
040180             0118   Squarewave_Bold_8x12: equ 64026
040180             0119   super_mario_bros_2_8x8: equ 64027
040180             0120   wendy_neue_6x6: equ 64028
040180             0121   
040180             0122   font_list: ; width; height; bufferId; filename;:
040180 10 00 00 10 0123   	dl 16, 16, 64000, fn_amiga_forever_16x16
       00 00 00 FA 
       00 DC 02 04 
04018C 10 00 00 18 0124   	dl 16, 24, 64001, fn_amiga_forever_16x24
       00 00 01 FA 
       00 FB 02 04 
040198 08 00 00 10 0125   	dl 8, 16, 64002, fn_amiga_forever_8x16
       00 00 02 FA 
       00 1A 03 04 
0401A4 08 00 00 08 0126   	dl 8, 8, 64003, fn_amiga_forever_8x8
       00 00 03 FA 
       00 38 03 04 
0401B0 0A 00 00 0F 0127   	dl 10, 15, 64004, fn_computer_pixel_7_10x15
       00 00 04 FA 
       00 55 03 04 
0401BC 0A 00 00 18 0128   	dl 10, 24, 64005, fn_computer_pixel_7_10x24
       00 00 05 FA 
       00 77 03 04 
0401C8 08 00 00 0C 0129   	dl 8, 12, 64006, fn_computer_pixel_7_8x12
       00 00 06 FA 
       00 99 03 04 
0401D4 08 00 00 0E 0130   	dl 8, 14, 64007, fn_computer_pixel_7_8x14
       00 00 07 FA 
       00 BA 03 04 
0401E0 08 00 00 10 0131   	dl 8, 16, 64008, fn_computer_pixel_7_8x16
       00 00 08 FA 
       00 DB 03 04 
0401EC 08 00 00 08 0132   	dl 8, 8, 64009, fn_dopecre_8x8
       00 00 09 FA 
       00 FC 03 04 
0401F8 08 00 00 08 0133   	dl 8, 8, 64010, fn_gamer_2_8x8
       00 00 0A FA 
       00 13 04 04 
040204 08 00 00 08 0134   	dl 8, 8, 64011, fn_Lat15_VGA8_8x8
       00 00 0B FA 
       00 2A 04 04 
040210 06 00 00 0C 0135   	dl 6, 12, 64012, fn_Lat2_Terminus12x6_6x12
       00 00 0C FA 
       00 44 04 04 
04021C 08 00 00 0E 0136   	dl 8, 14, 64013, fn_Lat2_TerminusBold14_8x14
       00 00 0D FA 
       00 66 04 04 
040228 08 00 00 0E 0137   	dl 8, 14, 64014, fn_Lat2_VGA14_8x14
       00 00 0E FA 
       00 8A 04 04 
040234 08 00 00 10 0138   	dl 8, 16, 64015, fn_Lat2_VGA16_8x16
       00 00 0F FA 
       00 A5 04 04 
040240 08 00 00 08 0139   	dl 8, 8, 64016, fn_Lat2_VGA8_8x8
       00 00 10 FA 
       00 C0 04 04 
04024C 08 00 00 08 0140   	dl 8, 8, 64017, fn_Lat38_VGA8_8x8
       00 00 11 FA 
       00 D9 04 04 
040258 08 00 00 0D 0141   	dl 8, 13, 64018, fn_Lat7_Fixed13_8x13
       00 00 12 FA 
       00 F3 04 04 
040264 06 00 00 0C 0142   	dl 6, 12, 64019, fn_Lat7_Terminus12x6_6x12
       00 00 13 FA 
       00 10 05 04 
040270 08 00 00 10 0143   	dl 8, 16, 64020, fn_Lat7_TerminusBold16_8x16
       00 00 14 FA 
       00 32 05 04 
04027C 08 00 00 0E 0144   	dl 8, 14, 64021, fn_Lat7_VGA14_8x14
       00 00 15 FA 
       00 56 05 04 
040288 08 00 00 10 0145   	dl 8, 16, 64022, fn_Lat7_VGA16_8x16
       00 00 16 FA 
       00 71 05 04 
040294 08 00 00 08 0146   	dl 8, 8, 64023, fn_Lat7_VGA8_8x8
       00 00 17 FA 
       00 8C 05 04 
0402A0 08 00 00 08 0147   	dl 8, 8, 64024, fn_planetary_contact_8x8
       00 00 18 FA 
       00 A5 05 04 
0402AC 0C 00 00 0E 0148   	dl 12, 14, 64025, fn_scriptorium_12x14
       00 00 19 FA 
       00 C6 05 04 
0402B8 08 00 00 0C 0149   	dl 8, 12, 64026, fn_Squarewave_Bold_8x12
       00 00 1A FA 
       00 E3 05 04 
0402C4 08 00 00 08 0150   	dl 8, 8, 64027, fn_super_mario_bros_2_8x8
       00 00 1B FA 
       00 03 06 04 
0402D0 06 00 00 06 0151   	dl 6, 6, 64028, fn_wendy_neue_6x6
       00 00 1C FA 
       00 25 06 04 
0402DC             0152   
0402DC             0153   ; files_list: ; filename:
0402DC 66 6F 6E 74 0154   fn_amiga_forever_16x16: db "fonts/amiga_forever_16x16.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       31 36 78 31 
       36 2E 66 6F 
       6E 74 00    
0402FB 66 6F 6E 74 0155   fn_amiga_forever_16x24: db "fonts/amiga_forever_16x24.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       31 36 78 32 
       34 2E 66 6F 
       6E 74 00    
04031A 66 6F 6E 74 0156   fn_amiga_forever_8x16: db "fonts/amiga_forever_8x16.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       38 78 31 36 
       2E 66 6F 6E 
       74 00       
040338 66 6F 6E 74 0157   fn_amiga_forever_8x8: db "fonts/amiga_forever_8x8.font",0
       73 2F 61 6D 
       69 67 61 5F 
       66 6F 72 65 
       76 65 72 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
040355 66 6F 6E 74 0158   fn_computer_pixel_7_10x15: db "fonts/computer_pixel_7_10x15.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 31 
       30 78 31 35 
       2E 66 6F 6E 
       74 00       
040377 66 6F 6E 74 0159   fn_computer_pixel_7_10x24: db "fonts/computer_pixel_7_10x24.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 31 
       30 78 32 34 
       2E 66 6F 6E 
       74 00       
040399 66 6F 6E 74 0160   fn_computer_pixel_7_8x12: db "fonts/computer_pixel_7_8x12.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 38 
       78 31 32 2E 
       66 6F 6E 74 
       00          
0403BA 66 6F 6E 74 0161   fn_computer_pixel_7_8x14: db "fonts/computer_pixel_7_8x14.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 38 
       78 31 34 2E 
       66 6F 6E 74 
       00          
0403DB 66 6F 6E 74 0162   fn_computer_pixel_7_8x16: db "fonts/computer_pixel_7_8x16.font",0
       73 2F 63 6F 
       6D 70 75 74 
       65 72 5F 70 
       69 78 65 6C 
       5F 37 5F 38 
       78 31 36 2E 
       66 6F 6E 74 
       00          
0403FC 66 6F 6E 74 0163   fn_dopecre_8x8: db "fonts/dopecre_8x8.font",0
       73 2F 64 6F 
       70 65 63 72 
       65 5F 38 78 
       38 2E 66 6F 
       6E 74 00    
040413 66 6F 6E 74 0164   fn_gamer_2_8x8: db "fonts/gamer_2_8x8.font",0
       73 2F 67 61 
       6D 65 72 5F 
       32 5F 38 78 
       38 2E 66 6F 
       6E 74 00    
04042A 66 6F 6E 74 0165   fn_Lat15_VGA8_8x8: db "fonts/Lat15-VGA8_8x8.font",0
       73 2F 4C 61 
       74 31 35 2D 
       56 47 41 38 
       5F 38 78 38 
       2E 66 6F 6E 
       74 00       
040444 66 6F 6E 74 0166   fn_Lat2_Terminus12x6_6x12: db "fonts/Lat2-Terminus12x6_6x12.font",0
       73 2F 4C 61 
       74 32 2D 54 
       65 72 6D 69 
       6E 75 73 31 
       32 78 36 5F 
       36 78 31 32 
       2E 66 6F 6E 
       74 00       
040466 66 6F 6E 74 0167   fn_Lat2_TerminusBold14_8x14: db "fonts/Lat2-TerminusBold14_8x14.font",0
       73 2F 4C 61 
       74 32 2D 54 
       65 72 6D 69 
       6E 75 73 42 
       6F 6C 64 31 
       34 5F 38 78 
       31 34 2E 66 
       6F 6E 74 00 
04048A 66 6F 6E 74 0168   fn_Lat2_VGA14_8x14: db "fonts/Lat2-VGA14_8x14.font",0
       73 2F 4C 61 
       74 32 2D 56 
       47 41 31 34 
       5F 38 78 31 
       34 2E 66 6F 
       6E 74 00    
0404A5 66 6F 6E 74 0169   fn_Lat2_VGA16_8x16: db "fonts/Lat2-VGA16_8x16.font",0
       73 2F 4C 61 
       74 32 2D 56 
       47 41 31 36 
       5F 38 78 31 
       36 2E 66 6F 
       6E 74 00    
0404C0 66 6F 6E 74 0170   fn_Lat2_VGA8_8x8: db "fonts/Lat2-VGA8_8x8.font",0
       73 2F 4C 61 
       74 32 2D 56 
       47 41 38 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
0404D9 66 6F 6E 74 0171   fn_Lat38_VGA8_8x8: db "fonts/Lat38-VGA8_8x8.font",0
       73 2F 4C 61 
       74 33 38 2D 
       56 47 41 38 
       5F 38 78 38 
       2E 66 6F 6E 
       74 00       
0404F3 66 6F 6E 74 0172   fn_Lat7_Fixed13_8x13: db "fonts/Lat7-Fixed13_8x13.font",0
       73 2F 4C 61 
       74 37 2D 46 
       69 78 65 64 
       31 33 5F 38 
       78 31 33 2E 
       66 6F 6E 74 
       00          
040510 66 6F 6E 74 0173   fn_Lat7_Terminus12x6_6x12: db "fonts/Lat7-Terminus12x6_6x12.font",0
       73 2F 4C 61 
       74 37 2D 54 
       65 72 6D 69 
       6E 75 73 31 
       32 78 36 5F 
       36 78 31 32 
       2E 66 6F 6E 
       74 00       
040532 66 6F 6E 74 0174   fn_Lat7_TerminusBold16_8x16: db "fonts/Lat7-TerminusBold16_8x16.font",0
       73 2F 4C 61 
       74 37 2D 54 
       65 72 6D 69 
       6E 75 73 42 
       6F 6C 64 31 
       36 5F 38 78 
       31 36 2E 66 
       6F 6E 74 00 
040556 66 6F 6E 74 0175   fn_Lat7_VGA14_8x14: db "fonts/Lat7-VGA14_8x14.font",0
       73 2F 4C 61 
       74 37 2D 56 
       47 41 31 34 
       5F 38 78 31 
       34 2E 66 6F 
       6E 74 00    
040571 66 6F 6E 74 0176   fn_Lat7_VGA16_8x16: db "fonts/Lat7-VGA16_8x16.font",0
       73 2F 4C 61 
       74 37 2D 56 
       47 41 31 36 
       5F 38 78 31 
       36 2E 66 6F 
       6E 74 00    
04058C 66 6F 6E 74 0177   fn_Lat7_VGA8_8x8: db "fonts/Lat7-VGA8_8x8.font",0
       73 2F 4C 61 
       74 37 2D 56 
       47 41 38 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
0405A5 66 6F 6E 74 0178   fn_planetary_contact_8x8: db "fonts/planetary_contact_8x8.font",0
       73 2F 70 6C 
       61 6E 65 74 
       61 72 79 5F 
       63 6F 6E 74 
       61 63 74 5F 
       38 78 38 2E 
       66 6F 6E 74 
       00          
0405C6 66 6F 6E 74 0179   fn_scriptorium_12x14: db "fonts/scriptorium_12x14.font",0
       73 2F 73 63 
       72 69 70 74 
       6F 72 69 75 
       6D 5F 31 32 
       78 31 34 2E 
       66 6F 6E 74 
       00          
0405E3 66 6F 6E 74 0180   fn_Squarewave_Bold_8x12: db "fonts/Squarewave_Bold_8x12.font",0
       73 2F 53 71 
       75 61 72 65 
       77 61 76 65 
       5F 42 6F 6C 
       64 5F 38 78 
       31 32 2E 66 
       6F 6E 74 00 
040603 66 6F 6E 74 0181   fn_super_mario_bros_2_8x8: db "fonts/super_mario_bros_2_8x8.font",0
       73 2F 73 75 
       70 65 72 5F 
       6D 61 72 69 
       6F 5F 62 72 
       6F 73 5F 32 
       5F 38 78 38 
       2E 66 6F 6E 
       74 00       
040625 66 6F 6E 74 0182   fn_wendy_neue_6x6: db "fonts/wendy_neue_6x6.font",0
       73 2F 77 65 
       6E 64 79 5F 
       6E 65 75 65 
       5F 36 78 36 
       2E 66 6F 6E 
       74 00       
04063F             0183   
04063F             0184   ; fonts.inc
04063F             0185   fonts_load:
04063F DD 21 80 01 0186       ld ix,font_list ; pointer to font list lookup
       04          
040644 06 1D       0187       ld b,num_fonts ; loop counter
040646             0188   
040646             0189   @load_loop:
040646 C5          0190       push bc ; save loop counter
040647             0191   
040647             0192   ; load font into a buffer
040647 DD 27 06    0193       ld hl,(ix+font_list_bufferId)
04064A DD 31 09    0194       ld iy,(ix+font_list_filename)
04064D CD 47 07 04 0195       call vdu_load_buffer_from_file
040651             0196   
040651             0197   ; create font from buffer
040651 DD 27 06    0198       ld hl,(ix+font_list_bufferId)
040654 DD 5E 00    0199       ld e,(ix+font_list_width)
040657 DD 56 03    0200       ld d,(ix+font_list_height)
04065A 3E 00       0201       ld a,0 ; flags
04065C CD 95 06 04 0202       call vdu_font_create
040660             0203   
040660             0204   ; comment out this block if you want a "silent" font load
040660             0205   ; select font
040660 DD 27 06    0206       ld hl,(ix+font_list_bufferId)
040663 3E 01       0207       ld a,1 ; flags
040665 CD 7B 06 04 0208       call vdu_font_select
040669             0209   ; print font filename
040669 CD 15 07 04 0210       call printNewLine
04066D DD 27 09    0211       ld hl,(ix+font_list_filename)
040670 CD 20 07 04 0212       call printString
040674             0213   
040674             0214   ; advance font_list pointer to next record
040674 ED 32 0C    0215       lea ix,ix+font_list_record_size
040677             0216   
040677             0217   ; restore loop counter
040677 C1          0218       pop bc
040678 10 CC       0219       djnz @load_loop
04067A             0220   
04067A             0221   ; all done
04067A C9          0222       ret
04067B             0223   
04067B             0224   ; vdu_fonts.inc
04067B             0225   ; select font
04067B             0226   ; inputs: hl = bufferId, a = font flags
04067B             0227   ; Flags:
04067B             0228   ; Bit	Description
04067B             0229   ; 0	Adjust cursor position to ensure text baseline is aligned
04067B             0230   ;   0: Do not adjust cursor position (best for changing font on a new line)
04067B             0231   ;   1: Adjust cursor position (best for changing font in the middle of a line)
04067B             0232   ; 1-7	Reserved for future use
04067B             0233   ; VDU 23, 0, &95, 0, bufferId; flags: Select font
04067B             0234   vdu_font_select:
04067B 22 92 06 04 0235       ld (@bufferId),hl
04067F 32 94 06 04 0236       ld (@flags),a
040683 21 8E 06 04 0237       ld hl,@cmd
040687 01 07 00 00 0238       ld bc,@end-@cmd
04068B 5B DF       0239       rst.lil $18
04068D C9          0240       ret
04068E 17 00 95 00 0241   @cmd: db 23, 0, 0x95, 0
040692 00 00       0242   @bufferId: dw 0x0000
040694 00          0243   @flags: db 0x00
040695             0244   @end:
040695             0245   
040695             0246   ; create font from buffer
040695             0247   ; inputs: hl = bufferId, e = width, d = height, d = ascent, a = flags
040695             0248   ; VDU 23, 0, &95, 1, bufferId; width, height, ascent, flags: Create font from buffer
040695             0249   vdu_font_create:
040695 22 BA 06 04 0250       ld (@bufferId),hl
040699 ED 53 BC 06 0251       ld (@width),de ; also loads height
       04          
04069E 32 BF 06 04 0252       ld (@flags),a
0406A2 7A          0253       ld a,d ; height
0406A3 32 BE 06 04 0254       ld (@ascent),a ; ascent = height
0406A7             0255   ; consolidate buffer
0406A7 CD B0 08 04 0256       call vdu_consolidate_buffer
0406AB             0257   ; create font
0406AB 21 B6 06 04 0258       ld hl,@cmd
0406AF 01 0A 00 00 0259       ld bc,@end-@cmd
0406B3 5B DF       0260       rst.lil $18
0406B5 C9          0261       ret
0406B6 17 00 95 01 0262   @cmd: db 23, 0, 0x95, 1
0406BA 00 00       0263   @bufferId: dw 0x0000
0406BC 00          0264   @width: db 0x00
0406BD 00          0265   @height: db 0x00
0406BE 00          0266   @ascent: db 0x00
0406BF 00          0267   @flags: db 0x00
0406C0             0268   @end:
0406C0             0269   
0406C0             0270   ; set or adjust font property
0406C0             0271   ; inputs: hl = bufferId, a = field, de = value
0406C0             0272   ; VDU 23, 0, &95, 2, bufferId; field, value;: Set or adjust font property
0406C0             0273   vdu_font_property:
0406C0 22 DC 06 04 0274       ld (@bufferId),hl
0406C4 32 DE 06 04 0275       ld (@field),a
0406C8 ED 53 DF 06 0276       ld (@value),de
       04          
0406CD 21 D8 06 04 0277       ld hl,@cmd
0406D1 01 09 00 00 0278       ld bc,@end-@cmd
0406D5 5B DF       0279       rst.lil $18
0406D7 C9          0280       ret
0406D8 17 00 95 02 0281   @cmd: db 23, 0, 0x95, 2
0406DC 00 00       0282   @bufferId: dw 0x0000
0406DE 00          0283   @field: db 0x00
0406DF 00 00       0284   @value: dw 0x0000
0406E1 00          0285   @end: db 0x00 ; padding
0406E2             0286   
0406E2             0287   ; VDU 23, 0, &95, 3, bufferId; [<args>]: Reserved
0406E2             0288   
0406E2             0289   ; Clear/Delete font
0406E2             0290   ; inputs: hl = bufferId
0406E2             0291   ; VDU 23, 0, &95, 4, bufferId;: Clear/Delete font
0406E2             0292   vdu_font_clear:
0406E2 22 F5 06 04 0293       ld (@bufferId),hl
0406E6 21 F1 06 04 0294       ld hl,@cmd
0406EA 01 06 00 00 0295       ld bc,@end-@cmd
0406EE 5B DF       0296       rst.lil $18
0406F0 C9          0297       ret
0406F1 17 00 95 04 0298   @cmd: db 23, 0, 0x95, 4
0406F5 00 00       0299   @bufferId: dw 0x0000
0406F7 00          0300   @end: db 0x00 ; padding
0406F8             0301   
0406F8             0302   ; Copy system font to buffer
0406F8             0303   ; inputs: hl = bufferId
0406F8             0304   ; VDU 23, 0, &95, 5, bufferId;: Copy system font to buffer
0406F8             0305   vdu_font_copy_system:
0406F8 22 0B 07 04 0306       ld (@bufferId),hl
0406FC 21 07 07 04 0307       ld hl,@cmd
040700 01 06 00 00 0308       ld bc,@end-@cmd
040704 5B DF       0309       rst.lil $18
040706 C9          0310       ret
040707 17 00 95 05 0311   @cmd: db 23, 0, 0x95, 5
04070B 00 00       0312   @bufferId: dw 0x0000
04070D 00          0313   @end: db 0x00 ; padding
04070E             0314   
04070E             0315   ; functions.inc
04070E             0316   ; Print a zero-terminated string inline with code, e.g.:
04070E             0317   ;
04070E             0318   ;    call printInline
04070E             0319   ;    ASCIZ "Hello, world!\r\n"
04070E             0320   ;
04070E             0321   ; Destroys: HL,AF
04070E             0322   printInline:
04070E E1          0323       pop hl ; get the return address = pointer to start of string
04070F CD 20 07 04 0324       call printString ; HL advances to end of string
040713 E5          0325       push hl ; restore the return address = pointer to end of string
040714 C9          0326       ret
040715             0327   
040715             0328   ; Print Newline sequence to VDP
040715             0329   ; destroys bc
040715             0330   printNewLine:
040715 F5          0331       push af ; for some reason rst.lil 10h sets carry flag
040716 3E 0D       0332       LD A, '\r'
040718 5B D7       0333       RST.LIL 10h
04071A 3E 0A       0334       LD A, '\n'
04071C 5B D7       0335       RST.LIL 10h
04071E F1          0336       pop af
04071F C9          0337       RET
040720             0338   
040720             0339   ; Print a zero-terminated string
040720             0340   ; HL: Pointer to string
040720             0341   printString:
040720 C5          0342       PUSH BC
040721 01 00 00 00 0343       LD BC,0
040725 3E 00       0344       LD A,0
040727 5B DF       0345       RST.LIL 18h
040729 C1          0346       POP BC
04072A C9          0347       RET
04072B             0348   
04072B             0349   ; vdu.inc
04072B             0350   ; scratch variables
04072B 00 00 00    0351   bufferId0: dl 0x000000
04072E 00 00 00    0352   bufferId1: dl 0x000000
040731             0353   
040731             0354   vdu_set_screen_mode:
040731 32 41 07 04 0355   	ld (@arg),a
040735 21 40 07 04 0356   	ld hl,@cmd
040739 01 02 00 00 0357   	ld bc,@end-@cmd
04073D 5B DF       0358   	rst.lil $18
04073F C9          0359   	ret
040740 16          0360   @cmd: db 22 ; set screen mode
040741 00          0361   @arg: db 0  ; screen mode parameter
040742             0362   @end:
040742             0363   
040742             0364   ; VDU 12: Clear text area (CLS)
040742             0365   vdu_cls:
040742 3E 0C       0366       ld a,12
040744 5B D7       0367   	rst.lil $10
040746 C9          0368   	ret
040747             0369   
040747             0370   ; inputs: hl = bufferId; iy = pointer to filename
040747             0371   vdu_load_buffer_from_file:
040747 22 2B 07 04 0372       ld (bufferId0),hl
04074B             0373   
04074B             0374   ; clear target buffer
04074B CD 08 09 04 0375       call vdu_clear_buffer
04074F             0376   
04074F             0377   ; open the file in read mode
04074F             0378   ; Open a file
04074F             0379   ; HLU: Filename
04074F             0380   ;   C: Mode
04074F             0381   ; Returns:
04074F             0382   ;   A: Filehandle, or 0 if couldn't open
04074F FD E5       0383   	push iy ; pointer to filename
040751 E1          0384   	pop hl
040752 0E 01       0385   	ld c,fa_read
040754             0386       MOSCALL mos_fopen
040754 3E 0A       0001M1 			LD	A, function
040756 5B CF       0002M1 			RST.LIL	08h
040758 32 93 07 04 0387       ld (@filehandle),a
04075C             0388   
04075C             0389   @read_file:
04075C             0390   ; Read a block of data from a file
04075C             0391   ;   C: Filehandle
04075C             0392   ; HLU: Pointer to where to write the data to
04075C             0393   ; DEU: Number of bytes to read
04075C             0394   ; Returns:
04075C             0395   ; DEU: Number of bytes read
04075C 3A 93 07 04 0396       ld a,(@filehandle)
040760 4F          0397       ld c,a
040761 21 23 09 04 0398       ld hl,filedata
040765 11 00 20 00 0399       ld de,8192 ; max we can read into onboard sram at one time
040769             0400       MOSCALL mos_fread
040769 3E 1A       0001M1 			LD	A, function
04076B 5B CF       0002M1 			RST.LIL	08h
04076D             0401   
04076D             0402   ; test de for zero bytes read
04076D 21 00 00 00 0403       ld hl,0
040771 AF          0404       xor a ; clear carry
040772 ED 52       0405       sbc hl,de
040774 CA 8A 07 04 0406       jp z,@close_file
040778             0407   
040778             0408   ; load a vdu buffer from local memory
040778             0409   ; inputs: hl = bufferId ; bc = length ; de = pointer to data
040778 2A 2B 07 04 0410       ld hl,(bufferId0)
04077C D5          0411       push de ; chunksize
04077D C1          0412       pop bc
04077E 11 23 09 04 0413       ld de,filedata
040782 CD CB 08 04 0414       call vdu_load_buffer
040786             0415   
040786             0416   ; read the next block
040786 C3 5C 07 04 0417       jp @read_file
04078A             0418   
04078A             0419   ; close the file
04078A             0420   @close_file:
04078A 3A 93 07 04 0421       ld a,(@filehandle)
04078E             0422       MOSCALL mos_fclose
04078E 3E 0B       0001M1 			LD	A, function
040790 5B CF       0002M1 			RST.LIL	08h
040792 C9          0423       ret ; vdu_load_buffer_from_file
040793             0424   
040793 00          0425   @filehandle: db 0 ; file handle
040794 00 00 00    0426   @fil: dl 0 ; pointer to FIL struct
040797             0427   
040797 00 00 00    0428   @chunkpointer: dl 0 ; pointer to current chunk
04079A             0429   
04079A             0430   ; File information structure (FILINFO)
04079A             0431   @filinfo:
04079A 00 00 00 00 0432   @filinfo_fsize:    blkb 4, 0   ; File size (4 bytes)
04079E 00 00       0433   @filinfo_fdate:    blkb 2, 0   ; Modified date (2 bytes)
0407A0 00 00       0434   @filinfo_ftime:    blkb 2, 0   ; Modified time (2 bytes)
0407A2 00          0435   @filinfo_fattrib:  blkb 1, 0   ; File attribute (1 byte)
0407A3 00 00 00 00 0436   @filinfo_altname:  blkb 13, 0  ; Alternative file name (13 bytes)
       00 00 00 00 
       00 00 00 00 
       00          
0407B0 00 00 00 00 0437   @filinfo_fname:    blkb 256, 0 ; Primary file name (256 bytes)
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
       00 00 00 00 
0408B0             0438   
0408B0             0439   ; Command 14: Consolidate blocks in a buffer
0408B0             0440   vdu_consolidate_buffer:
0408B0             0441   ; set parameters for vdu call
0408B0 7D          0442       ld a,l
0408B1 32 C8 08 04 0443       ld (@bufferId),a
0408B5 7C          0444       ld a,h
0408B6 32 C9 08 04 0445       ld (@bufferId+1),a
0408BA 21 C5 08 04 0446       ld hl,@beg
0408BE 01 06 00 00 0447       ld bc,@end-@beg
0408C2 5B DF       0448       rst.lil $18
0408C4 C9          0449       ret
0408C5             0450   ; VDU 23, 0, &A0, bufferId; 14
0408C5 17 00 A0    0451   @beg: db 23,0,0xA0
0408C8 00 00       0452   @bufferId: dw 0x0000
0408CA 0E          0453              db 14
0408CB             0454   @end:
0408CB             0455   
0408CB             0456   
0408CB             0457   ; load a vdu buffer from local memory
0408CB             0458   ; inputs: hl = bufferId ; bc = length ; de = pointer to data
0408CB             0459   vdu_load_buffer:
0408CB ED 43 F4 08 0460       ld (@length),bc
       04          
0408D0 D5          0461       push de ; save data pointer
0408D1             0462   ; send the vdu command string
0408D1 7D          0463       ld a,l
0408D2 32 F1 08 04 0464       ld (@bufferId),a
0408D6 7C          0465       ld a,h
0408D7 32 F2 08 04 0466       ld (@bufferId+1),a
0408DB 21 EE 08 04 0467       ld hl,@cmd
0408DF 01 08 00 00 0468       ld bc,@end-@cmd
0408E3 5B DF       0469       rst.lil $18
0408E5             0470   ; send the buffer data
0408E5 E1          0471       pop hl ; pointer to data
0408E6 ED 4B F4 08 0472       ld bc,(@length)
       04          
0408EB 5B DF       0473       rst.lil $18 ; send it
0408ED C9          0474       ret
0408EE             0475   ; Upload data :: VDU 23, 0 &A0, bufferId; 0, length; <buffer-data>
0408EE 17 00 A0    0476   @cmd:       db 23,0,0xA0
0408F1 00 00       0477   @bufferId:	dw 0x0000
0408F3 00          0478   		    db 0 ; load buffer
0408F4 00 00       0479   @length:	dw 0x0000
0408F6 00          0480   @end: db 0 ; padding
0408F7             0481   
0408F7             0482   ; vdu_buffered_api.inc
0408F7             0483   
0408F7             0484   ; Clear all buffers
0408F7             0485   ; inputs: none
0408F7             0486   vdu_clear_all_buffers:
0408F7             0487   ; clear all buffers
0408F7 21 02 09 04 0488       ld hl,@beg
0408FB 01 06 00 00 0489       ld bc,@end-@beg
0408FF 5B DF       0490       rst.lil $18
040901 C9          0491       ret
040902 17 00 A0    0492   @beg: db 23,0,$A0
040905 FF FF       0493         dw -1 ; bufferId -1 (65535) means clear all buffers
040907 02          0494         db 2  ; command 2: clear a buffer
040908             0495   @end:
040908             0496   ; end vdu_clear_all_buffers
040908             0497   
040908             0498   ; Command 2: Clear a buffer
040908             0499   ; VDU 23, 0 &A0, bufferId; 2
040908             0500   ; inputs: hl = bufferId
040908             0501   vdu_clear_buffer:
040908 22 20 09 04 0502       ld (@bufferId),hl
04090C 3E 02       0503       ld a,2 ; clear buffer
04090E 32 22 09 04 0504       ld (@bufferId+2),a
040912 21 1D 09 04 0505       ld hl,@cmd
040916 01 06 00 00 0506       ld bc,@end-@cmd
04091A 5B DF       0507       rst.lil $18
04091C C9          0508       ret
04091D 17 00 A0    0509   @cmd:     db 23,0,0xA0
040920 00 00       0510   @bufferId: dw 0x0000
040922 02          0511              db 2 ; clear buffer
040923             0512   @end:
040923             0513   ; end vdu_clear_buffer
040923             0514   
040923             0515   ; must be last line of program so filedata doesn't stomp on code or other data
040923             0516   filedata: equ $
